{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_configData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_immutables",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_maxLTV",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penaltyRate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isBorrowerWhitelistActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isLenderWhitelistActive",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadProtocolFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadSwapper",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowerSolvent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowerWhitelistRequired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_borrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        }
      ],
      "name": "Insolvent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_request",
          "type": "uint256"
        }
      ],
      "name": "InsufficientAssetsInContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_expected",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_actual",
          "type": "address"
        }
      ],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotDeployer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "NotOnWhitelist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyApprovedBorrowers",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyApprovedLenders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyTimeLock",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "OracleLTEZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "PastDeadline",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PastMaturity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolOrOwnerOnly",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_actual",
          "type": "uint256"
        }
      ],
      "name": "SlippageTooHigh",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "AddCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_interestEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_deltaTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_feesAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_feesShare",
          "type": "uint256"
        }
      ],
      "name": "AddInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesAdded",
          "type": "uint256"
        }
      ],
      "name": "BorrowAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "_newFee",
          "type": "uint32"
        }
      ],
      "name": "ChangeFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_swapperAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_borrowShares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_initialCollateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountCollateralOut",
          "type": "uint256"
        }
      ],
      "name": "LeveragedPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralForLiquidator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesToLiquidate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountLiquidatorToRepay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesToAdjust",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToAdjust",
          "type": "uint256"
        }
      ],
      "name": "Liquidate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "RemoveCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_payer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToRepay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "RepayAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_swapperAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralToSwap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountAssetOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesRepaid",
          "type": "uint256"
        }
      ],
      "name": "RepayAssetWithCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "SetApprovedBorrower",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "SetApprovedLender",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "SetSwapper",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "SetTimeLock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "UpdateExchangeRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ratePerSec",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_deltaTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_utilizationRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newRatePerSec",
          "type": "uint256"
        }
      ],
      "name": "UpdateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "_shares",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToTransfer",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFees",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CIRCUIT_BREAKER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMPTROLLER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEPLOYER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FRAXLEND_WHITELIST_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIME_LOCK_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_interestEarned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feesAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feesShare",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_newRate",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedBorrowers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedLenders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "borrowAsset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowerWhitelistActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_newFee",
          "type": "uint32"
        }
      ],
      "name": "changeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cleanLiquidationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRateInfo",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "lastBlock",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "feeToProtocolRate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "lastTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "ratePerSec",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_sharesReceived",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dirtyLiquidationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint224",
          "name": "exchangeRate",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConstants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_LTV_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_LIQ_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_UTIL_PREC",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_FEE_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_EXCHANGE_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_DEFAULT_INT",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "_DEFAULT_PROTOCOL_FEE",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_MAX_PROTOCOL_FEE",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImmutableAddressBool",
      "outputs": [
        {
          "internalType": "address",
          "name": "_assetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleMultiply",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleDivide",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rateContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_DEPLOYER_CONTRACT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_COMPTROLLER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_FRAXLEND_WHITELIST",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_borrowerWhitelistActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_lenderWhitelistActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImmutableUint256",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_oracleNormalization",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxLTV",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cleanLiquidationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penaltyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPairAccounting",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "_totalAssetAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalAssetShares",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalBorrowAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalBorrowShares",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "_totalCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_userAssetShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userBorrowShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCollateralBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_approvedBorrowers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_approvedLenders",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_rateInitCallData",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lenderWhitelistActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapperAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountCollateralOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "leveragedPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_totalCollateralBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_sharesToLiquidate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_collateralForLiquidator",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLTV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDivide",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleMultiply",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleNormalization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rateContract",
      "outputs": [
        {
          "internalType": "contract IRateCalculator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rateInitCallData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToReturn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "removeCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "repayAsset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToRepay",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapperAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralToSwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountAssetOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "repayAssetWithCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountAssetOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_borrowers",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "setApprovedBorrowers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_lenders",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "setApprovedLenders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapper",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "setSwapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "setTimeLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swappers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toAssetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toAssetShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toBorrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toBorrowShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAsset",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "shares",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrow",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "shares",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBorrowShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_shares",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToTransfer",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6102e060405260056102a0908152640312e302e360dc1b6102c052600790620000299082620005cb565b503480156200003757600080fd5b50604051620068c4380380620068c48339810160408190526200005a916200075c565b878787878787878760405180602001604052806000815250604051806020016040528060008152508160039081620000939190620005cb565b506004620000a28282620005cb565b505050620000bf620000b9620004d060201b60201c565b620004d4565b6005805460ff60a01b1916905560016006558651600090819081908190620000f1908c016020908101908d016200082a565b9350935093509350336001600160a01b03166101a0816001600160a01b031681525050836001600160a01b03166101c0816001600160a01b031681525050826001600160a01b03166101e0816001600160a01b03168152505081600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316610200816001600160a01b031681525050505050506000806000806000808d806020019051810190620001af919062000887565b50955095509550955095509550856001600160a01b03166080816001600160a01b031681525050846001600160a01b031660a0816001600160a01b031681525050600061ffff16600c60000160086101000a8154816001600160401b0302191690836001600160401b031602179055508a6101408181525050620186a08b62015f906200023d91906200092f565b6200024991906200095b565b61016052620186a08c108015906200025f575087155b156200027e57604051631d74772960e31b815260040160405180910390fd5b6101208c9052610200516001600160a01b038516158015906200030b57506040516373015f9360e11b81526001600160a01b03868116600483015282169063e602bf2690602401602060405180830381865afa158015620002e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030991906200097e565b155b156200033a57604051630f19dca360e01b81526001600160a01b03861660048201526024015b60405180910390fd5b6001600160a01b03841615801590620003bd57506040516373015f9360e11b81526001600160a01b03858116600483015282169063e602bf2690602401602060405180830381865afa15801562000395573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003bb91906200097e565b155b15620003e857604051630f19dca360e01b81526001600160a01b038516600482015260240162000331565b6001600160a01b0385811660c05284811660e05261010084905260405163f3a51aa160e01b815283821660048201529082169063f3a51aa190602401602060405180830381865afa15801562000442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200046891906200097e565b6200049257604051630f19dca360e01b81526001600160a01b038316600482015260240162000331565b506001600160a01b031661018052505050509115156102605215156102805250610220919091526102405250620009a39a5050505050505050505050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200055157607f821691505b6020821081036200057257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005c657600081815260208120601f850160051c81016020861015620005a15750805b601f850160051c820191505b81811015620005c257828155600101620005ad565b5050505b505050565b81516001600160401b03811115620005e757620005e762000526565b620005ff81620005f884546200053c565b8462000578565b602080601f8311600181146200063757600084156200061e5750858301515b600019600386901b1c1916600185901b178555620005c2565b600085815260208120601f198616915b82811015620006685788860151825594840194600190910190840162000647565b5085821015620006875787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082601f830112620006a957600080fd5b81516001600160401b0380821115620006c657620006c662000526565b604051601f8301601f19908116603f01168101908282118183101715620006f157620006f162000526565b816040528381526020925086838588010111156200070e57600080fd5b600091505b8382101562000732578582018301518183018401529082019062000713565b600093810190920192909252949350505050565b805180151581146200075757600080fd5b919050565b600080600080600080600080610100898b0312156200077a57600080fd5b88516001600160401b03808211156200079257600080fd5b620007a08c838d0162000697565b995060208b0151915080821115620007b757600080fd5b50620007c68b828c0162000697565b97505060408901519550606089015194506080890151935060a08901519250620007f360c08a0162000746565b91506200080360e08a0162000746565b90509295985092959890939650565b80516001600160a01b03811681146200075757600080fd5b600080600080608085870312156200084157600080fd5b6200084c8562000812565b93506200085c6020860162000812565b92506200086c6040860162000812565b91506200087c6060860162000812565b905092959194509250565b600080600080600080600060e0888a031215620008a357600080fd5b620008ae8862000812565b9650620008be6020890162000812565b9550620008ce6040890162000812565b9450620008de6060890162000812565b935060808801519250620008f560a0890162000812565b60c08901519092506001600160401b038111156200091257600080fd5b620009208a828b0162000697565b91505092959891949750929550565b80820281158282048414176200095557634e487b7160e01b600052601160045260246000fd5b92915050565b6000826200097957634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200099157600080fd5b6200099c8262000746565b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516102605161028051615cd762000bed60003960008181610705015281816107f001528181611076015281816114a401526115b3015260008181610549015281816106dc01528181611ec0015281816124b90152612ec4015260008181610cf901528181610f0401526136ac015260008181610cd201528181610ede0152818161400701526140310152600081816106b20152610d8001526000818161068a01528181610dff015281816113020152611a5b015260008181610aba0152611a2701526000818161066201528181610c9801528181611aa70152611c5c01526000818161063a01528181610d5901528181611def01526137420152600081816107c901526117a501526000818161050a01528181610eb6015261173a015260008181610dba01528181610e90015281816141fb01526142f2015260008181610b7801528181610e6d0152613322015260008181610447015281816106120152818161320c0152818161323d01526132e20152600081816105e801528181610a5a015281816130f90152818161312a01526131cf0152600081816105c001528181610bb201528181611bcd01528181611f6c015281816127a0015281816143ea01526145ce01526000818161059b0152818161073701528181611bff01528181611f4a0152818161277e01528181612ddc01528181613e540152818161412301528181614781015261492e0152615cd76000f3fe608060405234801561001057600080fd5b506004361061043d5760003560e01c806395d14ca811610236578063c936c6241161013b578063dd62ed3e116100c3578063f384bd0511610087578063f384bd0514610db5578063f9557ccb14610ddc578063fbaa8b8514610dfa578063fbbbf94c14610e21578063fea10d5d14610e6757600080fd5b8063dd62ed3e14610d2e578063e5f13b1614610d41578063eee2421914610d54578063ef14900d14610d7b578063f2fde38b14610da257600080fd5b8063d2a156e01161010a578063d2a156e014610c93578063d41ddc9614610cba578063d59624b414610ccd578063d6b7494f14610cf4578063daf33f2a14610d1b57600080fd5b8063c936c62414610bdc578063ca2298fe14610bff578063cadac47914610c12578063cdd72d5214610c2557600080fd5b8063afa85de6116101be578063ba0876521161018d578063ba08765214610b60578063c10c92a114610b73578063c270a54414610b9a578063c6e1c7c914610bad578063c7be978614610bd457600080fd5b8063afa85de614610adc578063b054898b14610aff578063b5af306214610b12578063b68d0a0914610b3257600080fd5b80639bdff2e6116102055780639bdff2e614610a55578063a053db6814610a7c578063a457c2d714610a8f578063a9059cbb14610aa2578063ad0c3bb514610ab557600080fd5b806395d14ca81461098557806395d89b41146109ea57806399024fc1146109f25780639a295e7314610a0557600080fd5b80634732428c1161034757806370a08231116102cf5780638456cb59116102935780638456cb5914610923578063891682d21461092b5780638cad7fbe1461093e5780638da5cb5b1461096157806394e301e01461097257600080fd5b806370a082311461088e578063715018a6146108b7578063721b0a47146108bf5780638142dd53146108d25780638285ef40146108e557600080fd5b806354fd4d501161031657806354fd4d501461083b57806356968f97146108435780635c975abb14610856578063657a409c146108685780636e553f651461087b57600080fd5b80634732428c146107c45780634962e494146107eb5780634ac8eb5f146108125780634fd422df1461081b57600080fd5b8063313ce567116103ca5780633cc32aba116103995780633cc32aba1461076e5780633d417d2d146107835780633f2617cb146107965780633f4ba83a146107a9578063404ffa7a146107b157600080fd5b8063313ce5671461057e57806336fad62d1461058d57806338d52e0f14610735578063395093511461075b57600080fd5b80630d09365c116104115780630d09365c146104d457806311a2e4bc1461050557806318160ddd1461052c5780632165d72f1461054457806323b872dd1461056b57600080fd5b806253f7331461044257806302ce728f1461048657806306fdde031461049c578063095ea7b3146104b1575b600080fd5b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61048e610f30565b60405190815260200161047d565b6104a4610f51565b60405161047d9190615092565b6104c46104bf3660046150bc565b610fe3565b604051901515815260200161047d565b6104dc610ffd565b604080519485526020850193909352918301526001600160401b0316606082015260800161047d565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b600e54600160801b90046001600160801b031661048e565b6104c47f000000000000000000000000000000000000000000000000000000000000000081565b6104c46105793660046150e6565b61102b565b6040516012815260200161047d565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000008116928201929092527f0000000000000000000000000000000000000000000000000000000000000000821660608201527f0000000000000000000000000000000000000000000000000000000000000000821660808201527f0000000000000000000000000000000000000000000000000000000000000000821660a08201527f0000000000000000000000000000000000000000000000000000000000000000821660c08201527f00000000000000000000000000000000000000000000000000000000000000009190911660e08201527f000000000000000000000000000000000000000000000000000000000000000015156101008201527f000000000000000000000000000000000000000000000000000000000000000015156101208201526101400161047d565b7f0000000000000000000000000000000000000000000000000000000000000000610469565b6104c46107693660046150bc565b611051565b61078161077c36600461517b565b611073565b005b61048e6107913660046151d1565b611216565b6107816107a43660046151fd565b61128c565b6107816112f7565b61048e6107bf366004615234565b61136f565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b6104c47f000000000000000000000000000000000000000000000000000000000000000081565b61048e60105481565b61048e610829366004615259565b60126020526000908152604090205481565b6104a46113a5565b61048e610851366004615234565b611433565b600554600160a01b900460ff166104c4565b600a54610469906001600160a01b031681565b61048e6108893660046151d1565b611469565b61048e61089c366004615259565b6001600160a01b031660009081526020819052604090205490565b61078161158c565b61048e6108cd36600461528b565b61159e565b6107816108e03660046152c7565b611951565b600f54610903906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161047d565b610781611a1c565b610781610939366004615259565b611afc565b6104c461094c366004615259565b60096020526000908152604090205460ff1681565b6005546001600160a01b0316610469565b61048e610980366004615234565b611b90565b600c546109b7906001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b039586168152938516602085015291841691830191909152909116606082015260800161047d565b6104a4611bc6565b610781610a0036600461532e565b611c51565b60408051620186a0808252602082018190529181018290526060810191909152670de0b6b3a7640000608082015263096ba6c460a0820152600060c082015261c35060e08201526101000161047d565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b61048e610a8a36600461545a565b611e86565b6104c4610a9d3660046150bc565b612423565b6104c4610ab03660046150bc565b6124a9565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104c4610aea366004615259565b60146020526000908152604090205460ff1681565b610781610b0d36600461517b565b6124b7565b61048e610b20366004615259565b60116020526000908152604090205481565b610b45610b40366004615259565b612635565b6040805193845260208401929092529082015260600161047d565b61048e610b6e366004615526565b61268a565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e610ba8366004615234565b612700565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104a4612736565b6104c4610bea366004615259565b60136020526000908152604090205460ff1681565b61048e610c0d366004615559565b612743565b610781610c203660046151d1565b612b8e565b604080518082018252600e546001600160801b03808216808452600160801b928390048216602094850181905285518087018752600f54808516808352959004909316928501839052601054865192835294820152938401919091526060830152608082015260a00161047d565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b610781610cc83660046151d1565b612be1565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e610d293660046155c0565b612ca0565b61048e610d3c3660046155ea565b612e5e565b61048e610d4f366004615606565b612e89565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b610781610db0366004615259565b612fcb565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b600e54610903906001600160801b0380821691600160801b90041682565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b600d54610e439063ffffffff811690600160201b90046001600160e01b031682565b6040805163ffffffff90931683526001600160e01b0390911660208301520161047d565b604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f0000000000000000000000000000000000000000000000000000000000000000608082015260a00161047d565b6000610f3a613044565b610f4261309d565b9050610f4e6001600655565b90565b6060600b8054610f6090615632565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8c90615632565b8015610fd95780601f10610fae57610100808354040283529160200191610fd9565b820191906000526020600020905b815481529060010190602001808311610fbc57829003601f168201915b5050505050905090565b600033610ff18185856133d7565b60019150505b92915050565b60008060008061100b613044565b6110136134fc565b93509350935093506110256001600655565b90919293565b600033611039858285613a88565b611044858585613afc565b60019150505b9392505050565b600033610ff18185856110648383612e5e565b61106e9190615682565b6133d7565b337f000000000000000000000000000000000000000000000000000000000000000080156110d457503360009081526014602052604090205460ff1615806110d457506001600160a01b03811660009081526014602052604090205460ff16155b156110f2576040516395a584f760e01b815260040160405180910390fd5b60005b8381101561120f57828061113857503385858381811061111757611117615695565b905060200201602081019061112c9190615259565b6001600160a01b031614155b156111fd57826014600087878581811061115457611154615695565b90506020020160208101906111699190615259565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558484828181106111a3576111a3615695565b90506020020160208101906111b89190615259565b6001600160a01b03167f3bb51c63bf139c4bc98211d74c51aafae8b743fd3090bee8b6bfe2026678a250846040516111f4911515815260200190565b60405180910390a25b80611207816156ab565b9150506110f5565b5050505050565b6000611220613044565b6112286134fc565b505060408051808201909152600f546001600160801b038082168352600160801b9091041660208201529150611262905081856001613ca0565b91506112818161127184613d3c565b61127a87613d3c565b3387613da9565b50610ff76001600655565b611294613edf565b6001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527fea1eefb4fd58778d7b274fe54045a9feeec8f2847899c2e71126d3a74d486da5910160405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061133b57506005546001600160a01b03163314155b1561135957604051638f5b12a760e01b815260040160405180910390fd5b6113616134fc565b5050505061136d613f39565b565b60408051808201909152600e546001600160801b038082168352600160801b90910416602082015260009061104a908484613ca0565b600780546113b290615632565b80601f01602080910402602001604051908101604052809291908181526020018280546113de90615632565b801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b505050505081565b60408051808201909152600e546001600160801b038082168352600160801b90910416602082015260009061104a908484613f8e565b6000611473613044565b61147b614003565b156114995760405163b063a8a560e01b815260040160405180910390fd5b6114a1614058565b817f0000000000000000000000000000000000000000000000000000000000000000801561150257503360009081526014602052604090205460ff16158061150257506001600160a01b03811660009081526014602052604090205460ff16155b15611520576040516395a584f760e01b815260040160405180910390fd5b6115286134fc565b505060408051808201909152600e546001600160801b038082168352600160801b9091041660208201529150611562905081866000613f8e565b92506115808161157187613d3c565b61157a86613d3c565b876140a5565b5050610ff76001600655565b611594613edf565b61136d60006141a5565b60006115a8614058565b6115b0613044565b337f0000000000000000000000000000000000000000000000000000000000000000801561161157503360009081526014602052604090205460ff16158061161157506001600160a01b03811660009081526014602052604090205460ff16155b1561162f576040516395a584f760e01b815260040160405180910390fd5b8342111561165e57604051635ba2a8d560e01b8152426004820152602481018590526044015b60405180910390fd5b6116666134fc565b50505050600061167461309d565b905061168084826141f7565b1561169e57604051633af2cafd60e11b815260040160405180910390fd5b604080518082018252600f546001600160801b038082168352600160801b909104166020808301919091526001600160a01b03871660009081526011825283812054601290925292832054919290916116f690613d3c565b9050600080670de0b6b3a764000086611719876001600160801b038f1685613ca0565b61172391906156c4565b61172d91906156db565b90506000620186a061175f7f000000000000000000000000000000000000000000000000000000000000000082615682565b61176990846156c4565b61177391906156db565b905061177e8161431d565b6117878661431d565b61179191906156fd565b925060008313156117e357620186a06117ca7f000000000000000000000000000000000000000000000000000000000000000082615682565b6117d490846156c4565b6117de91906156db565b6117e5565b845b98506000915061180a9050611805866001600160801b038e166001613ca0565b613d3c565b9050600080600084136118a9576118218d86615724565b91506001600160801b038216156118a95761184a611805886001600160801b0385166000613ca0565b9050808760000181815161185e9190615724565b6001600160801b03908116909152600e8054849350909160009161188491859116615724565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8a6001600160a01b03167f35f432a64bd3767447a456650432406c6cacb885819947a202216eeea6820ecf8b8f8686866040516119139594939291909485526001600160801b03938416602086015291831660408501528216606084015216608082015260a00190565b60405180910390a2506119348683838f61192d9190615744565b338e613da9565b61193f89338c614387565b505050505050505061104a6001600655565b611959614058565b600a546001600160a01b0316331461198457604051633b6b86b160e01b815260040160405180910390fd5b61c3508163ffffffff1611156119ad5760405163da0afa5760e01b815260040160405180910390fd5b6119b56134fc565b5050600c80546fffffffffffffffff0000000000000000191663ffffffff8516600160401b8102919091179091556040519081527f58a58c712558f3d6e20bed57421eb8f73048d881dea9e5bb80efb37c49680d1c9250602001905060405180910390a150565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590611a7e5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b8015611a9557506005546001600160a01b03163314155b8015611aca5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b15611ae857604051638f5b12a760e01b815260040160405180910390fd5b611af06134fc565b5050505061136d61446d565b600a546001600160a01b03163314611b2757604051633b6b86b160e01b815260040160405180910390fd5b600a54604080516001600160a01b03928316815291831660208301527f582d6cc2f042c43e00e0dd5c187f575daac294216d2afa075d9e1e27b0a40a94910160405180910390a1600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061104a908484613ca0565b6060611bfa7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166144b0565b611c2c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166144b0565b604051602001611c3d929190615764565b604051602081830303815290604052905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611c9a57604051638b906c9760e01b815260040160405180910390fd5b6000879003611cbc57604051631ff3ed9d60e01b815260040160405180910390fd5b600b8054611cc990615632565b159050611ce85760405162dc149f60e41b815260040160405180910390fd5b600b611cf5888a83615807565b5060005b85811015611d6657600160136000898985818110611d1957611d19615695565b9050602002016020810190611d2e9190615259565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055611d5f816156ab565b9050611cf9565b5060005b83811015611dd757600160146000878785818110611d8a57611d8a615695565b9050602002016020810190611d9f9190615259565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055611dd0816156ab565b9050611d6a565b5060405163453f31d560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063453f31d590611e2690859085906004016158c6565b60006040518083038186803b158015611e3e57600080fd5b505afa158015611e52573d6000803e3d6000fd5b5060089250611e6691508390508483615807565b50611e6f6134fc565b50505050611e7b61309d565b505050505050505050565b6000611e90614003565b15611eae5760405163b063a8a560e01b815260040160405180910390fd5b611eb6613044565b611ebe614058565b7f00000000000000000000000000000000000000000000000000000000000000008015611efb57503360009081526013602052604090205460ff16155b15611f19576040516342f41ddd60e11b815260040160405180910390fd5b33611f226134fc565b50505050611f2e61309d565b506001600160a01b0387166000908152600960205260409020547f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060ff16611fac57604051631311dc6d60e01b815260040160405180910390fd5b816001600160a01b031685600081518110611fc957611fc9615695565b60200260200101516001600160a01b03161461202b578185600081518110611ff357611ff3615695565b602002602001015160405163b0b3262d60e01b81526004016116559291906001600160a01b0392831681529116602082015260400190565b806001600160a01b0316856001875161204491906158f5565b8151811061205457612054615695565b60200260200101516001600160a01b03161461208a5780856001875161207a91906158f5565b81518110611ff357611ff3615695565b861561209b5761209b33883361456b565b60006120af6120a98a613d3c565b3061463b565b60405163095ea7b360e01b81526001600160a01b038c81166004830152602482018c90529192509084169063095ea7b3906044016020604051808303816000875af1158015612102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121269190615908565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561216e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121929190615925565b6040516338ed173960e01b81529091506001600160a01b038c16906338ed1739906121c9908d908c908c903090429060040161593e565b6000604051808303816000875af11580156121e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261221091908101906159af565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015612258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227c9190615925565b9050600061228a83836158f5565b9050898110156122b757604051633b5d56ed60e11b8152600481018b905260248101829052604401611655565b6122c230823361456b565b6122cc818c615682565b9750336001600160a01b03167fb19ca0df3f3a01af950d8e6ad62aeff167cf14c73e98af6c52afef1add5c97ed8e8e878f866040516123389594939291906001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b60405180910390a25050600d546123669450859350600160201b90046001600160e01b031691506141f79050565b61240f576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b6001600160a01b0382166000908152601160205260409081902054600d549151633b49de0f60e21b815260048101939093526024830152600160201b90046001600160e01b03166044820152606401611655565b5061241a6001600655565b95945050505050565b600033816124318286612e5e565b9050838110156124915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401611655565b61249e82868684036133d7565b506001949350505050565b600033610ff1818585613afc565b7f000000000000000000000000000000000000000000000000000000000000000080156124f457503360009081526013602052604090205460ff16155b15612512576040516342f41ddd60e11b815260040160405180910390fd5b60005b8281101561262f57818061255857503384848381811061253757612537615695565b905060200201602081019061254c9190615259565b6001600160a01b031614155b1561261d57816013600086868581811061257457612574615695565b90506020020160208101906125899190615259565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558383828181106125c3576125c3615695565b90506020020160208101906125d89190615259565b6001600160a01b03167f9c798cce2c4fdbec95a1a6dbba64db726912274dac938f44e36bce9b779cfee883604051612614911515815260200190565b60405180910390a25b80612627816156ab565b915050612515565b50505050565b6000806000612659846001600160a01b031660009081526020819052604090205490565b6001600160a01b03909416600090815260126020908152604080832054601190925290912054949590949350915050565b6000612694613044565b61269c6134fc565b505060408051808201909152600e546001600160801b038082168352600160801b90910416602082015291506126d6905081866000613ca0565b91506126f5816126e584613d3c565b6126ee88613d3c565b8787614808565b5061104a6001600655565b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061104a908484613f8e565b600880546113b290615632565b600061274d613044565b336127566134fc565b5050505061276261309d565b506001600160a01b0387166000908152600960205260409020547f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060ff166127e057604051631311dc6d60e01b815260040160405180910390fd5b806001600160a01b0316868660008181106127fd576127fd615695565b90506020020160208101906128129190615259565b6001600160a01b03161461287557808686600081811061283457612834615695565b90506020020160208101906128499190615259565b60405163b0b3262d60e01b81526001600160a01b03928316600482015291166024820152604401611655565b6001600160a01b038216868661288c6001826158f5565b81811061289b5761289b615695565b90506020020160208101906128b09190615259565b6001600160a01b0316146128db578186866128cc6001826158f5565b81811061283457612834615695565b6128e6883033614387565b60405163095ea7b360e01b81526001600160a01b038a81166004830152602482018a905282169063095ea7b3906044016020604051808303816000875af1158015612935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129599190615908565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156129a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c59190615925565b6040516338ed173960e01b81529091506001600160a01b038b16906338ed1739906129fe908c908c908c908c9030904290600401615a34565b6000604051808303816000875af1158015612a1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a4591908101906159af565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015612a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab19190615925565b9050612abd82826158f5565b955088861015612aea57604051633b5d56ed60e11b8152600481018a905260248101879052604401611655565b60408051808201909152600f546001600160801b038082168352600160801b9091041660208201526000612b1f828983613f8e565b9050612b3e82612b2e8a613d3c565b612b3784613d3c565b3033613da9565b604080516001600160a01b038f168152602081018e90529081018990526060810182905233907fe947f0f9b6255bdcf76d13d1257d34fbe380e0d5d4daa75e61c783a41e1607ba90608001612338565b612b96613044565b612b9e614003565b15612bbc5760405163b063a8a560e01b815260040160405180910390fd5b612bc46134fc565b50505050612bd333838361456b565b612bdd6001600655565b5050565b612be9613044565b33612bf26134fc565b505033600090815260126020526040902054159150612c17905057612c1561309d565b505b612c22838333614387565b600d54612c40908290600160201b90046001600160e01b03166141f7565b612c95576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b50612bdd6001600655565b6000612caa613edf565b604080518082018252600e546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600f548083168652929092048116918401919091529091908516600003612d13573060009081526020819052604090205494505b612d28826001600160801b0387166001613ca0565b92506000612d3683836149bb565b905083811015612d63576040516362ddb6d760e11b81526004810182905260248101859052604401611655565b8383600001818151612d759190615724565b6001600160801b0316905250602083018051879190612d95908390615724565b6001600160801b03908116909152612db19150309088166149db565b825160208401516001600160801b03908116600160801b02911617600e55612e036001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686614b0a565b604080516001600160801b03881681526001600160a01b03871660208201529081018590527f14f6e172cd596e9f9c5d24e2d4010daa24f8f65f9274b259b66517b306c617b99060600160405180910390a150505092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000612e93614003565b15612eb15760405163b063a8a560e01b815260040160405180910390fd5b612eb9614058565b612ec1613044565b337f00000000000000000000000000000000000000000000000000000000000000008015612eff57503360009081526013602052604090205460ff16155b15612f1d576040516342f41ddd60e11b815260040160405180910390fd5b612f256134fc565b50505050612f3161309d565b508315612f4357612f4333853361456b565b612f55612f4f86613d3c565b8461463b565b600d54909250612f76908290600160201b90046001600160e01b03166141f7565b6126f5576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b612fd3613edf565b6001600160a01b0381166130385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611655565b613041816141a5565b50565b6002600654036130965760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611655565b6002600655565b60408051808201909152600d5463ffffffff8116808352600160201b9091046001600160e01b03166020830152600091904290036130e757602001516001600160e01b0316919050565b6ec097ce7bc90715b34b9f10000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561320a5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131aa9190615abf565b505050915050600081136131fc576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611655565b61320681836156c4565b9150505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561331d5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132bd9190615abf565b5050509150506000811361330f576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611655565b61331981836156db565b9150505b6133477f0000000000000000000000000000000000000000000000000000000000000000826156db565b92506001600160e01b038311156133715760405163057b0e2160e41b815260040160405180910390fd5b6001600160e01b0383166020830181905263ffffffff4216808452600160201b90910217600d556040517f4fc1b45960547ee95894b08a284c3c066cf5aca706a7420639c42c3ec2e118a4906133ca9085815260200190565b60405180910390a1505090565b6001600160a01b0383166134395760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401611655565b6001600160a01b03821661349a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401611655565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60408051608081018252600c546001600160401b038082168352600160401b820481166020840152600160801b82048116938301849052600160c01b9091041660608201526000918291829182919042900361355d57606001519050611025565b604080518082018252600e546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600f548083168652929092041690830181905290919015806135bd5750600554600160a01b900460ff165b1561365257600554600160a01b900460ff166135de5763096ba6c460608401525b6001600160401b0342811660408501819052438216808652600c8054602088015160608901518616600160c01b026001600160c01b03600160801b909602959095166001600160801b0391909616600160401b026001600160801b0319909216909317179190911692909217179055613a7f565b600083604001516001600160401b03164261366d91906158f5565b835183519192506000916001600160801b03918216916136919116620186a06156c4565b61369b91906156db565b90506136a5614003565b156136d2577f000000000000000000000000000000000000000000000000000000000000000095506137bf565b60008560600151838388600001516001600160401b0316436136f491906158f5565b604080516001600160401b0390951660208601528401929092526060830152608082015260a00160408051601f1981840301815290829052631b54c1a360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b54c1a39061377a908490600890600401615b0f565b602060405180830381865afa158015613797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137bb9190615baa565b9650505b606080860151604080516001600160401b03928316815260208101869052908101849052908816918101919091527fc63977c8e2362a31182dc8e89a52252f9836922738e0abcfc0de6924972eafe59060800160405180910390a16001600160401b038087166060870181905242821660408801524390911686528351670de0b6b3a7640000919061385a906001600160801b0316856156c4565b61386491906156c4565b61386e91906156db565b83519099506001600160801b03906138889082168b615682565b111580156138ab575083516001600160801b03906138a89082168b615682565b11155b156139e75788836000018181516138c29190615744565b6001600160801b03169052508351899085906138df908390615744565b6001600160801b031690525060208501516001600160401b03161561398a57620186a085602001516001600160401b03168a61391b91906156c4565b61392591906156db565b845190985061393e9089906001600160801b03166158f5565b6020850151613956906001600160801b03168a6156c4565b61396091906156db565b965086846020018181516139749190615744565b6001600160801b031690525061398a3088614b15565b606080860151604080518c81526001600160401b0390921660208301528101849052908101899052608081018890527f50225349cc7e3814c4fa5fe6baef7a3c4cac55e92c64b1f4a5d1ba55e65dcc829060a00160405180910390a15b505081516020808401516001600160801b03908116600160801b90810293821693909317600e558551600c80548885015160408a015160608b01516001600160401b03908116600160c01b026001600160c01b039282168a0292909216928116600160401b026001600160801b031994909416951694909417919091178416179190911790558351918401518116909202911617600f555b50505090919293565b6000613a948484612e5e565b9050600019811461262f5781811015613aef5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611655565b61262f84848484036133d7565b6001600160a01b038316613b605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401611655565b6001600160a01b038216613bc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401611655565b6001600160a01b03831660009081526020819052604090205481811015613c3a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401611655565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361262f565b600083602001516001600160801b0316600003613cbe57508161104a565b602084015184516001600160801b0391821691613cdc9116856156c4565b613ce691906156db565b9050818015613d2457508284600001516001600160801b031685602001516001600160801b031683613d1891906156c4565b613d2291906156db565b105b1561104a57613d34816001615682565b949350505050565b60006001600160801b03821115613da55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401611655565b5090565b8385600001818151613dbb9190615724565b6001600160801b0316905250602085018051849190613ddb908390615724565b6001600160801b039081169091526001600160a01b03831660009081526012602052604081208054928716935091613e149084906158f5565b9091555050845160208601516001600160801b03908116600160801b02911617600f556001600160a01b0382163014613e8557613e856001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683306001600160801b038816614bd4565b604080516001600160801b038087168252851660208201526001600160a01b0380841692908516917f9dc1449a0ff0c152e18e8289d865b47acc6e1b76b1ecb239c13d6ee22a9206a7910160405180910390a35050505050565b6005546001600160a01b0316331461136d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611655565b613f41614be0565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b82516000906001600160801b03168103613fa957508161104a565b835160208501516001600160801b0391821691613fc79116856156c4565b613fd191906156db565b9050818015613d2457508284602001516001600160801b031685600001516001600160801b031683613d1891906156c4565b60007f00000000000000000000000000000000000000000000000000000000000000001580159061405357507f000000000000000000000000000000000000000000000000000000000000000042115b905090565b600554600160a01b900460ff161561136d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611655565b82846000018181516140b79190615744565b6001600160801b03169052506020840180518391906140d7908390615744565b6001600160801b039081169091526140f3915082908416614b15565b835160208501516001600160801b03908116600160801b0291811691909117600e5561414f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690339030908716614bd4565b604080516001600160801b038086168252841660208201526001600160a01b0383169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f000000000000000000000000000000000000000000000000000000000000000060000361422957506001610ff7565b6001600160a01b0383166000908152601260209081526040808320548151808301909252600f546001600160801b038082168452600160801b9091041692820192909252614278916001613ca0565b90508060000361428c576001915050610ff7565b6001600160a01b038416600090815260116020526040812054908190036142b857600092505050610ff7565b600081620186a0670de0b6b3a76400006142d288876156c4565b6142dc91906156db565b6142e691906156c4565b6142f091906156db565b7f000000000000000000000000000000000000000000000000000000000000000010159695505050505050565b60006001600160ff1b03821115613da55760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611655565b6001600160a01b038116600090815260116020526040812080548592906143af9084906158f5565b9250508190555082601060008282546143c891906158f5565b90915550506001600160a01b0382163014614411576144116001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168385614b0a565b806001600160a01b0316826001600160a01b0316336001600160a01b03167fbc290bb45104f73cf92115c9603987c3f8fd30c182a13603d8cffa49b5f599528660405161446091815260200190565b60405180910390a4505050565b614475614058565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613f713390565b60408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b179052905160609160009182916001600160a01b038616916144f79190615bd3565b600060405180830381855afa9150503d8060008114614532576040519150601f19603f3d011682016040523d82523d6000602084013e614537565b606091505b50915091508161456257604051806040016040528060038152602001623f3f3f60e81b815250613d34565b613d3481614c30565b6001600160a01b03811660009081526011602052604081208054849290614593908490615682565b9250508190555081601060008282546145ac9190615682565b90915550506001600160a01b03831630146145f6576145f66001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085614bd4565b806001600160a01b0316836001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f846040516134ef91815260200190565b604080518082018252600f546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600e548083168652929092041690830152600091829061469090836149bb565b9050846001600160801b03168110156146ce576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611655565b6146e3826001600160801b0387166001613f8e565b925084826000018181516146f79190615744565b6001600160801b0316905250602082018051849190614717908390615744565b6001600160801b0390811690915283516020808601518316600160801b029190921617600f55336000908152601290915260408120805486935090919061475f908490615682565b90915550506001600160a01b03841630146147b1576147b16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016856001600160801b038816614b0a565b604080516001600160801b0387168152602081018590526001600160a01b0386169133917f01348584ec81ac7acd52b7d66d9ade986dd909f3d513881c190fc31c90527efe910160405180910390a3505092915050565b336001600160a01b038216146148495760006148248233612e5e565b9050600019811461484757614847823361106e6001600160801b038816856158f5565b505b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061487f9087906149bb565b9050846001600160801b03168110156148bd576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611655565b84866000018181516148cf9190615724565b6001600160801b03169052506020860180518591906148ef908390615724565b6001600160801b03908116909152875160208901518216600160801b0290821617600e556149219150839086166149db565b61495e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016846001600160801b038816614b0a565b604080516001600160801b038088168252861660208201526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4505050505050565b805182516000916149cb91615724565b6001600160801b03169392505050565b6001600160a01b038216614a3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401611655565b6001600160a01b03821660009081526020819052604090205481811015614aaf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401611655565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016134ef565b505050565b614b05838383614db2565b6001600160a01b038216614b6b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401611655565b8060026000828254614b7d9190615682565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61262f84848484614e15565b600554600160a01b900460ff1661136d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611655565b60606040825110614c4f5781806020019051810190610ff79190615bef565b8151602003614d8e5760005b60208160ff16108015614c905750828160ff1681518110614c7e57614c7e615695565b01602001516001600160f81b03191615155b15614ca75780614c9f81615c82565b915050614c5b565b60008160ff166001600160401b03811115614cc457614cc46153f1565b6040519080825280601f01601f191660200182016040528015614cee576020820181803683370190505b509050600091505b60208260ff16108015614d2b5750838260ff1681518110614d1957614d19615695565b01602001516001600160f81b03191615155b1561104a57838260ff1681518110614d4557614d45615695565b602001015160f81c60f81b818360ff1681518110614d6557614d65615695565b60200101906001600160f81b031916908160001a90535081614d8681615c82565b925050614cf6565b50506040805180820190915260038152623f3f3f60e81b602082015290565b919050565b6040516001600160a01b038316602482015260448101829052614b0590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614e4d565b6040516001600160a01b038085166024830152831660448201526064810182905261262f9085906323b872dd60e01b90608401614dde565b6000614ea2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614f1f9092919063ffffffff16565b805190915015614b055780806020019051810190614ec09190615908565b614b055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611655565b6060613d34848460008585600080866001600160a01b03168587604051614f469190615bd3565b60006040518083038185875af1925050503d8060008114614f83576040519150601f19603f3d011682016040523d82523d6000602084013e614f88565b606091505b5091509150614f9987838387614fa4565b979650505050505050565b6060831561501357825160000361500c576001600160a01b0385163b61500c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611655565b5081613d34565b613d3483838151156150285781518083602001fd5b8060405162461bcd60e51b81526004016116559190615092565b60005b8381101561505d578181015183820152602001615045565b50506000910152565b6000815180845261507e816020860160208601615042565b601f01601f19169290920160200192915050565b60208152600061104a6020830184615066565b80356001600160a01b0381168114614dad57600080fd5b600080604083850312156150cf57600080fd5b6150d8836150a5565b946020939093013593505050565b6000806000606084860312156150fb57600080fd5b615104846150a5565b9250615112602085016150a5565b9150604084013590509250925092565b60008083601f84011261513457600080fd5b5081356001600160401b0381111561514b57600080fd5b6020830191508360208260051b850101111561516657600080fd5b9250929050565b801515811461304157600080fd5b60008060006040848603121561519057600080fd5b83356001600160401b038111156151a657600080fd5b6151b286828701615122565b90945092505060208401356151c68161516d565b809150509250925092565b600080604083850312156151e457600080fd5b823591506151f4602084016150a5565b90509250929050565b6000806040838503121561521057600080fd5b615219836150a5565b915060208301356152298161516d565b809150509250929050565b6000806040838503121561524757600080fd5b8235915060208301356152298161516d565b60006020828403121561526b57600080fd5b61104a826150a5565b80356001600160801b0381168114614dad57600080fd5b6000806000606084860312156152a057600080fd5b6152a984615274565b9250602084013591506152be604085016150a5565b90509250925092565b6000602082840312156152d957600080fd5b813563ffffffff8116811461104a57600080fd5b60008083601f8401126152ff57600080fd5b5081356001600160401b0381111561531657600080fd5b60208301915083602082850101111561516657600080fd5b6000806000806000806000806080898b03121561534a57600080fd5b88356001600160401b038082111561536157600080fd5b61536d8c838d016152ed565b909a50985060208b013591508082111561538657600080fd5b6153928c838d01615122565b909850965060408b01359150808211156153ab57600080fd5b6153b78c838d01615122565b909650945060608b01359150808211156153d057600080fd5b506153dd8b828c016152ed565b999c989b5096995094979396929594505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561542f5761542f6153f1565b604052919050565b60006001600160401b03821115615450576154506153f1565b5060051b60200190565b600080600080600060a0868803121561547257600080fd5b61547b866150a5565b94506020808701359450604087013593506060870135925060808701356001600160401b038111156154ac57600080fd5b8701601f810189136154bd57600080fd5b80356154d06154cb82615437565b615407565b81815260059190911b8201830190838101908b8311156154ef57600080fd5b928401925b8284101561551457615505846150a5565b825292840192908401906154f4565b80955050505050509295509295909350565b60008060006060848603121561553b57600080fd5b8335925061554b602085016150a5565b91506152be604085016150a5565b60008060008060006080868803121561557157600080fd5b61557a866150a5565b9450602086013593506040860135925060608601356001600160401b038111156155a357600080fd5b6155af88828901615122565b969995985093965092949392505050565b600080604083850312156155d357600080fd5b6155dc83615274565b91506151f4602084016150a5565b600080604083850312156155fd57600080fd5b6155dc836150a5565b60008060006060848603121561561b57600080fd5b83359250602084013591506152be604085016150a5565b600181811c9082168061564657607f821691505b60208210810361566657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ff757610ff761566c565b634e487b7160e01b600052603260045260246000fd5b6000600182016156bd576156bd61566c565b5060010190565b8082028115828204841417610ff757610ff761566c565b6000826156f857634e487b7160e01b600052601260045260246000fd5b500490565b818103600083128015838313168383128216171561571d5761571d61566c565b5092915050565b6001600160801b0382811682821603908082111561571d5761571d61566c565b6001600160801b0381811683821601908082111561571d5761571d61566c565b6c0233930bc3632b7322b1890169609d1b81526000835161578c81600d850160208801615042565b602f60f81b600d9184019182015283516157ad81600e840160208801615042565b01600e01949350505050565b601f821115614b0557600081815260208120601f850160051c810160208610156157e05750805b601f850160051c820191505b818110156157ff578281556001016157ec565b505050505050565b6001600160401b0383111561581e5761581e6153f1565b6158328361582c8354615632565b836157b9565b6000601f841160018114615866576000851561584e5750838201355b600019600387901b1c1916600186901b17835561120f565b600083815260209020601f19861690835b828110156158975786850135825560209485019460019092019101615877565b50868210156158b45760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81810381811115610ff757610ff761566c565b60006020828403121561591a57600080fd5b815161104a8161516d565b60006020828403121561593757600080fd5b5051919050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561598e5784516001600160a01b031683529383019391830191600101615969565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156159c257600080fd5b82516001600160401b038111156159d857600080fd5b8301601f810185136159e957600080fd5b80516159f76154cb82615437565b81815260059190911b82018301908381019087831115615a1657600080fd5b928401925b82841015614f9957835182529284019290840190615a1b565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015615a84576001600160a01b03615a71856150a5565b1682529282019290820190600101615a58565b506001600160a01b0396909616606085015250505060800152949350505050565b805169ffffffffffffffffffff81168114614dad57600080fd5b600080600080600060a08688031215615ad757600080fd5b615ae086615aa5565b9450602086015193506040860151925060608601519150615b0360808701615aa5565b90509295509295909350565b604081526000615b226040830185615066565b60208382038185015260008554615b3881615632565b80855260018281168015615b535760018114615b6d57615b9b565b60ff1984168787015282151560051b870186019450615b9b565b896000528560002060005b84811015615b93578154898201890152908301908701615b78565b880187019550505b50929998505050505050505050565b600060208284031215615bbc57600080fd5b81516001600160401b038116811461104a57600080fd5b60008251615be5818460208701615042565b9190910192915050565b600060208284031215615c0157600080fd5b81516001600160401b0380821115615c1857600080fd5b818401915084601f830112615c2c57600080fd5b815181811115615c3e57615c3e6153f1565b615c51601f8201601f1916602001615407565b9150808252856020828501011115615c6857600080fd5b615c79816020840160208601615042565b50949350505050565b600060ff821660ff8103615c9857615c9861566c565b6001019291505056fea264697066735822122005b78e73b6774601d7896aec422743fa153ac2d4027848994508564f3e03c19c64736f6c63430008110033",
    "sourceMap": "1212:31:22:-:0;783:15652:21;1212:31:22;;783:15652:21;1212:31:22;;;-1:-1:-1;;;1212:31:22;;;;;;;;:::i;:::-;;933:617:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1257:11;1282;1307:7;1328:15;1357:13;1384:12;1410:26;1450:24;1976:113:13;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:13;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;936:32:9;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;996:7:11;:15;;-1:-1:-1;;;;996:15:11;;;;1806:7:12;:22;6443:61:22;;1006:5:11;;;;;;;;6443:61:22;;;;;;;;;;;;:::i;:::-;6247:257;;;;;;;;6571:10;-1:-1:-1;;;;;6552:29:22;;;-1:-1:-1;;;;;6552:29:22;;;;;6621:15;-1:-1:-1;;;;;6595:41:22;;;-1:-1:-1;;;;;6595:41:22;;;;;6672:19;-1:-1:-1;;;;;6650:41:22;;;-1:-1:-1;;;;;6650:41:22;;;;;6725:16;6705:17;;:36;;;;;-1:-1:-1;;;;;6705:36:22;;;;;-1:-1:-1;;;;;6705:36:22;;;;;;6784:25;-1:-1:-1;;;;;6755:54:22;;;-1:-1:-1;;;;;6755:54:22;;;;;6233:587;;;;6862:14;6894:19;6931:23;6972:21;7011:28;7057:21;7129:11;7097:334;;;;;;;;;;;;:::i;:::-;6844:587;;;;;;;;;;;;;7498:6;-1:-1:-1;;;;;7475:30:22;;;-1:-1:-1;;;;;7475:30:22;;;;;7547:11;-1:-1:-1;;;;;7519:40:22;;;-1:-1:-1;;;;;7519:40:22;;;;;1971:1:1;7573:56:22;;:15;:33;;;:56;;;;;-1:-1:-1;;;;;7573:56:22;;;;;-1:-1:-1;;;;;7573:56:22;;;;;;7665:15;7643:37;;;;;;1602:3:1;7717:15:22;7735:5;7717:23;;;;:::i;:::-;7716:41;;;;:::i;:::-;7694:63;;1537:3:1;7796:24:22;;;;;:55;;;7825:26;7824:27;7796:55;7792:111;;;7876:27;;-1:-1:-1;;;7876:27:22;;;;;;;;;;;7792:111;7917:16;;;;8077:26;;-1:-1:-1;;;;;8223:29:22;;;;;;:113;;-1:-1:-1;8277:59:22;;-1:-1:-1;;;8277:59:22;;-1:-1:-1;;;;;7007:32:26;;;8277:59:22;;;6989:51:26;8277:42:22;;;;;6962:18:26;;8277:59:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8276:60;8223:113;8198:236;;;8384:31;;-1:-1:-1;;;8384:31:22;;-1:-1:-1;;;;;7007:32:26;;8384:31:22;;;6989:51:26;6962:18;;8384:31:22;;;;;;;;8198:236;-1:-1:-1;;;;;8477:27:22;;;;;;:109;;-1:-1:-1;8529:57:22;;-1:-1:-1;;;8529:57:22;;-1:-1:-1;;;;;7007:32:26;;;8529:57:22;;;6989:51:26;8529:42:22;;;;;6962:18:26;;8529:57:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8528:58;8477:109;8452:230;;;8634:29;;-1:-1:-1;;;8634:29:22;;-1:-1:-1;;;;;7007:32:26;;8634:29:22;;;6989:51:26;6962:18;;8634:29:22;6843:203:26;8452:230:22;-1:-1:-1;;;;;8747:32:22;;;;;8797:28;;;;;8843:42;;;;8942:55;;-1:-1:-1;;;8942:55:22;;7007:32:26;;;8942:55:22;;;6989:51:26;8942:40:22;;;;;;6962:18:26;;8942:55:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8937:139;;9028:29;;-1:-1:-1;;;9028:29:22;;-1:-1:-1;;;;;7007:32:26;;9028:29:22;;;6989:51:26;6962:18;;9028:29:22;6843:203:26;8937:139:22;-1:-1:-1;;;;;;9104:45:22;;;-1:-1:-1;;;;9214:52:22;;;;;9326:48;;;;-1:-1:-1;9438:28:22;;;;;9476:26;;-1:-1:-1;783:15652:21;;-1:-1:-1;;;;;;;;;;;783:15652:21;640:96:19;719:10;;640:96::o;2433:187:9:-;2525:6;;;-1:-1:-1;;;;;2541:17:9;;;-1:-1:-1;;;;;;2541:17:9;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:26;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:26;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:26;;;2580:26;2531:89;-1:-1:-1;;1335:1:26;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:26;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:26;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:26;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:26:o;2735:839::-;2788:5;2841:3;2834:4;2826:6;2822:17;2818:27;2808:55;;2859:1;2856;2849:12;2808:55;2882:13;;-1:-1:-1;;;;;2944:10:26;;;2941:36;;;2957:18;;:::i;:::-;3032:2;3026:9;3000:2;3086:13;;-1:-1:-1;;3082:22:26;;;3106:2;3078:31;3074:40;3062:53;;;3130:18;;;3150:22;;;3127:46;3124:72;;;3176:18;;:::i;:::-;3216:10;3212:2;3205:22;3251:2;3243:6;3236:18;3273:4;3263:14;;3318:3;3313:2;3308;3300:6;3296:15;3292:24;3289:33;3286:53;;;3335:1;3332;3325:12;3286:53;3357:1;3348:10;;3367:133;3381:2;3378:1;3375:9;3367:133;;;3469:14;;;3465:23;;3459:30;3438:14;;;3434:23;;3427:63;3392:10;;;;3367:133;;;3542:1;3520:15;;;3516:24;;;3509:35;;;;3524:6;2735:839;-1:-1:-1;;;;2735:839:26:o;3579:164::-;3655:13;;3704;;3697:21;3687:32;;3677:60;;3733:1;3730;3723:12;3677:60;3579:164;;;:::o;3748:965::-;3893:6;3901;3909;3917;3925;3933;3941;3949;4002:3;3990:9;3981:7;3977:23;3973:33;3970:53;;;4019:1;4016;4009:12;3970:53;4046:16;;-1:-1:-1;;;;;4111:14:26;;;4108:34;;;4138:1;4135;4128:12;4108:34;4161:60;4213:7;4204:6;4193:9;4189:22;4161:60;:::i;:::-;4151:70;;4267:2;4256:9;4252:18;4246:25;4230:41;;4296:2;4286:8;4283:16;4280:36;;;4312:1;4309;4302:12;4280:36;;4335:62;4389:7;4378:8;4367:9;4363:24;4335:62;:::i;:::-;4325:72;;;4437:2;4426:9;4422:18;4416:25;4406:35;;4481:2;4470:9;4466:18;4460:25;4450:35;;4525:3;4514:9;4510:19;4504:26;4494:36;;4570:3;4559:9;4555:19;4549:26;4539:36;;4594:47;4636:3;4625:9;4621:19;4594:47;:::i;:::-;4584:57;;4660:47;4702:3;4691:9;4687:19;4660:47;:::i;:::-;4650:57;;3748:965;;;;;;;;;;;:::o;4718:185::-;4805:13;;-1:-1:-1;;;;;4847:31:26;;4837:42;;4827:70;;4893:1;4890;4883:12;4908:528;5037:6;5045;5053;5061;5114:3;5102:9;5093:7;5089:23;5085:33;5082:53;;;5131:1;5128;5121:12;5082:53;5154:48;5192:9;5154:48;:::i;:::-;5144:58;;5221:57;5274:2;5263:9;5259:18;5221:57;:::i;:::-;5211:67;;5297:57;5350:2;5339:9;5335:18;5297:57;:::i;:::-;5287:67;;5373:57;5426:2;5415:9;5411:18;5373:57;:::i;:::-;5363:67;;4908:528;;;;;;;:::o;5441:905::-;5614:6;5622;5630;5638;5646;5654;5662;5715:3;5703:9;5694:7;5690:23;5686:33;5683:53;;;5732:1;5729;5722:12;5683:53;5755:48;5793:9;5755:48;:::i;:::-;5745:58;;5822:57;5875:2;5864:9;5860:18;5822:57;:::i;:::-;5812:67;;5898:57;5951:2;5940:9;5936:18;5898:57;:::i;:::-;5888:67;;5974:57;6027:2;6016:9;6012:18;5974:57;:::i;:::-;5964:67;;6071:3;6060:9;6056:19;6050:26;6040:36;;6095:58;6148:3;6137:9;6133:19;6095:58;:::i;:::-;6197:3;6182:19;;6176:26;6085:68;;-1:-1:-1;;;;;;6214:30:26;;6211:50;;;6257:1;6254;6247:12;6211:50;6280:60;6332:7;6323:6;6312:9;6308:22;6280:60;:::i;:::-;6270:70;;;5441:905;;;;;;;;;;:::o;6351:265::-;6424:9;;;6455;;6472:15;;;6466:22;;6452:37;6442:168;;6532:10;6527:3;6523:20;6520:1;6513:31;6567:4;6564:1;6557:15;6595:4;6592:1;6585:15;6442:168;6351:265;;;;:::o;6621:217::-;6661:1;6687;6677:132;;6731:10;6726:3;6722:20;6719:1;6712:31;6766:4;6763:1;6756:15;6794:4;6791:1;6784:15;6677:132;-1:-1:-1;6823:9:26;;6621:217::o;7051:202::-;7118:6;7171:2;7159:9;7150:7;7146:23;7142:32;7139:52;;;7187:1;7184;7177:12;7139:52;7210:37;7237:9;7210:37;:::i;:::-;7200:47;7051:202;-1:-1:-1;;;7051:202:26:o;:::-;783:15652:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061043d5760003560e01c806395d14ca811610236578063c936c6241161013b578063dd62ed3e116100c3578063f384bd0511610087578063f384bd0514610db5578063f9557ccb14610ddc578063fbaa8b8514610dfa578063fbbbf94c14610e21578063fea10d5d14610e6757600080fd5b8063dd62ed3e14610d2e578063e5f13b1614610d41578063eee2421914610d54578063ef14900d14610d7b578063f2fde38b14610da257600080fd5b8063d2a156e01161010a578063d2a156e014610c93578063d41ddc9614610cba578063d59624b414610ccd578063d6b7494f14610cf4578063daf33f2a14610d1b57600080fd5b8063c936c62414610bdc578063ca2298fe14610bff578063cadac47914610c12578063cdd72d5214610c2557600080fd5b8063afa85de6116101be578063ba0876521161018d578063ba08765214610b60578063c10c92a114610b73578063c270a54414610b9a578063c6e1c7c914610bad578063c7be978614610bd457600080fd5b8063afa85de614610adc578063b054898b14610aff578063b5af306214610b12578063b68d0a0914610b3257600080fd5b80639bdff2e6116102055780639bdff2e614610a55578063a053db6814610a7c578063a457c2d714610a8f578063a9059cbb14610aa2578063ad0c3bb514610ab557600080fd5b806395d14ca81461098557806395d89b41146109ea57806399024fc1146109f25780639a295e7314610a0557600080fd5b80634732428c1161034757806370a08231116102cf5780638456cb59116102935780638456cb5914610923578063891682d21461092b5780638cad7fbe1461093e5780638da5cb5b1461096157806394e301e01461097257600080fd5b806370a082311461088e578063715018a6146108b7578063721b0a47146108bf5780638142dd53146108d25780638285ef40146108e557600080fd5b806354fd4d501161031657806354fd4d501461083b57806356968f97146108435780635c975abb14610856578063657a409c146108685780636e553f651461087b57600080fd5b80634732428c146107c45780634962e494146107eb5780634ac8eb5f146108125780634fd422df1461081b57600080fd5b8063313ce567116103ca5780633cc32aba116103995780633cc32aba1461076e5780633d417d2d146107835780633f2617cb146107965780633f4ba83a146107a9578063404ffa7a146107b157600080fd5b8063313ce5671461057e57806336fad62d1461058d57806338d52e0f14610735578063395093511461075b57600080fd5b80630d09365c116104115780630d09365c146104d457806311a2e4bc1461050557806318160ddd1461052c5780632165d72f1461054457806323b872dd1461056b57600080fd5b806253f7331461044257806302ce728f1461048657806306fdde031461049c578063095ea7b3146104b1575b600080fd5b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61048e610f30565b60405190815260200161047d565b6104a4610f51565b60405161047d9190615092565b6104c46104bf3660046150bc565b610fe3565b604051901515815260200161047d565b6104dc610ffd565b604080519485526020850193909352918301526001600160401b0316606082015260800161047d565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b600e54600160801b90046001600160801b031661048e565b6104c47f000000000000000000000000000000000000000000000000000000000000000081565b6104c46105793660046150e6565b61102b565b6040516012815260200161047d565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000008116928201929092527f0000000000000000000000000000000000000000000000000000000000000000821660608201527f0000000000000000000000000000000000000000000000000000000000000000821660808201527f0000000000000000000000000000000000000000000000000000000000000000821660a08201527f0000000000000000000000000000000000000000000000000000000000000000821660c08201527f00000000000000000000000000000000000000000000000000000000000000009190911660e08201527f000000000000000000000000000000000000000000000000000000000000000015156101008201527f000000000000000000000000000000000000000000000000000000000000000015156101208201526101400161047d565b7f0000000000000000000000000000000000000000000000000000000000000000610469565b6104c46107693660046150bc565b611051565b61078161077c36600461517b565b611073565b005b61048e6107913660046151d1565b611216565b6107816107a43660046151fd565b61128c565b6107816112f7565b61048e6107bf366004615234565b61136f565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b6104c47f000000000000000000000000000000000000000000000000000000000000000081565b61048e60105481565b61048e610829366004615259565b60126020526000908152604090205481565b6104a46113a5565b61048e610851366004615234565b611433565b600554600160a01b900460ff166104c4565b600a54610469906001600160a01b031681565b61048e6108893660046151d1565b611469565b61048e61089c366004615259565b6001600160a01b031660009081526020819052604090205490565b61078161158c565b61048e6108cd36600461528b565b61159e565b6107816108e03660046152c7565b611951565b600f54610903906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161047d565b610781611a1c565b610781610939366004615259565b611afc565b6104c461094c366004615259565b60096020526000908152604090205460ff1681565b6005546001600160a01b0316610469565b61048e610980366004615234565b611b90565b600c546109b7906001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b039586168152938516602085015291841691830191909152909116606082015260800161047d565b6104a4611bc6565b610781610a0036600461532e565b611c51565b60408051620186a0808252602082018190529181018290526060810191909152670de0b6b3a7640000608082015263096ba6c460a0820152600060c082015261c35060e08201526101000161047d565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b61048e610a8a36600461545a565b611e86565b6104c4610a9d3660046150bc565b612423565b6104c4610ab03660046150bc565b6124a9565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104c4610aea366004615259565b60146020526000908152604090205460ff1681565b610781610b0d36600461517b565b6124b7565b61048e610b20366004615259565b60116020526000908152604090205481565b610b45610b40366004615259565b612635565b6040805193845260208401929092529082015260600161047d565b61048e610b6e366004615526565b61268a565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e610ba8366004615234565b612700565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104a4612736565b6104c4610bea366004615259565b60136020526000908152604090205460ff1681565b61048e610c0d366004615559565b612743565b610781610c203660046151d1565b612b8e565b604080518082018252600e546001600160801b03808216808452600160801b928390048216602094850181905285518087018752600f54808516808352959004909316928501839052601054865192835294820152938401919091526060830152608082015260a00161047d565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b610781610cc83660046151d1565b612be1565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b61048e610d293660046155c0565b612ca0565b61048e610d3c3660046155ea565b612e5e565b61048e610d4f366004615606565b612e89565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b610781610db0366004615259565b612fcb565b61048e7f000000000000000000000000000000000000000000000000000000000000000081565b600e54610903906001600160801b0380821691600160801b90041682565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b600d54610e439063ffffffff811690600160201b90046001600160e01b031682565b6040805163ffffffff90931683526001600160e01b0390911660208301520161047d565b604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f0000000000000000000000000000000000000000000000000000000000000000608082015260a00161047d565b6000610f3a613044565b610f4261309d565b9050610f4e6001600655565b90565b6060600b8054610f6090615632565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8c90615632565b8015610fd95780601f10610fae57610100808354040283529160200191610fd9565b820191906000526020600020905b815481529060010190602001808311610fbc57829003601f168201915b5050505050905090565b600033610ff18185856133d7565b60019150505b92915050565b60008060008061100b613044565b6110136134fc565b93509350935093506110256001600655565b90919293565b600033611039858285613a88565b611044858585613afc565b60019150505b9392505050565b600033610ff18185856110648383612e5e565b61106e9190615682565b6133d7565b337f000000000000000000000000000000000000000000000000000000000000000080156110d457503360009081526014602052604090205460ff1615806110d457506001600160a01b03811660009081526014602052604090205460ff16155b156110f2576040516395a584f760e01b815260040160405180910390fd5b60005b8381101561120f57828061113857503385858381811061111757611117615695565b905060200201602081019061112c9190615259565b6001600160a01b031614155b156111fd57826014600087878581811061115457611154615695565b90506020020160208101906111699190615259565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558484828181106111a3576111a3615695565b90506020020160208101906111b89190615259565b6001600160a01b03167f3bb51c63bf139c4bc98211d74c51aafae8b743fd3090bee8b6bfe2026678a250846040516111f4911515815260200190565b60405180910390a25b80611207816156ab565b9150506110f5565b5050505050565b6000611220613044565b6112286134fc565b505060408051808201909152600f546001600160801b038082168352600160801b9091041660208201529150611262905081856001613ca0565b91506112818161127184613d3c565b61127a87613d3c565b3387613da9565b50610ff76001600655565b611294613edf565b6001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527fea1eefb4fd58778d7b274fe54045a9feeec8f2847899c2e71126d3a74d486da5910160405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061133b57506005546001600160a01b03163314155b1561135957604051638f5b12a760e01b815260040160405180910390fd5b6113616134fc565b5050505061136d613f39565b565b60408051808201909152600e546001600160801b038082168352600160801b90910416602082015260009061104a908484613ca0565b600780546113b290615632565b80601f01602080910402602001604051908101604052809291908181526020018280546113de90615632565b801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b505050505081565b60408051808201909152600e546001600160801b038082168352600160801b90910416602082015260009061104a908484613f8e565b6000611473613044565b61147b614003565b156114995760405163b063a8a560e01b815260040160405180910390fd5b6114a1614058565b817f0000000000000000000000000000000000000000000000000000000000000000801561150257503360009081526014602052604090205460ff16158061150257506001600160a01b03811660009081526014602052604090205460ff16155b15611520576040516395a584f760e01b815260040160405180910390fd5b6115286134fc565b505060408051808201909152600e546001600160801b038082168352600160801b9091041660208201529150611562905081866000613f8e565b92506115808161157187613d3c565b61157a86613d3c565b876140a5565b5050610ff76001600655565b611594613edf565b61136d60006141a5565b60006115a8614058565b6115b0613044565b337f0000000000000000000000000000000000000000000000000000000000000000801561161157503360009081526014602052604090205460ff16158061161157506001600160a01b03811660009081526014602052604090205460ff16155b1561162f576040516395a584f760e01b815260040160405180910390fd5b8342111561165e57604051635ba2a8d560e01b8152426004820152602481018590526044015b60405180910390fd5b6116666134fc565b50505050600061167461309d565b905061168084826141f7565b1561169e57604051633af2cafd60e11b815260040160405180910390fd5b604080518082018252600f546001600160801b038082168352600160801b909104166020808301919091526001600160a01b03871660009081526011825283812054601290925292832054919290916116f690613d3c565b9050600080670de0b6b3a764000086611719876001600160801b038f1685613ca0565b61172391906156c4565b61172d91906156db565b90506000620186a061175f7f000000000000000000000000000000000000000000000000000000000000000082615682565b61176990846156c4565b61177391906156db565b905061177e8161431d565b6117878661431d565b61179191906156fd565b925060008313156117e357620186a06117ca7f000000000000000000000000000000000000000000000000000000000000000082615682565b6117d490846156c4565b6117de91906156db565b6117e5565b845b98506000915061180a9050611805866001600160801b038e166001613ca0565b613d3c565b9050600080600084136118a9576118218d86615724565b91506001600160801b038216156118a95761184a611805886001600160801b0385166000613ca0565b9050808760000181815161185e9190615724565b6001600160801b03908116909152600e8054849350909160009161188491859116615724565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8a6001600160a01b03167f35f432a64bd3767447a456650432406c6cacb885819947a202216eeea6820ecf8b8f8686866040516119139594939291909485526001600160801b03938416602086015291831660408501528216606084015216608082015260a00190565b60405180910390a2506119348683838f61192d9190615744565b338e613da9565b61193f89338c614387565b505050505050505061104a6001600655565b611959614058565b600a546001600160a01b0316331461198457604051633b6b86b160e01b815260040160405180910390fd5b61c3508163ffffffff1611156119ad5760405163da0afa5760e01b815260040160405180910390fd5b6119b56134fc565b5050600c80546fffffffffffffffff0000000000000000191663ffffffff8516600160401b8102919091179091556040519081527f58a58c712558f3d6e20bed57421eb8f73048d881dea9e5bb80efb37c49680d1c9250602001905060405180910390a150565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590611a7e5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b8015611a9557506005546001600160a01b03163314155b8015611aca5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b15611ae857604051638f5b12a760e01b815260040160405180910390fd5b611af06134fc565b5050505061136d61446d565b600a546001600160a01b03163314611b2757604051633b6b86b160e01b815260040160405180910390fd5b600a54604080516001600160a01b03928316815291831660208301527f582d6cc2f042c43e00e0dd5c187f575daac294216d2afa075d9e1e27b0a40a94910160405180910390a1600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061104a908484613ca0565b6060611bfa7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166144b0565b611c2c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166144b0565b604051602001611c3d929190615764565b604051602081830303815290604052905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611c9a57604051638b906c9760e01b815260040160405180910390fd5b6000879003611cbc57604051631ff3ed9d60e01b815260040160405180910390fd5b600b8054611cc990615632565b159050611ce85760405162dc149f60e41b815260040160405180910390fd5b600b611cf5888a83615807565b5060005b85811015611d6657600160136000898985818110611d1957611d19615695565b9050602002016020810190611d2e9190615259565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055611d5f816156ab565b9050611cf9565b5060005b83811015611dd757600160146000878785818110611d8a57611d8a615695565b9050602002016020810190611d9f9190615259565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055611dd0816156ab565b9050611d6a565b5060405163453f31d560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063453f31d590611e2690859085906004016158c6565b60006040518083038186803b158015611e3e57600080fd5b505afa158015611e52573d6000803e3d6000fd5b5060089250611e6691508390508483615807565b50611e6f6134fc565b50505050611e7b61309d565b505050505050505050565b6000611e90614003565b15611eae5760405163b063a8a560e01b815260040160405180910390fd5b611eb6613044565b611ebe614058565b7f00000000000000000000000000000000000000000000000000000000000000008015611efb57503360009081526013602052604090205460ff16155b15611f19576040516342f41ddd60e11b815260040160405180910390fd5b33611f226134fc565b50505050611f2e61309d565b506001600160a01b0387166000908152600960205260409020547f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060ff16611fac57604051631311dc6d60e01b815260040160405180910390fd5b816001600160a01b031685600081518110611fc957611fc9615695565b60200260200101516001600160a01b03161461202b578185600081518110611ff357611ff3615695565b602002602001015160405163b0b3262d60e01b81526004016116559291906001600160a01b0392831681529116602082015260400190565b806001600160a01b0316856001875161204491906158f5565b8151811061205457612054615695565b60200260200101516001600160a01b03161461208a5780856001875161207a91906158f5565b81518110611ff357611ff3615695565b861561209b5761209b33883361456b565b60006120af6120a98a613d3c565b3061463b565b60405163095ea7b360e01b81526001600160a01b038c81166004830152602482018c90529192509084169063095ea7b3906044016020604051808303816000875af1158015612102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121269190615908565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561216e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121929190615925565b6040516338ed173960e01b81529091506001600160a01b038c16906338ed1739906121c9908d908c908c903090429060040161593e565b6000604051808303816000875af11580156121e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261221091908101906159af565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015612258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227c9190615925565b9050600061228a83836158f5565b9050898110156122b757604051633b5d56ed60e11b8152600481018b905260248101829052604401611655565b6122c230823361456b565b6122cc818c615682565b9750336001600160a01b03167fb19ca0df3f3a01af950d8e6ad62aeff167cf14c73e98af6c52afef1add5c97ed8e8e878f866040516123389594939291906001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b60405180910390a25050600d546123669450859350600160201b90046001600160e01b031691506141f79050565b61240f576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b6001600160a01b0382166000908152601160205260409081902054600d549151633b49de0f60e21b815260048101939093526024830152600160201b90046001600160e01b03166044820152606401611655565b5061241a6001600655565b95945050505050565b600033816124318286612e5e565b9050838110156124915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401611655565b61249e82868684036133d7565b506001949350505050565b600033610ff1818585613afc565b7f000000000000000000000000000000000000000000000000000000000000000080156124f457503360009081526013602052604090205460ff16155b15612512576040516342f41ddd60e11b815260040160405180910390fd5b60005b8281101561262f57818061255857503384848381811061253757612537615695565b905060200201602081019061254c9190615259565b6001600160a01b031614155b1561261d57816013600086868581811061257457612574615695565b90506020020160208101906125899190615259565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558383828181106125c3576125c3615695565b90506020020160208101906125d89190615259565b6001600160a01b03167f9c798cce2c4fdbec95a1a6dbba64db726912274dac938f44e36bce9b779cfee883604051612614911515815260200190565b60405180910390a25b80612627816156ab565b915050612515565b50505050565b6000806000612659846001600160a01b031660009081526020819052604090205490565b6001600160a01b03909416600090815260126020908152604080832054601190925290912054949590949350915050565b6000612694613044565b61269c6134fc565b505060408051808201909152600e546001600160801b038082168352600160801b90910416602082015291506126d6905081866000613ca0565b91506126f5816126e584613d3c565b6126ee88613d3c565b8787614808565b5061104a6001600655565b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061104a908484613f8e565b600880546113b290615632565b600061274d613044565b336127566134fc565b5050505061276261309d565b506001600160a01b0387166000908152600960205260409020547f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009060ff166127e057604051631311dc6d60e01b815260040160405180910390fd5b806001600160a01b0316868660008181106127fd576127fd615695565b90506020020160208101906128129190615259565b6001600160a01b03161461287557808686600081811061283457612834615695565b90506020020160208101906128499190615259565b60405163b0b3262d60e01b81526001600160a01b03928316600482015291166024820152604401611655565b6001600160a01b038216868661288c6001826158f5565b81811061289b5761289b615695565b90506020020160208101906128b09190615259565b6001600160a01b0316146128db578186866128cc6001826158f5565b81811061283457612834615695565b6128e6883033614387565b60405163095ea7b360e01b81526001600160a01b038a81166004830152602482018a905282169063095ea7b3906044016020604051808303816000875af1158015612935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129599190615908565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156129a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c59190615925565b6040516338ed173960e01b81529091506001600160a01b038b16906338ed1739906129fe908c908c908c908c9030904290600401615a34565b6000604051808303816000875af1158015612a1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a4591908101906159af565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015612a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab19190615925565b9050612abd82826158f5565b955088861015612aea57604051633b5d56ed60e11b8152600481018a905260248101879052604401611655565b60408051808201909152600f546001600160801b038082168352600160801b9091041660208201526000612b1f828983613f8e565b9050612b3e82612b2e8a613d3c565b612b3784613d3c565b3033613da9565b604080516001600160a01b038f168152602081018e90529081018990526060810182905233907fe947f0f9b6255bdcf76d13d1257d34fbe380e0d5d4daa75e61c783a41e1607ba90608001612338565b612b96613044565b612b9e614003565b15612bbc5760405163b063a8a560e01b815260040160405180910390fd5b612bc46134fc565b50505050612bd333838361456b565b612bdd6001600655565b5050565b612be9613044565b33612bf26134fc565b505033600090815260126020526040902054159150612c17905057612c1561309d565b505b612c22838333614387565b600d54612c40908290600160201b90046001600160e01b03166141f7565b612c95576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b50612bdd6001600655565b6000612caa613edf565b604080518082018252600e546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600f548083168652929092048116918401919091529091908516600003612d13573060009081526020819052604090205494505b612d28826001600160801b0387166001613ca0565b92506000612d3683836149bb565b905083811015612d63576040516362ddb6d760e11b81526004810182905260248101859052604401611655565b8383600001818151612d759190615724565b6001600160801b0316905250602083018051879190612d95908390615724565b6001600160801b03908116909152612db19150309088166149db565b825160208401516001600160801b03908116600160801b02911617600e55612e036001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686614b0a565b604080516001600160801b03881681526001600160a01b03871660208201529081018590527f14f6e172cd596e9f9c5d24e2d4010daa24f8f65f9274b259b66517b306c617b99060600160405180910390a150505092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000612e93614003565b15612eb15760405163b063a8a560e01b815260040160405180910390fd5b612eb9614058565b612ec1613044565b337f00000000000000000000000000000000000000000000000000000000000000008015612eff57503360009081526013602052604090205460ff16155b15612f1d576040516342f41ddd60e11b815260040160405180910390fd5b612f256134fc565b50505050612f3161309d565b508315612f4357612f4333853361456b565b612f55612f4f86613d3c565b8461463b565b600d54909250612f76908290600160201b90046001600160e01b03166141f7565b6126f5576001600160a01b038116600090815260126020908152604091829020548251808401909352600f546001600160801b038082168552600160801b90910416918301919091526123bb91906001613ca0565b612fd3613edf565b6001600160a01b0381166130385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611655565b613041816141a5565b50565b6002600654036130965760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611655565b6002600655565b60408051808201909152600d5463ffffffff8116808352600160201b9091046001600160e01b03166020830152600091904290036130e757602001516001600160e01b0316919050565b6ec097ce7bc90715b34b9f10000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561320a5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131aa9190615abf565b505050915050600081136131fc576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611655565b61320681836156c4565b9150505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561331d5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132bd9190615abf565b5050509150506000811361330f576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611655565b61331981836156db565b9150505b6133477f0000000000000000000000000000000000000000000000000000000000000000826156db565b92506001600160e01b038311156133715760405163057b0e2160e41b815260040160405180910390fd5b6001600160e01b0383166020830181905263ffffffff4216808452600160201b90910217600d556040517f4fc1b45960547ee95894b08a284c3c066cf5aca706a7420639c42c3ec2e118a4906133ca9085815260200190565b60405180910390a1505090565b6001600160a01b0383166134395760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401611655565b6001600160a01b03821661349a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401611655565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60408051608081018252600c546001600160401b038082168352600160401b820481166020840152600160801b82048116938301849052600160c01b9091041660608201526000918291829182919042900361355d57606001519050611025565b604080518082018252600e546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600f548083168652929092041690830181905290919015806135bd5750600554600160a01b900460ff165b1561365257600554600160a01b900460ff166135de5763096ba6c460608401525b6001600160401b0342811660408501819052438216808652600c8054602088015160608901518616600160c01b026001600160c01b03600160801b909602959095166001600160801b0391909616600160401b026001600160801b0319909216909317179190911692909217179055613a7f565b600083604001516001600160401b03164261366d91906158f5565b835183519192506000916001600160801b03918216916136919116620186a06156c4565b61369b91906156db565b90506136a5614003565b156136d2577f000000000000000000000000000000000000000000000000000000000000000095506137bf565b60008560600151838388600001516001600160401b0316436136f491906158f5565b604080516001600160401b0390951660208601528401929092526060830152608082015260a00160408051601f1981840301815290829052631b54c1a360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b54c1a39061377a908490600890600401615b0f565b602060405180830381865afa158015613797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137bb9190615baa565b9650505b606080860151604080516001600160401b03928316815260208101869052908101849052908816918101919091527fc63977c8e2362a31182dc8e89a52252f9836922738e0abcfc0de6924972eafe59060800160405180910390a16001600160401b038087166060870181905242821660408801524390911686528351670de0b6b3a7640000919061385a906001600160801b0316856156c4565b61386491906156c4565b61386e91906156db565b83519099506001600160801b03906138889082168b615682565b111580156138ab575083516001600160801b03906138a89082168b615682565b11155b156139e75788836000018181516138c29190615744565b6001600160801b03169052508351899085906138df908390615744565b6001600160801b031690525060208501516001600160401b03161561398a57620186a085602001516001600160401b03168a61391b91906156c4565b61392591906156db565b845190985061393e9089906001600160801b03166158f5565b6020850151613956906001600160801b03168a6156c4565b61396091906156db565b965086846020018181516139749190615744565b6001600160801b031690525061398a3088614b15565b606080860151604080518c81526001600160401b0390921660208301528101849052908101899052608081018890527f50225349cc7e3814c4fa5fe6baef7a3c4cac55e92c64b1f4a5d1ba55e65dcc829060a00160405180910390a15b505081516020808401516001600160801b03908116600160801b90810293821693909317600e558551600c80548885015160408a015160608b01516001600160401b03908116600160c01b026001600160c01b039282168a0292909216928116600160401b026001600160801b031994909416951694909417919091178416179190911790558351918401518116909202911617600f555b50505090919293565b6000613a948484612e5e565b9050600019811461262f5781811015613aef5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611655565b61262f84848484036133d7565b6001600160a01b038316613b605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401611655565b6001600160a01b038216613bc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401611655565b6001600160a01b03831660009081526020819052604090205481811015613c3a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401611655565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361262f565b600083602001516001600160801b0316600003613cbe57508161104a565b602084015184516001600160801b0391821691613cdc9116856156c4565b613ce691906156db565b9050818015613d2457508284600001516001600160801b031685602001516001600160801b031683613d1891906156c4565b613d2291906156db565b105b1561104a57613d34816001615682565b949350505050565b60006001600160801b03821115613da55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401611655565b5090565b8385600001818151613dbb9190615724565b6001600160801b0316905250602085018051849190613ddb908390615724565b6001600160801b039081169091526001600160a01b03831660009081526012602052604081208054928716935091613e149084906158f5565b9091555050845160208601516001600160801b03908116600160801b02911617600f556001600160a01b0382163014613e8557613e856001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683306001600160801b038816614bd4565b604080516001600160801b038087168252851660208201526001600160a01b0380841692908516917f9dc1449a0ff0c152e18e8289d865b47acc6e1b76b1ecb239c13d6ee22a9206a7910160405180910390a35050505050565b6005546001600160a01b0316331461136d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611655565b613f41614be0565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b82516000906001600160801b03168103613fa957508161104a565b835160208501516001600160801b0391821691613fc79116856156c4565b613fd191906156db565b9050818015613d2457508284602001516001600160801b031685600001516001600160801b031683613d1891906156c4565b60007f00000000000000000000000000000000000000000000000000000000000000001580159061405357507f000000000000000000000000000000000000000000000000000000000000000042115b905090565b600554600160a01b900460ff161561136d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611655565b82846000018181516140b79190615744565b6001600160801b03169052506020840180518391906140d7908390615744565b6001600160801b039081169091526140f3915082908416614b15565b835160208501516001600160801b03908116600160801b0291811691909117600e5561414f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690339030908716614bd4565b604080516001600160801b038086168252841660208201526001600160a01b0383169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f000000000000000000000000000000000000000000000000000000000000000060000361422957506001610ff7565b6001600160a01b0383166000908152601260209081526040808320548151808301909252600f546001600160801b038082168452600160801b9091041692820192909252614278916001613ca0565b90508060000361428c576001915050610ff7565b6001600160a01b038416600090815260116020526040812054908190036142b857600092505050610ff7565b600081620186a0670de0b6b3a76400006142d288876156c4565b6142dc91906156db565b6142e691906156c4565b6142f091906156db565b7f000000000000000000000000000000000000000000000000000000000000000010159695505050505050565b60006001600160ff1b03821115613da55760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611655565b6001600160a01b038116600090815260116020526040812080548592906143af9084906158f5565b9250508190555082601060008282546143c891906158f5565b90915550506001600160a01b0382163014614411576144116001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168385614b0a565b806001600160a01b0316826001600160a01b0316336001600160a01b03167fbc290bb45104f73cf92115c9603987c3f8fd30c182a13603d8cffa49b5f599528660405161446091815260200190565b60405180910390a4505050565b614475614058565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613f713390565b60408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b179052905160609160009182916001600160a01b038616916144f79190615bd3565b600060405180830381855afa9150503d8060008114614532576040519150601f19603f3d011682016040523d82523d6000602084013e614537565b606091505b50915091508161456257604051806040016040528060038152602001623f3f3f60e81b815250613d34565b613d3481614c30565b6001600160a01b03811660009081526011602052604081208054849290614593908490615682565b9250508190555081601060008282546145ac9190615682565b90915550506001600160a01b03831630146145f6576145f66001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085614bd4565b806001600160a01b0316836001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f846040516134ef91815260200190565b604080518082018252600f546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600e548083168652929092041690830152600091829061469090836149bb565b9050846001600160801b03168110156146ce576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611655565b6146e3826001600160801b0387166001613f8e565b925084826000018181516146f79190615744565b6001600160801b0316905250602082018051849190614717908390615744565b6001600160801b0390811690915283516020808601518316600160801b029190921617600f55336000908152601290915260408120805486935090919061475f908490615682565b90915550506001600160a01b03841630146147b1576147b16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016856001600160801b038816614b0a565b604080516001600160801b0387168152602081018590526001600160a01b0386169133917f01348584ec81ac7acd52b7d66d9ade986dd909f3d513881c190fc31c90527efe910160405180910390a3505092915050565b336001600160a01b038216146148495760006148248233612e5e565b9050600019811461484757614847823361106e6001600160801b038816856158f5565b505b60408051808201909152600f546001600160801b038082168352600160801b90910416602082015260009061487f9087906149bb565b9050846001600160801b03168110156148bd576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611655565b84866000018181516148cf9190615724565b6001600160801b03169052506020860180518591906148ef908390615724565b6001600160801b03908116909152875160208901518216600160801b0290821617600e556149219150839086166149db565b61495e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016846001600160801b038816614b0a565b604080516001600160801b038088168252861660208201526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4505050505050565b805182516000916149cb91615724565b6001600160801b03169392505050565b6001600160a01b038216614a3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401611655565b6001600160a01b03821660009081526020819052604090205481811015614aaf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401611655565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016134ef565b505050565b614b05838383614db2565b6001600160a01b038216614b6b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401611655565b8060026000828254614b7d9190615682565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61262f84848484614e15565b600554600160a01b900460ff1661136d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611655565b60606040825110614c4f5781806020019051810190610ff79190615bef565b8151602003614d8e5760005b60208160ff16108015614c905750828160ff1681518110614c7e57614c7e615695565b01602001516001600160f81b03191615155b15614ca75780614c9f81615c82565b915050614c5b565b60008160ff166001600160401b03811115614cc457614cc46153f1565b6040519080825280601f01601f191660200182016040528015614cee576020820181803683370190505b509050600091505b60208260ff16108015614d2b5750838260ff1681518110614d1957614d19615695565b01602001516001600160f81b03191615155b1561104a57838260ff1681518110614d4557614d45615695565b602001015160f81c60f81b818360ff1681518110614d6557614d65615695565b60200101906001600160f81b031916908160001a90535081614d8681615c82565b925050614cf6565b50506040805180820190915260038152623f3f3f60e81b602082015290565b919050565b6040516001600160a01b038316602482015260448101829052614b0590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614e4d565b6040516001600160a01b038085166024830152831660448201526064810182905261262f9085906323b872dd60e01b90608401614dde565b6000614ea2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614f1f9092919063ffffffff16565b805190915015614b055780806020019051810190614ec09190615908565b614b055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611655565b6060613d34848460008585600080866001600160a01b03168587604051614f469190615bd3565b60006040518083038185875af1925050503d8060008114614f83576040519150601f19603f3d011682016040523d82523d6000602084013e614f88565b606091505b5091509150614f9987838387614fa4565b979650505050505050565b6060831561501357825160000361500c576001600160a01b0385163b61500c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611655565b5081613d34565b613d3483838151156150285781518083602001fd5b8060405162461bcd60e51b81526004016116559190615092565b60005b8381101561505d578181015183820152602001615045565b50506000910152565b6000815180845261507e816020860160208601615042565b601f01601f19169290920160200192915050565b60208152600061104a6020830184615066565b80356001600160a01b0381168114614dad57600080fd5b600080604083850312156150cf57600080fd5b6150d8836150a5565b946020939093013593505050565b6000806000606084860312156150fb57600080fd5b615104846150a5565b9250615112602085016150a5565b9150604084013590509250925092565b60008083601f84011261513457600080fd5b5081356001600160401b0381111561514b57600080fd5b6020830191508360208260051b850101111561516657600080fd5b9250929050565b801515811461304157600080fd5b60008060006040848603121561519057600080fd5b83356001600160401b038111156151a657600080fd5b6151b286828701615122565b90945092505060208401356151c68161516d565b809150509250925092565b600080604083850312156151e457600080fd5b823591506151f4602084016150a5565b90509250929050565b6000806040838503121561521057600080fd5b615219836150a5565b915060208301356152298161516d565b809150509250929050565b6000806040838503121561524757600080fd5b8235915060208301356152298161516d565b60006020828403121561526b57600080fd5b61104a826150a5565b80356001600160801b0381168114614dad57600080fd5b6000806000606084860312156152a057600080fd5b6152a984615274565b9250602084013591506152be604085016150a5565b90509250925092565b6000602082840312156152d957600080fd5b813563ffffffff8116811461104a57600080fd5b60008083601f8401126152ff57600080fd5b5081356001600160401b0381111561531657600080fd5b60208301915083602082850101111561516657600080fd5b6000806000806000806000806080898b03121561534a57600080fd5b88356001600160401b038082111561536157600080fd5b61536d8c838d016152ed565b909a50985060208b013591508082111561538657600080fd5b6153928c838d01615122565b909850965060408b01359150808211156153ab57600080fd5b6153b78c838d01615122565b909650945060608b01359150808211156153d057600080fd5b506153dd8b828c016152ed565b999c989b5096995094979396929594505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561542f5761542f6153f1565b604052919050565b60006001600160401b03821115615450576154506153f1565b5060051b60200190565b600080600080600060a0868803121561547257600080fd5b61547b866150a5565b94506020808701359450604087013593506060870135925060808701356001600160401b038111156154ac57600080fd5b8701601f810189136154bd57600080fd5b80356154d06154cb82615437565b615407565b81815260059190911b8201830190838101908b8311156154ef57600080fd5b928401925b8284101561551457615505846150a5565b825292840192908401906154f4565b80955050505050509295509295909350565b60008060006060848603121561553b57600080fd5b8335925061554b602085016150a5565b91506152be604085016150a5565b60008060008060006080868803121561557157600080fd5b61557a866150a5565b9450602086013593506040860135925060608601356001600160401b038111156155a357600080fd5b6155af88828901615122565b969995985093965092949392505050565b600080604083850312156155d357600080fd5b6155dc83615274565b91506151f4602084016150a5565b600080604083850312156155fd57600080fd5b6155dc836150a5565b60008060006060848603121561561b57600080fd5b83359250602084013591506152be604085016150a5565b600181811c9082168061564657607f821691505b60208210810361566657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ff757610ff761566c565b634e487b7160e01b600052603260045260246000fd5b6000600182016156bd576156bd61566c565b5060010190565b8082028115828204841417610ff757610ff761566c565b6000826156f857634e487b7160e01b600052601260045260246000fd5b500490565b818103600083128015838313168383128216171561571d5761571d61566c565b5092915050565b6001600160801b0382811682821603908082111561571d5761571d61566c565b6001600160801b0381811683821601908082111561571d5761571d61566c565b6c0233930bc3632b7322b1890169609d1b81526000835161578c81600d850160208801615042565b602f60f81b600d9184019182015283516157ad81600e840160208801615042565b01600e01949350505050565b601f821115614b0557600081815260208120601f850160051c810160208610156157e05750805b601f850160051c820191505b818110156157ff578281556001016157ec565b505050505050565b6001600160401b0383111561581e5761581e6153f1565b6158328361582c8354615632565b836157b9565b6000601f841160018114615866576000851561584e5750838201355b600019600387901b1c1916600186901b17835561120f565b600083815260209020601f19861690835b828110156158975786850135825560209485019460019092019101615877565b50868210156158b45760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b81810381811115610ff757610ff761566c565b60006020828403121561591a57600080fd5b815161104a8161516d565b60006020828403121561593757600080fd5b5051919050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561598e5784516001600160a01b031683529383019391830191600101615969565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156159c257600080fd5b82516001600160401b038111156159d857600080fd5b8301601f810185136159e957600080fd5b80516159f76154cb82615437565b81815260059190911b82018301908381019087831115615a1657600080fd5b928401925b82841015614f9957835182529284019290840190615a1b565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015615a84576001600160a01b03615a71856150a5565b1682529282019290820190600101615a58565b506001600160a01b0396909616606085015250505060800152949350505050565b805169ffffffffffffffffffff81168114614dad57600080fd5b600080600080600060a08688031215615ad757600080fd5b615ae086615aa5565b9450602086015193506040860151925060608601519150615b0360808701615aa5565b90509295509295909350565b604081526000615b226040830185615066565b60208382038185015260008554615b3881615632565b80855260018281168015615b535760018114615b6d57615b9b565b60ff1984168787015282151560051b870186019450615b9b565b896000528560002060005b84811015615b93578154898201890152908301908701615b78565b880187019550505b50929998505050505050505050565b600060208284031215615bbc57600080fd5b81516001600160401b038116811461104a57600080fd5b60008251615be5818460208701615042565b9190910192915050565b600060208284031215615c0157600080fd5b81516001600160401b0380821115615c1857600080fd5b818401915084601f830112615c2c57600080fd5b815181811115615c3e57615c3e6153f1565b615c51601f8201601f1916602001615407565b9150808252856020828501011115615c6857600080fd5b615c79816020840160208601615042565b50949350505050565b600060ff821660ff8103615c9857615c9861566c565b6001019291505056fea264697066735822122005b78e73b6774601d7896aec422743fa153ac2d4027848994508564f3e03c19c64736f6c63430008110033",
    "sourceMapi;:::-;;;368:25:26;;;356:2;341:18;22095:166:22;222:177:26;1779:158:21;;;:::i;:::-;;;;;;;:::i;4431:197:13:-;;;;;;:::i;:::-;;:::i;:::-;;;1762:14:26;;1755:22;1737:41;;1725:2;1710:18;4431:197:13;1597:187:26;16340:261:22;;;:::i;:::-;;;;2018:25:26;;;2074:2;2059:18;;2052:34;;;;2102:18;;;2095:34;-1:-1:-1;;;;;2165:31:26;2160:2;2145:18;;2138:59;2005:3;1990:19;16340:261:22;1789:414:26;1901:44:22;;;;;2480:154:21;2610:10;:17;-1:-1:-1;;;2610:17:21;;-1:-1:-1;;;;;2610:17:21;2480:154;;4718:45:22;;;;;5190:286:13;;;;;;:::i;:::-;;:::i;2282:142:21:-;;;2415:2;2683:36:26;;2671:2;2656:18;2282:142:21;2541:184:26;4410:1002:21;;;;-1:-1:-1;;;;;4932:13:21;3173:15:26;;3155:34;;4986:18:21;3225:15:26;;3220:2;3205:18;;3198:43;5033:14:21;3277:15:26;;3257:18;;;3250:43;;;;5073:12:21;3329:15:26;;3324:2;3309:18;;3302:43;5119:12:21;3382:15:26;;3376:3;3361:19;;3354:44;5163:16:21;3435:15:26;;3135:3;3414:19;;3407:44;5212:19:21;3488:15:26;;3482:3;3467:19;;3460:44;5263:26:21;3541:15:26;;;;3535:3;3520:19;;3513:44;5326:23:21;3601:14:26;3594:22;3588:3;3573:19;;3566:51;5384:21:21;3661:14:26;3654:22;3648:3;3633:19;;3626:51;3104:3;3089:19;4410:1002:21;2730:953:26;2867:95:21;2941:13;2867:95;;5871:234:13;;;;;;:::i;:::-;;:::i;14252:472:21:-;;;;;;:::i;:::-;;:::i;:::-;;39863:466:22;;;;;;:::i;:::-;;:::i;13595:166:21:-;;;;;;:::i;:::-;;:::i;16125:308::-;;;:::i;9069:177::-;;;;;;:::i;:::-;;:::i;1951:44:22:-;;;;;4825:43;;;;;4146:30;;;;;;4489:51;;;;;;:::i;:::-;;;;;;;;;;;;;;1212:31;;;:::i;9518:177:21:-;;;;;;:::i;:::-;;:::i;1615:84:11:-;1685:7;;-1:-1:-1;;;1685:7:11;;;;1615:84;;2520:32:22;;;;;-1:-1:-1;;;;;2520:32:22;;;26094:518;;;;;;:::i;:::-;;:::i;3406:125:13:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:13;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:9;;;:::i;41908:4442:22:-;;;;;;:::i;:::-;;:::i;10791:332:21:-;;;;;;:::i;:::-;;:::i;4020:31:22:-;;;;;-1:-1:-1;;;;;4020:31:22;;;;-1:-1:-1;;;4020:31:22;;;;;;;;;-1:-1:-1;;;;;6890:15:26;;;6872:34;;6942:15;;;;6937:2;6922:18;;6915:43;6792:18;4020:31:22;6645:319:26;15713:406:21;;;:::i;10301:225::-;;;;;;:::i;:::-;;:::i;2252:40:22:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1201:85:9;1273:6;;-1:-1:-1;;;;;1273:6:9;1201:85;;8639:179:21;;;;;;:::i;:::-;;:::i;3258:38:22:-;;;;;-1:-1:-1;;;;;3258:38:22;;;;-1:-1:-1;;;3258:38:22;;;;;-1:-1:-1;;;3258:38:22;;;;;-1:-1:-1;;;3258:38:22;;;;;;;;;-1:-1:-1;;;;;7247:15:26;;;7229:34;;7299:15;;;7294:2;7279:18;;7272:43;7351:15;;;7331:18;;;7324:43;;;;7403:15;;;7398:2;7383:18;;7376:43;7179:3;7164:19;3258:38:22;6969:456:26;1943:333:21;;;:::i;9941:1196:22:-;;;;;;:::i;:::-;;:::i;2968:725:21:-;;;;1537:3:1;9478:25:26;;;9534:2;9519:18;;9512:34;;;9562:18;;;9555:34;;;9620:2;9605:18;;9598:34;;;;1756:4:1;9663:3:26;9648:19;;9641:35;1852:9:1;9707:3:26;9692:19;;9685:60;3052:22:21;9776:3:26;9761:19;;9754:48;2040:3:1;9833::26;9818:19;;9811:35;9465:3;9450:19;2968:725:21;9139:713:26;1681:39:22;;;;;48405:2989;;;;;;:::i;:::-;;:::i;6592:427:13:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;2416:48:22:-;;;;;4874:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15227:480:21;;;;;;:::i;:::-;;:::i;4317:56:22:-;;;;;;:::i;:::-;;;;;;;;;;;;;;6546:402:21;;;;;;:::i;:::-;;:::i;:::-;;;;11841:25:26;;;11897:2;11882:18;;11875:34;;;;11925:18;;;11918:34;11829:2;11814:18;6546:402:21;11639:319:26;29502:472:22;;;;;;:::i;:::-;;:::i;1769:44::-;;;;;8204:179:21;;;;;;:::i;:::-;;:::i;1586:42:22:-;;;;;2127:29;;;:::i;4769:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;52826:2693;;;;;;:::i;:::-;;:::i;34833:234::-;;;;;;:::i;:::-;;:::i;7340:644:21:-;7636:44;;;;;;;;7670:10;7636:44;-1:-1:-1;;;;;7636:44:21;;;;;;-1:-1:-1;;;7636:44:21;;;;;;;;;;;;;7787:46;;;;;;;7822:11;7787:46;;;;;;;;;;;;;;;;;;;7636:44;7962:15;7340:644;;13707:34:26;;;13757:18;;;13750:43;13809:18;;;13802:43;;;;13876:2;13861:18;;13854:43;13928:3;13913:19;;13906:35;13641:3;13626:19;7340:644:21;13395:552:26;2345:41:22;;;;;37116:415;;;;;;:::i;:::-;;:::i;2776:37::-;;;;;2819:36;;;;;11751:1410:21;;;;;;:::i;:::-;;:::i;3974:149:13:-;;;;;;:::i;:::-;;:::i;32831:549:22:-;;;;;;:::i;:::-;;:::i;2043:45::-;;;;;2579:51;;;;;2081:198:9;;;;;;:::i;:::-;;:::i;1840:31:22:-;;;;;3914:30;;;;;-1:-1:-1;;;;;3914:30:22;;;;-1:-1:-1;;;3914:30:22;;;;;2470:44;;;;;3668:40;;;;;;;;;-1:-1:-1;;;3668:40:22;;-1:-1:-1;;;;;3668:40:22;;;;;;;15242:10:26;15230:23;;;15212:42;;-1:-1:-1;;;;;15290:32:26;;;15285:2;15270:18;;15263:60;15185:18;3668:40:22;15040:289:26;5750:485:21;;;;6057:19;15593:25:26;;6096:6:21;15649:2:26;15634:18;;15627:34;6135:19:21;15677:18:26;;;15670:34;;;;6180:12:21;15735:2:26;15720:18;;15713:34;6217:11:21;15778:3:26;15763:19;;15756:35;15580:3;15565:19;5750:485:21;15334:463:26;22095:166:22;22180:21;2246::12;:19;:21::i;:::-;22233::22::1;:19;:21::i;:::-;22217:37;;2288:20:12::0;1701:1;2794:7;:22;2614:209;2288:20;22095:166:22;:::o;1779:158:21:-;1880:13;1916:14;1909:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:158;:::o;4431:197:13:-;4514:4;719:10:19;4568:32:13;719:10:19;4584:7:13;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;16340:261:22:-;16431:23;16468:19;16501:18;16533:15;2246:21:12;:19;:21::i;:::-;16580:14:22::1;:12;:14::i;:::-;16573:21;;;;;;;;2288:20:12::0;1701:1;2794:7;:22;2614:209;2288:20;16340:261:22;;;;:::o;5190:286:13:-;5317:4;719:10:19;5373:38:13;5389:4;719:10:19;5404:6:13;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;5871:234::-;5959:4;719:10:19;6013:64:13;719:10:19;6029:7:13;6066:10;6038:25;719:10:19;6029:7:13;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;14252:472:21:-;14365:10;14364:21:22;:98;;;;-1:-1:-1;14419:10:22;14403:27;;;;:15;:27;;;;;;;;14402:28;;:59;;-1:-1:-1;;;;;;14435:26:22;;;;;;:15;:26;;;;;;;;14434:27;14402:59;14347:179;;;14494:21;;-1:-1:-1;;;14494:21:22;;;;;;;;;;;14347:179;14396:9:21::1;14391:327;14411:19:::0;;::::1;14391:327;;;14531:9;:38;;;-1:-1:-1::0;14559:10:21::1;14544:8:::0;;14553:1;14544:11;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14544:25:21::1;;;14531:38;14527:181;;;14620:9;14589:15;:28;14605:8;;14614:1;14605:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14589:28:21::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14589:28:21;:40;;-1:-1:-1;;14589:40:21::1;::::0;::::1;;::::0;;;::::1;::::0;;14670:8;;14679:1;14670:11;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14652:41:21::1;;14683:9;14652:41;;;;1762:14:26::0;1755:22;1737:41;;1725:2;1710:18;;1597:187;14652:41:21::1;;;;;;;;14527:181;14432:3:::0;::::1;::::0;::::1;:::i;:::-;;;;14391:327;;;;14252:472:::0;;;;:::o;39863:466:22:-;39974:22;2246:21:12;:19;:21::i;:::-;40012:14:22::1;:12;:14::i;:::-;-1:-1:-1::0;;40036:46:22::1;::::0;;;;::::1;::::0;;;40071:11:::1;40036:46:::0;-1:-1:-1;;;;;40036:46:22;;::::1;::::0;;-1:-1:-1;;;40036:46:22;;::::1;;;::::0;::::1;::::0;;-1:-1:-1;40109:36:22::1;::::0;-1:-1:-1;40036:46:22;40131:7;40036:46;40109:21:::1;:36::i;:::-;40092:53;;40155:167;40180:12;40206:26;:14;:24;:26::i;:::-;40246:19;:7;:17;:19::i;:::-;40279:10;40303:9;40155:11;:167::i;:::-;40002:327;2288:20:12::0;1701:1;2794:7;:22;2614:209;13595:166:21;1094:13:9;:11;:13::i;:::-;-1:-1:-1;;;;;13678:18:21;::::1;;::::0;;;:8:::1;:18;::::0;;;;;;;;:30;;-1:-1:-1;;13678:30:21::1;::::0;::::1;;::::0;;::::1;::::0;;;13723:31;;16889:51:26;;;16956:18;;;16949:50;13723:31:21::1;::::0;16862:18:26;13723:31:21::1;;;;;;;13595:166:::0;;:::o;16125:308::-;16167:10;-1:-1:-1;;;;;16181:19:21;16167:33;;;;;:58;;-1:-1:-1;1273:6:9;;-1:-1:-1;;;;;1273:6:9;16204:10:21;:21;;16167:58;16163:117;;;16248:21;;-1:-1:-1;;;16248:21:21;;;;;;;;;;;16163:117;16392:14;:12;:14::i;:::-;;;;;16416:10;:8;:10::i;:::-;16125:308::o;9069:177::-;9201:19;;;;;;;;;:10;:19;-1:-1:-1;;;;;9201:19:21;;;;;-1:-1:-1;;;9201:19:21;;;;;;;;9171:7;;9201:38;;9221:7;9230:8;9201:19;:38::i;1212:31:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9518:177:21:-;9650:19;;;;;;;;;:10;:19;-1:-1:-1;;;;;9650:19:21;;;;;-1:-1:-1;;;9650:19:21;;;;;;;;9620:7;;9650:38;;9670:7;9679:8;9650:19;:38::i;26094:518:22:-;26284:23;2246:21:12;:19;:21::i;:::-;14659:17:22::1;:15;:17::i;:::-;14655:69;;;14699:14;;-1:-1:-1::0;;;14699:14:22::1;;;;;;;;;;;14655:69;1239:19:11::2;:17;:19::i;:::-;26256:9:22::3;14364:21;:98;;;;-1:-1:-1::0;14419:10:22::3;14403:27;::::0;;;:15:::3;:27;::::0;;;;;::::3;;14402:28;::::0;:59:::3;;-1:-1:-1::0;;;;;;14435:26:22;::::3;;::::0;;;:15:::3;:26;::::0;;;;;::::3;;14434:27;14402:59;14347:179;;;14494:21;;-1:-1:-1::0;;;14494:21:22::3;;;;;;;;;;;14347:179;26323:14:::4;:12;:14::i;:::-;-1:-1:-1::0;;26347:44:22::4;::::0;;;;::::4;::::0;;;26381:10:::4;26347:44:::0;-1:-1:-1;;;;;26347:44:22;;::::4;::::0;;-1:-1:-1;;;26347:44:22;;::::4;;;::::0;::::4;::::0;;-1:-1:-1;26419:36:22::4;::::0;-1:-1:-1;26347:44:22;26440:7;26347:31:::4;26419:20;:36::i;:::-;26401:54;;26465:140;26487:11;26512:19;:7;:17;:19::i;:::-;26545:27;:15;:25;:27::i;:::-;26586:9;26465:8;:140::i;:::-;26313:299;1268:1:11::3;2288:20:12::0;1701:1;2794:7;:22;2614:209;1831:101:9;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;41908:4442:22:-:0;42135:32;1239:19:11;:17;:19::i;:::-;2246:21:12::1;:19;:21::i;:::-;42106:10:22::2;14364:21;:98;;;;-1:-1:-1::0;14419:10:22::2;14403:27;::::0;;;:15:::2;:27;::::0;;;;;::::2;;14402:28;::::0;:59:::2;;-1:-1:-1::0;;;;;;14435:26:22;::::2;;::::0;;;:15:::2;:26;::::0;;;;;::::2;;14434:27;14402:59;14347:179;;;14494:21;;-1:-1:-1::0;;;14494:21:22::2;;;;;;;;;;;14347:179;42205:9:::3;42187:15;:27;42183:92;;;42235:40;::::0;-1:-1:-1;;;42235:40:22;;42248:15:::3;42235:40;::::0;::::3;17184:25:26::0;17225:18;;;17218:34;;;17157:18;;42235:40:22::3;;;;;;;;42183:92;42286:14;:12;:14::i;:::-;;;;;42310:21;42334;:19;:21::i;:::-;42310:45;;42370:36;42381:9;42392:13;42370:10;:36::i;:::-;42366:91;;;42429:17;;-1:-1:-1::0;;;42429:17:22::3;;;;;;;;;;;42366:91;42494:46;::::0;;;;::::3;::::0;;42529:11:::3;42494:46:::0;-1:-1:-1;;;;;42494:46:22;;::::3;::::0;;-1:-1:-1;;;42494:46:22;;::::3;;;::::0;;::::3;::::0;;;;-1:-1:-1;;;;;42583:32:22;::::3;42494;42583::::0;;;:21:::3;:32:::0;;;;;;42651:16:::3;:27:::0;;;;;;;42494:46;;42583:32;;42651:39:::3;::::0;:37:::3;:39::i;:::-;42625:65:::0;-1:-1:-1;42735:26:22::3;::::0;1756:4:1::3;43056:13:22::0;42988:65:::3;:12:::0;-1:-1:-1;;;;;42988:65:22;::::3;42735:26:::0;42988:38:::3;:65::i;:::-;:81;;;;:::i;:::-;42987:120;;;;:::i;:::-;42940:168:::0;-1:-1:-1;43341:42:22::3;1602:3:1;43446:35:22;43462:19;1602:3:1::0;43446:35:22::3;:::i;:::-;43387:95;::::0;:35;:95:::3;:::i;:::-;43386:113;;;;:::i;:::-;43341:158;;43875:45;:34;:43;:45::i;:::-;43823:33;:22;:31;:33::i;:::-;:97;;;;:::i;:::-;43800:121;;44184:1;44161:19;:24;;:197;;1602:3:1;44305:35:22;44321:19;1602:3:1::0;44305:35:22::3;:::i;:::-;44246:95;::::0;:35;:95:::3;:::i;:::-;44245:113;;;;:::i;:::-;44161:197;;;44204:22;44161:197;44134:224:::0;-1:-1:-1;44477:32:22::3;::::0;-1:-1:-1;44512:83:22::3;::::0;-1:-1:-1;44526:47:22::3;:12:::0;-1:-1:-1;;;;;44526:47:22;::::3;44568:4;44526:21;:47::i;:::-;44512:81;:83::i;:::-;44477:118;;44658:23;44705::::0;44769:1:::3;44746:19;:24;44742:697;;44869:36;44887:18:::0;44869:15;:36:::3;:::i;:::-;44851:54:::0;-1:-1:-1;;;;;;44927:19:22;::::3;::::0;44923:502:::3;;45030:105;45056:45;:12:::0;-1:-1:-1;;;;;45056:45:22;::::3;45095:5;45056:21;:45::i;45030:105::-;45012:123;;45285:15;45262:12;:19;;:38;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;45262:38:22;;::::3;::::0;;;45370:10:::3;:36:::0;;45391:15;;-1:-1:-1;45370:10:22;;:17:::3;::::0;:36:::3;::::0;45391:15;;45370:36:::3;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;45370:36:22::3;;;;;-1:-1:-1::0;;;;;45370:36:22::3;;;;;;44923:502;45484:9;-1:-1:-1::0;;;;;45457:236:22::3;;45511:24;45553:18;45589:24;45631:15;45664;45457:236;;;;;;;;;18327:25:26::0;;;-1:-1:-1;;;;;18441:15:26;;;18436:2;18421:18;;18414:43;18493:15;;;18488:2;18473:18;;18466:43;18545:15;;18540:2;18525:18;;18518:43;18598:15;18592:3;18577:19;;18570:44;18314:3;18299:19;;18068:552;45457:236:22::3;;;;;;;;44691:1013;45803:182;45828:12;45854:24;45913:15;45892:18;:36;;;;:::i;:::-;45942:10;45966:9;45803:11;:182::i;:::-;46277:66;46295:24;46321:10;46333:9;46277:17;:66::i;:::-;42173:4177;;;;;;;2277:1:12::2;2288:20:::1;1701:1:::0;2794:7;:22;2614:209;10791:332:21;1239:19:11;:17;:19::i;:::-;10877:17:21::1;::::0;-1:-1:-1;;;;;10877:17:21::1;10863:10;:31;10859:58;;10903:14;;-1:-1:-1::0;;;10903:14:21::1;;;;;;;;;;;10859:58;2040:3:1;10931:7:21;:26;;;10927:80;;;10980:16;;-1:-1:-1::0;;;10980:16:21::1;;;;;;;;;;;10927:80;11016:14;:12;:14::i;:::-;-1:-1:-1::0;;11040:15:21::1;:43:::0;;-1:-1:-1;;11040:43:21::1;;::::0;::::1;-1:-1:-1::0;;;11040:43:21;::::1;::::0;;;::::1;::::0;;;11098:18:::1;::::0;18971:42:26;;;11098:18:21::1;::::0;-1:-1:-1;18959:2:26;18944:18;;-1:-1:-1;11098:18:21::1;;;;;;;10791:332:::0;:::o;15713:406::-;15766:10;-1:-1:-1;;;;;15780:23:21;15766:37;;;;;:86;;-1:-1:-1;15819:10:21;-1:-1:-1;;;;;15833:19:21;15819:33;;;15766:86;:123;;;;-1:-1:-1;1273:6:9;;-1:-1:-1;;;;;1273:6:9;15868:10:21;:21;;15766:123;:169;;;;-1:-1:-1;15905:10:21;-1:-1:-1;;;;;15919:16:21;15905:30;;;15766:169;15749:250;;;15967:21;;-1:-1:-1;;;15967:21:21;;;;;;;;;;;15749:250;16008:14;:12;:14::i;:::-;;;;;16104:8;:6;:8::i;10301:225::-;10380:17;;-1:-1:-1;;;;;10380:17:21;10366:10;:31;10362:58;;10406:14;;-1:-1:-1;;;10406:14:21;;;;;;;;;;;10362:58;10447:17;;10435:43;;;-1:-1:-1;;;;;10447:17:21;;;19236:34:26;;19306:15;;;19301:2;19286:18;;19279:43;10435::21;;19171:18:26;10435:43:21;;;;;;;10488:17;:31;;-1:-1:-1;;;;;;10488:31:21;-1:-1:-1;;;;;10488:31:21;;;;;;;;;;10301:225::o;8639:179::-;8772:20;;;;;;;;;:11;:20;-1:-1:-1;;;;;8772:20:21;;;;;-1:-1:-1;;;8772:20:21;;;;;;;;8742:7;;8772:39;;8793:7;8802:8;8772:20;:39::i;1943:333::-;2046:13;2203:31;:18;-1:-1:-1;;;;;2203:29:21;;:31::i;:::-;2241:26;:13;-1:-1:-1;;;;;2241:24:21;;:26::i;:::-;2169:99;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2155:114;;1943:333;:::o;9941:1196:22:-;10155:10;-1:-1:-1;;;;;10169:16:22;10155:30;;10151:81;;10208:13;;-1:-1:-1;;;10208:13:22;;;;;;;;;;;10151:81;10268:1;10245:24;;;10241:73;;10292:11;;-1:-1:-1;;;10292:11:22;;;;;;;;;;;10241:73;10333:14;10327:28;;;;;:::i;:::-;:33;;-1:-1:-1;10323:91:22;;10383:20;;-1:-1:-1;;;10383:20:22;;;;;;;;;;;10323:91;10444:14;:22;10461:5;;10444:14;:22;:::i;:::-;;10516:9;10511:128;10531:29;;;10511:128;;;10624:4;10581:17;:40;10599:18;;10618:1;10599:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10581:40:22;;;;;;;;;;;;-1:-1:-1;10581:40:22;:47;;-1:-1:-1;;10581:47:22;;;;;;;;;;10562:3;;;:::i;:::-;;;10511:128;;;;10686:9;10681:122;10701:27;;;10681:122;;;10788:4;10749:15;:36;10765:16;;10782:1;10765:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10749:36:22;;;;;;;;;;;;-1:-1:-1;10749:36:22;:43;;-1:-1:-1;;10749:43:22;;;;;;;;;;10730:3;;;:::i;:::-;;;10681:122;;;-1:-1:-1;10858:69:22;;-1:-1:-1;;;10858:69:22;;-1:-1:-1;;;;;10874:12:22;10858:50;;;;:69;;10909:17;;;;10858:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10968:16:22;;-1:-1:-1;10968:36:22;;-1:-1:-1;10987:17:22;;-1:-1:-1;10987:17:22;10968:16;:36;:::i;:::-;;11047:14;:12;:14::i;:::-;;;;;11109:21;:19;:21::i;:::-;;9941:1196;;;;;;;;:::o;48405:2989::-;48775:31;14659:17;:15;:17::i;:::-;14655:69;;;14699:14;;-1:-1:-1;;;14699:14:22;;;;;;;;;;;14655:69;2246:21:12::1;:19;:21::i;:::-;1239:19:11::2;:17;:19::i;:::-;14013:23:22::3;:57;;;;-1:-1:-1::0;14059:10:22::3;14041:29;::::0;;;:17:::3;:29;::::0;;;;;::::3;;14040:30;14013:57;14009:118;;;14093:23;;-1:-1:-1::0;;;14093:23:22::3;;;;;;;;;;;14009:118;48746:10:::4;48822:14:::5;:12;:14::i;:::-;;;;;48846:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;;48988:25:22;::::5;48878:21;48988:25:::0;;;:8:::5;:25;::::0;;;;;48902:13:::5;::::0;48954:18:::5;::::0;48988:25:::5;;48983:76;;49036:12;;-1:-1:-1::0;;;49036:12:22::5;;;;;;;;;;;48983:76;49092:14;-1:-1:-1::0;;;;;49072:35:22::5;:5;49078:1;49072:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;49072:35:22::5;;49068:119;;49150:14;49167:5;49173:1;49167:8;;;;;;;;:::i;:::-;;;;;;;49130:46;;-1:-1:-1::0;;;49130:46:22::5;;;;;;;;-1:-1:-1::0;;;;;19254:15:26;;;19236:34;;19306:15;;19301:2;19286:18;;19279:43;19186:2;19171:18;;19024:304;49068:119:22::5;49235:19;-1:-1:-1::0;;;;;49200:55:22::5;:5;49221:1;49206:5;:12;:16;;;;:::i;:::-;49200:23;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;49200:55:22::5;;49196:205;;49315:19;49353:5;49374:1;49359:5;:12;:16;;;;:::i;:::-;49353:23;;;;;;;;:::i;49196:205::-;49449:28:::0;;49445:123:::5;;49493:64;49508:10;49520:24;49546:10;49493:14;:64::i;:::-;49689:21;49713:88;49739:25;:13;:23;:25::i;:::-;49786:4;49713:12;:88::i;:::-;49836:54;::::0;-1:-1:-1;;;49836:54:22;;-1:-1:-1;;;;;24109:32:26;;;49836:54:22::5;::::0;::::5;24091:51:26::0;24158:18;;;24151:34;;;49689:112:22;;-1:-1:-1;49836:22:22;;::::5;::::0;::::5;::::0;24064:18:26;;49836:54:22::5;;;;;;;;;;;;;;;;;;::::0;::::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;50026:66:22::5;::::0;-1:-1:-1;;;50026:66:22;;50077:4:::5;50026:66;::::0;::::5;160:51:26::0;49990:33:22::5;::::0;-1:-1:-1;;;;;50026:29:22;::::5;::::0;::::5;::::0;133:18:26;;50026:66:22::5;;;;;;;;;;;;;;;;;::::0;::::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;50102:199;::::0;-1:-1:-1;;;50102:199:22;;49990:102;;-1:-1:-1;;;;;;50102:50:22;::::5;::::0;::::5;::::0;:199:::5;::::0;50166:13;;50193:23;;50230:5;;50257:4:::5;::::0;50276:15:::5;::::0;50102:199:::5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::5;;;;;;;;;;;;;;;;;::::0;;::::5;-1:-1:-1::0;;50102:199:22::5;::::0;::::5;;::::0;::::5;::::0;;;::::5;::::0;::::5;:::i;:::-;-1:-1:-1::0;50345:66:22::5;::::0;-1:-1:-1;;;50345:66:22;;50396:4:::5;50345:66;::::0;::::5;160:51:26::0;50311:31:22::5;::::0;-1:-1:-1;;;;;50345:29:22;::::5;::::0;::::5;::::0;133:18:26;;50345:66:22::5;;;;;;;;;;;;;;;;;::::0;::::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;50311:100:::0;-1:-1:-1;50568:28:22::5;50599:63;50637:25:::0;50311:100;50599:63:::5;:::i;:::-;50568:94;;50699:23;50676:20;:46;50672:192;;;50745:108;::::0;-1:-1:-1;;;50745:108:22;;::::5;::::0;::::5;17184:25:26::0;;;17225:18;;;17218:34;;;17157:18;;50745:108:22::5;17010:248:26::0;50672:192:22::5;50995:63;51018:4;51025:20;51047:10;50995:14;:63::i;:::-;51107:59;51146:20:::0;51107:24;:59:::5;:::i;:::-;51069:97;;51212:10;-1:-1:-1::0;;;;;51181:206:22::5;;51236:15;51265:13;51292;51319:24;51357:20;51181:206;;;;;;;;;-1:-1:-1::0;;;;;26775:32:26;;;;26757:51;;26839:2;26824:18;;26817:34;;;;26882:2;26867:18;;26860:34;;;;26925:2;26910:18;;26903:34;26968:3;26953:19;;26946:35;26744:3;26729:19;;26498:489;51181:206:22::5;;;;;;;;-1:-1:-1::0;;13641:16:22::4;:29:::0;13619:52:::4;::::0;-1:-1:-1;13630:9:22;;-1:-1:-1;;;;13641:29:22;::::4;-1:-1:-1::0;;;;;13641:29:22::4;::::0;-1:-1:-1;13619:10:22::4;::::0;-1:-1:-1;13619:52:22:i:4;:::-;13614:284;;-1:-1:-1::0;;;;;13742:27:22;::::4;;::::0;;;:16:::4;:27;::::0;;;;;;;;;13721:20;;;;::::4;::::0;;;:11:::4;:20:::0;-1:-1:-1;;;;;13721:20:22;;::::4;::::0;;-1:-1:-1;;;13721:20:22;;::::4;;::::0;;::::4;::::0;;;;:55:::4;::::0;:20;13771:4:::4;13721:20;:55::i;:::-;-1:-1:-1::0;;;;;13794:32:22;::::4;;::::0;;;:21:::4;:32;::::0;;;;;;;13844:16:::4;:29:::0;13694:193;;-1:-1:-1;;;13694:193:22;;13844:29:::4;13694:193:::0;::::4;27194:25:26::0;;;;27235:18;;;27228:34;-1:-1:-1;;;13844:29:22;::::4;-1:-1:-1::0;;;;;13844:29:22::4;27278:18:26::0;;;27271:60;27167:18;;13694:193:22::4;26992:345:26::0;13614:284:22::4;14136:1;2288:20:12::1;1701:1:::0;2794:7;:22;2614:209;2288:20:::1;48405:2989:22::0;;;;;;;:::o;6592:427:13:-;6685:4;719:10:19;6685:4:13;6766:25;719:10:19;6783:7:13;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:13;;27544:2:26;6801:85:13;;;27526:21:26;27583:2;27563:18;;;27556:30;27622:34;27602:18;;;27595:62;-1:-1:-1;;;27673:18:26;;;27666:35;27718:19;;6801:85:13;27342:401:26;6801:85:13;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:13;;6592:427;-1:-1:-1;;;;6592:427:13:o;3727:189::-;3806:4;719:10:19;3860:28:13;719:10:19;3877:2:13;3881:6;3860:9;:28::i;15227:480:21:-;14013:23:22;:57;;;;-1:-1:-1;14059:10:22;14041:29;;;;:17;:29;;;;;;;;14040:30;14013:57;14009:118;;;14093:23;;-1:-1:-1;;;14093:23:22;;;;;;;;;;;14009:118;15365:9:21::1;15360:341;15380:21:::0;;::::1;15360:341;;;15504:9;:40;;;-1:-1:-1::0;15534:10:21::1;15517::::0;;15528:1;15517:13;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15517:27:21::1;;;15504:40;15500:191;;;15599:9;15564:17;:32;15582:10;;15593:1;15582:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15564:32:21::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;15564:32:21;:44;;-1:-1:-1;;15564:44:21::1;::::0;::::1;;::::0;;;::::1;::::0;;15651:10;;15662:1;15651:13;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15631:45:21::1;;15666:9;15631:45;;;;1762:14:26::0;1755:22;1737:41;;1725:2;1710:18;;1597:187;15631:45:21::1;;;;;;;;15500:191;15403:3:::0;::::1;::::0;::::1;:::i;:::-;;;;15360:341;;;;15227:480:::0;;;:::o;6546:402::-;6649:24;6687:25;6726:30;6800:19;6810:8;-1:-1:-1;;;;;3506:18:13;3480:7;3506:18;;;;;;;;;;;;3406:125;6800:19:21;-1:-1:-1;;;;;6849:26:21;;;;;;;:16;:26;;;;;;;;;6910:21;:31;;;;;;;6781:38;;6849:26;;6910:31;-1:-1:-1;6546:402:21;-1:-1:-1;;6546:402:21:o;29502:472:22:-;29631:23;2246:21:12;:19;:21::i;:::-;29666:14:22::1;:12;:14::i;:::-;-1:-1:-1::0;;29690:44:22::1;::::0;;;;::::1;::::0;;;29724:10:::1;29690:44:::0;-1:-1:-1;;;;;29690:44:22;;::::1;::::0;;-1:-1:-1;;;29690:44:22;;::::1;;;::::0;::::1;::::0;;-1:-1:-1;29762:36:22::1;::::0;-1:-1:-1;29690:44:22;29783:7;29690:31:::1;29762:20;:36::i;:::-;29744:54;;29808:159;29829:11;29854:27;:15;:25;:27::i;:::-;29895:19;:7;:17;:19::i;:::-;29928:9;29951:6;29808:7;:159::i;:::-;29656:318;2288:20:12::0;1701:1;2794:7;:22;2614:209;8204:179:21;8337:20;;;;;;;;;:11;:20;-1:-1:-1;;;;;8337:20:21;;;;;-1:-1:-1;;;8337:20:21;;;;;;;;8307:7;;8337:39;;8358:7;8367:8;8337:20;:39::i;2127:29:22:-;;;;;;;:::i;52826:2693::-;53089:23;2246:21:12;:19;:21::i;:::-;53060:10:22::1;53128:14:::2;:12;:14::i;:::-;;;;;53152:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;;53294:25:22;::::2;53184:21;53294:25:::0;;;:8:::2;:25;::::0;;;;;53208:13:::2;::::0;53260:18:::2;::::0;53294:25:::2;;53289:76;;53342:12;;-1:-1:-1::0;;;53342:12:22::2;;;;;;;;;;;53289:76;53398:19;-1:-1:-1::0;;;;;53378:40:22::2;:5;;53384:1;53378:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;53378:40:22::2;;53374:129;;53461:19;53483:5;;53489:1;53483:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;53441:51;::::0;-1:-1:-1;;;53441:51:22;;-1:-1:-1;;;;;19254:15:26;;;53441:51:22::2;::::0;::::2;19236:34:26::0;19306:15;;19286:18;;;19279:43;19171:18;;53441:51:22::2;19024:304:26::0;53374:129:22::2;-1:-1:-1::0;;;;;53516:50:22;::::2;:5:::0;;53522:16:::2;53537:1;53516:5:::0;53522:16:::2;:::i;:::-;53516:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;53516:50:22::2;;53512:195;;53626:14:::0;53659:5;;53665:16:::2;53680:1;53659:5:::0;53665:16:::2;:::i;:::-;53659:23;;;;;;;:::i;53512:195::-;53894:63;53912:17;53939:4;53946:10;53894:17;:63::i;:::-;53992;::::0;-1:-1:-1;;;53992:63:22;;-1:-1:-1;;;;;24109:32:26;;;53992:63:22::2;::::0;::::2;24091:51:26::0;24158:18;;;24151:34;;;53992:27:22;::::2;::::0;::::2;::::0;24064:18:26;;53992:63:22::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;54186:39:22::2;::::0;-1:-1:-1;;;54186:39:22;;54219:4:::2;54186:39;::::0;::::2;160:51:26::0;54155:28:22::2;::::0;-1:-1:-1;;;;;54186:24:22;::::2;::::0;::::2;::::0;133:18:26;;54186:39:22::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;54235:198;::::0;-1:-1:-1;;;54235:198:22;;54155:70;;-1:-1:-1;;;;;;54235:50:22;::::2;::::0;::::2;::::0;:198:::2;::::0;54299:17;;54330:18;;54362:5;;;;54389:4:::2;::::0;54408:15:::2;::::0;54235:198:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;54235:198:22::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;54472:39:22::2;::::0;-1:-1:-1;;;54472:39:22;;54505:4:::2;54472:39;::::0;::::2;160:51:26::0;54443:26:22::2;::::0;-1:-1:-1;;;;;54472:24:22;::::2;::::0;::::2;::::0;133:18:26;;54472:39:22::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;54443:68:::0;-1:-1:-1;54669:41:22::2;54690:20:::0;54443:68;54669:41:::2;:::i;:::-;54651:59;;54742:18;54724:15;:36;54720:126;;;54783:52;::::0;-1:-1:-1;;;54783:52:22;;::::2;::::0;::::2;17184:25:26::0;;;17225:18;;;17218:34;;;17157:18;;54783:52:22::2;17010:248:26::0;54720:126:22::2;54856:46;::::0;;;;::::2;::::0;;;54891:11:::2;54856:46:::0;-1:-1:-1;;;;;54856:46:22;;::::2;::::0;;-1:-1:-1;;;54856:46:22;;::::2;;;::::0;::::2;::::0;:32:::2;54937:45;54856:46:::0;54959:15;54856:32;54937:21:::2;:45::i;:::-;54912:70;;55142:179;55167:12;55193:27;:15;:25;:27::i;:::-;55234:26;:14;:24;:26::i;:::-;55282:4;55301:10;55142:11;:179::i;:::-;55337:175;::::0;;-1:-1:-1;;;;;28952:32:26;;28934:51;;29016:2;29001:18;;28994:34;;;29044:18;;;29037:34;;;29102:2;29087:18;;29080:34;;;55375:10:22::2;::::0;55337:175:::2;::::0;28921:3:26;28906:19;55337:175:22::2;28703:417:26::0;34833:234:22;2246:21:12;:19;:21::i;:::-;14659:17:22::1;:15;:17::i;:::-;14655:69;;;14699:14;;-1:-1:-1::0;;;14699:14:22::1;;;;;;;;;;;14655:69;34980:14:::2;:12;:14::i;:::-;;;;;35004:56;35019:10;35031:17;35050:9;35004:14;:56::i;:::-;2288:20:12::0;1701:1;2794:7;:22;2614:209;2288:20;34833:234:22;;:::o;37116:415::-;2246:21:12;:19;:21::i;:::-;37244:10:22::1;37270:14:::2;:12;:14::i;:::-;-1:-1:-1::0;;37393:10:22::2;37407:1;37376:28:::0;;;:16:::2;:28;::::0;;;;;:32;;-1:-1:-1;37372:84:22::2;::::0;-1:-1:-1;37372:84:22::2;37424:21;:19;:21::i;:::-;;37372:84;37465:59;37483:17;37502:9;37513:10;37465:17;:59::i;:::-;13641:16:::1;:29:::0;13619:52:::1;::::0;13630:9;;-1:-1:-1;;;13641:29:22;::::1;-1:-1:-1::0;;;;;13641:29:22::1;13619:10;:52::i;:::-;13614:284;;-1:-1:-1::0;;;;;13742:27:22;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;;;13721:20;;;;::::1;::::0;;;:11:::1;:20:::0;-1:-1:-1;;;;;13721:20:22;;::::1;::::0;;-1:-1:-1;;;13721:20:22;;::::1;;::::0;;::::1;::::0;;;;:55:::1;::::0;:20;13771:4:::1;13721:20;:55::i;13614:284::-;2277:1:12;2288:20:::0;1701:1;2794:7;:22;2614:209;11751:1410:21;11862:25;1094:13:9;:11;:13::i;:::-;11952:44:21::1;::::0;;;;::::1;::::0;;11986:10:::1;11952:44:::0;-1:-1:-1;;;;;11952:44:21;;::::1;::::0;;-1:-1:-1;;;11952:44:21;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;12006:46;;;;::::1;::::0;;;12041:11:::1;12006:46:::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;11952:44;;12006:46;12115:12;::::1;11952:31;12115:12:::0;12111:61:::1;;12165:4;3480:7:13::0;3506:18;;;;;;;;;;;12129:43:21::1;;12111:61;12289:35;:11:::0;-1:-1:-1;;;;;12289:35:21;::::1;12319:4;12289:20;:35::i;:::-;12269:55;;12386:24;12413:81;12447:11;12472:12;12413:20;:81::i;:::-;12386:108;;12527:17;12508:16;:36;12504:185;;;12567:111;::::0;-1:-1:-1;;;12567:111:21;;::::1;::::0;::::1;17184:25:26::0;;;17225:18;;;17218:34;;;17157:18;;12567:111:21::1;17010:248:26::0;12504:185:21::1;12761:17;12731:11;:18;;:48;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12731:48:21::1;::::0;;-1:-1:-1;12789:18:21::1;::::0;::::1;:29:::0;;12811:7;;12789:18;:29:::1;::::0;12811:7;;12789:29:::1;:::i;:::-;-1:-1:-1::0;;;;;12789:29:21;;::::1;::::0;;;12932::::1;::::0;-1:-1:-1;12946:4:21::1;::::0;12932:29;::::1;:5;:29::i;:::-;12971:24:::0;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;12971:24:21;;::::1;-1:-1:-1::0;;;12971:24:21::1;::::0;::::1;;:10;:24:::0;13030:57:::1;-1:-1:-1::0;;;;;13030:13:21::1;:26;13057:10:::0;13069:17;13030:26:::1;:57::i;:::-;13102:52;::::0;;-1:-1:-1;;;;;29345:47:26;;29327:66;;-1:-1:-1;;;;;29429:32:26;;29424:2;29409:18;;29402:60;29478:18;;;29471:34;;;13102:52:21::1;::::0;29315:2:26;29300:18;13102:52:21::1;;;;;;;11893:1268;;;11751:1410:::0;;;;:::o;3974:149:13:-;-1:-1:-1;;;;;4089:18:13;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;32831:549:22:-;33109:15;14659:17;:15;:17::i;:::-;14655:69;;;14699:14;;-1:-1:-1;;;14699:14:22;;;;;;;;;;;14655:69;1239:19:11::1;:17;:19::i;:::-;2246:21:12::2;:19;:21::i;:::-;33055:10:22::3;14013:23:::4;:57;;;;-1:-1:-1::0;14059:10:22::4;14041:29;::::0;;;:17:::4;:29;::::0;;;;;::::4;;14040:30;14013:57;14009:118;;;14093:23;;-1:-1:-1::0;;;14093:23:22::4;;;;;;;;;;;14009:118;33140:14:::5;:12;:14::i;:::-;;;;;33164:21;:19;:21::i;:::-;-1:-1:-1::0;33199:21:22;;33195:109:::5;;33236:57;33251:10;33263:17;33282:10;33236:14;:57::i;:::-;33323:50;33336:25;:13;:23;:25::i;:::-;33363:9;33323:12;:50::i;:::-;13641:16:::3;:29:::0;33313:60;;-1:-1:-1;13619:52:22::3;::::0;13630:9;;-1:-1:-1;;;13641:29:22;::::3;-1:-1:-1::0;;;;;13641:29:22::3;13619:10;:52::i;:::-;13614:284;;-1:-1:-1::0;;;;;13742:27:22;::::3;;::::0;;;:16:::3;:27;::::0;;;;;;;;;13721:20;;;;::::3;::::0;;;:11:::3;:20:::0;-1:-1:-1;;;;;13721:20:22;;::::3;::::0;;-1:-1:-1;;;13721:20:22;;::::3;;::::0;;::::3;::::0;;;;:55:::3;::::0;:20;13771:4:::3;13721:20;:55::i;2081:198:9:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:9;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:9;;29718:2:26;2161:73:9::1;::::0;::::1;29700:21:26::0;29757:2;29737:18;;;29730:30;29796:34;29776:18;;;29769:62;-1:-1:-1;;;29847:18:26;;;29840:36;29893:19;;2161:73:9::1;29516:402:26::0;2161:73:9::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2321:287:12:-;1744:1;2453:7;;:19;2445:63;;;;-1:-1:-1;;;2445:63:12;;30125:2:26;2445:63:12;;;30107:21:26;30164:2;30144:18;;;30137:30;30203:33;30183:18;;;30176:61;30254:18;;2445:63:12;29923:355:26;2445:63:12;1744:1;2583:7;:18;2321:287::o;22548:1355:22:-;22630:60;;;;;;;;;22674:16;22630:60;;;;;;;-1:-1:-1;;;22630:60:22;;;-1:-1:-1;;;;;22630:60:22;;;;;-1:-1:-1;;22630:60:22;22739:15;22704:50;;22700:134;;22793:30;;;-1:-1:-1;;;;;22777:46:22;;22548:1355;-1:-1:-1;22548:1355:22:o;22700:134::-;22869:4;22888:14;-1:-1:-1;;;;;22888:28:22;;22884:306;;22935:14;22981;-1:-1:-1;;;;;22959:70:22;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22932:99;;;;;;23060:1;23049:7;:12;23045:87;;23088:29;;-1:-1:-1;;;23088:29:22;;-1:-1:-1;;;;;23102:14:22;178:32:26;23088:29:22;;;160:51:26;133:18;;23088:29:22;14:203:26;23045:87:22;23154:25;23171:7;23154:6;:25;:::i;:::-;23145:34;;22918:272;22884:306;23204:12;-1:-1:-1;;;;;23204:26:22;;23200:300;;23249:14;23295:12;-1:-1:-1;;;;;23273:68:22;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23246:97;;;;;;23372:1;23361:7;:12;23357:85;;23400:27;;-1:-1:-1;;;23400:27:22;;-1:-1:-1;;;;;23414:12:22;178:32:26;23400:27:22;;;160:51:26;133:18;;23400:27:22;14:203:26;23357:85:22;23464:25;23481:7;23464:6;:25;:::i;:::-;23455:34;;23232:268;23200:300;23526:28;23535:19;23526:6;:28;:::i;:::-;23510:44;-1:-1:-1;;;;;;23613:33:22;;23609:61;;;23655:15;;-1:-1:-1;;;23655:15:22;;;;;;;;;;;23609:61;-1:-1:-1;;;;;23680:55:22;;:30;;;:55;;;23745:57;23786:15;23745:57;;;;-1:-1:-1;;;23812:36:22;;;;:16;:36;23863:33;;;;;;23721:13;368:25:26;;356:2;341:18;;222:177;23863:33:22;;;;;;;;22620:1283;;22548:1355;:::o;10504:370:13:-;-1:-1:-1;;;;;10635:19:13;;10627:68;;;;-1:-1:-1;;;10627:68:13;;31147:2:26;10627:68:13;;;31129:21:26;31186:2;31166:18;;;31159:30;31225:34;31205:18;;;31198:62;-1:-1:-1;;;31276:18:26;;;31269:34;31320:19;;10627:68:13;30945:400:26;10627:68:13;-1:-1:-1;;;;;10713:21:13;;10705:68;;;;-1:-1:-1;;;10705:68:13;;31552:2:26;10705:68:13;;;31534:21:26;31591:2;31571:18;;;31564:30;31630:34;31610:18;;;31603:62;-1:-1:-1;;;31681:18:26;;;31674:32;31723:19;;10705:68:13;31350:398:26;10705:68:13;-1:-1:-1;;;;;10784:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;368:25:26;;;10835:32:13;;341:18:26;10835:32:13;;;;;;;;10504:370;;;:::o;16879:4466:22:-;17136:57;;;;;;;;17178:15;17136:57;-1:-1:-1;;;;;17136:57:22;;;;;-1:-1:-1;;;17136:57:22;;;;;;;;-1:-1:-1;;;17136:57:22;;;;;;;;;;-1:-1:-1;;;17136:57:22;;;;;;;;16950:23;;;;;;;;17136:57;17241:15;17207:49;;17203:191;;17283:27;;;;-1:-1:-1;17324:59:22;;17203:191;17455:44;;;;;;;;17489:10;17455:44;-1:-1:-1;;;;;17455:44:22;;;;;-1:-1:-1;;;17455:44:22;;;;;;;;;;;;;;17509:46;;;;;;;;17544:11;17509:46;;;;;;;;;;;;;;;;;17455:44;;17509:46;17675:24;;:36;;-1:-1:-1;1685:7:11;;-1:-1:-1;;;1685:7:11;;;;17703:8:22;17671:3668;;;1685:7:11;;-1:-1:-1;;;1685:7:11;;;;17727:89:22;;1852:9:1;17760:27:22;;;:41;17727:89;-1:-1:-1;;;;;17869:15:22;17829:56;;:30;;;:56;;;17935:12;17899:49;;;;;18004:15;:34;;;;;;;;;;;;-1:-1:-1;;;18004:34:22;-1:-1:-1;;;;;;;;18004:34:22;;;;;;;-1:-1:-1;;;;;18004:34:22;;;;-1:-1:-1;;;18004:34:22;-1:-1:-1;;;;;;18004:34:22;;;;;;;;;;;;;;;;;;17671:3668;;;18115:18;18170:16;:30;;;-1:-1:-1;;;;;18136:64:22;:15;:64;;;;:::i;:::-;18488:18;;18449:19;;18115:85;;-1:-1:-1;18409:24:22;;-1:-1:-1;;;;;18436:70:22;;;;18437:31;;;1649:3:1;18437:31:22;:::i;:::-;18436:70;;;;:::i;:::-;18409:97;;18524:17;:15;:17::i;:::-;18520:516;;;18579:11;18561:30;;18520:516;;;18630:22;18687:16;:27;;;18736:10;18768:16;18821;:26;;;-1:-1:-1;;;;;18806:41:22;:12;:41;;;;:::i;:::-;18655:210;;;-1:-1:-1;;;;;32000:31:26;;;18655:210:22;;;31982:50:26;32048:18;;32041:34;;;;32091:18;;;32084:34;32134:18;;;32127:34;31954:19;;18655:210:22;;;-1:-1:-1;;18655:210:22;;;;;;;;;;-1:-1:-1;;;18894:127:22;;18655:210;-1:-1:-1;;;;;;18910:12:22;18894:40;;;;:127;;18655:210;;18987:16;;18894:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18883:138;;18612:424;18520:516;19143:27;;;;;19115:157;;;-1:-1:-1;;;;;33843:15:26;;;33825:34;;33890:2;33875:18;;33868:34;;;33918:18;;;33911:34;;;33981:15;;;33961:18;;;33954:43;;;;19115:157:22;;33775:3:26;33760:19;19115:157:22;;;;;;;-1:-1:-1;;;;;19323:38:22;;;:27;;;:38;;;19415:15;19375:56;;:30;;;:56;19481:12;19445:49;;;;;19619:19;;19708:4;;19323:38;19586:52;;-1:-1:-1;;;;;19586:52:22;:10;:52;:::i;:::-;:102;;;;:::i;:::-;19585:127;;;;:::i;:::-;19844:19;;19551:161;;-1:-1:-1;;;;;;19867:17:22;19826:37;;;;19551:161;19826:37;:::i;:::-;:58;;:135;;;;-1:-1:-1;19922:18:22;;-1:-1:-1;;;;;19944:17:22;19904:36;;;;:15;:36;:::i;:::-;:57;;19826:135;19805:1356;;;20025:15;19994:12;:19;;:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;19994:47:22;;;-1:-1:-1;20059:46:22;;20089:15;;20059:11;;:46;;20089:15;;20059:46;:::i;:::-;-1:-1:-1;;;;;20059:46:22;;;-1:-1:-1;20127:34:22;;;;-1:-1:-1;;;;;20127:38:22;;20123:789;;1700:3:1;20246:16:22;:34;;;-1:-1:-1;;;;;20228:52:22;:15;:52;;;;:::i;:::-;20227:94;;;;:::i;:::-;20443:18;;20189:132;;-1:-1:-1;20443:32:22;;20189:132;;-1:-1:-1;;;;;20443:32:22;;:::i;:::-;20396:18;;;;20382:32;;-1:-1:-1;;;;;20382:32:22;:11;:32;:::i;:::-;20381:95;;;;:::i;:::-;20344:132;;20778:10;20748:11;:18;;:41;;;;;;;:::i;:::-;-1:-1:-1;;;;;20748:41:22;;;-1:-1:-1;20861:32:22;20875:4;20882:10;20861:5;:32::i;:::-;21004:27;;;;;20934:212;;;34266:25:26;;;-1:-1:-1;;;;;34327:31:26;;;34322:2;34307:18;;34300:59;34375:18;;34368:34;;;34418:18;;;34411:34;;;34476:3;34461:19;;34454:35;;;20934:212:22;;34253:3:26;34238:19;20934:212:22;;;;;;;19805:1356;-1:-1:-1;;21216:24:22;;;;;;;-1:-1:-1;;;;;21216:24:22;;;-1:-1:-1;;;21216:24:22;;;;;;;;;;:10;:24;21254:34;;:15;:34;;;;;;;;;;;;;;-1:-1:-1;;;;;21254:34:22;;;-1:-1:-1;;;21254:34:22;-1:-1:-1;;;;;21254:34:22;;;;;;;;;;;;-1:-1:-1;;;21254:34:22;-1:-1:-1;;;;;;21254:34:22;;;;;;;;;;;;;;;;;;;;;;;21302:26;;;;;;;;;;;;;;:11;:26;17671:3668;17082:4263;;;16879:4466;;;;:::o;11155:441:13:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:13;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:13;;34702:2:26;11404:68:13;;;34684:21:26;34741:2;34721:18;;;34714:30;34780:31;34760:18;;;34753:59;34829:18;;11404:68:13;34500:353:26;11404:68:13;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;7473:818::-;-1:-1:-1;;;;;7599:18:13;;7591:68;;;;-1:-1:-1;;;7591:68:13;;35060:2:26;7591:68:13;;;35042:21:26;35099:2;35079:18;;;35072:30;35138:34;35118:18;;;35111:62;-1:-1:-1;;;35189:18:26;;;35182:35;35234:19;;7591:68:13;34858:401:26;7591:68:13;-1:-1:-1;;;;;7677:16:13;;7669:64;;;;-1:-1:-1;;;7669:64:13;;35466:2:26;7669:64:13;;;35448:21:26;35505:2;35485:18;;;35478:30;35544:34;35524:18;;;35517:62;-1:-1:-1;;;35595:18:26;;;35588:33;35638:19;;7669:64:13;35264:399:26;7669:64:13;-1:-1:-1;;;;;7815:15:13;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:13;;35870:2:26;7840:72:13;;;35852:21:26;35909:2;35889:18;;;35882:30;35948:34;35928:18;;;35921:62;-1:-1:-1;;;35999:18:26;;;35992:36;36045:19;;7840:72:13;35668:402:26;7840:72:13;-1:-1:-1;;;;;7946:15:13;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;368:25:26;;;8161:13:13;;8210:26;;341:18:26;8210:26:13;;;;;;;8247:37;9422:659;1301:430:8;1429:14;1459:5;:12;;;-1:-1:-1;;;;;1459:17:8;1475:1;1459:17;1455:270;;-1:-1:-1;1501:6:8;1455:270;;;1573:12;;;;1557;;-1:-1:-1;;;;;1547:38:8;;;;1548:21;;;:6;:21;:::i;:::-;1547:38;;;;:::i;:::-;1538:47;;1603:7;:58;;;;;1655:6;1640:5;:12;;;-1:-1:-1;;;;;1614:38:8;1624:5;:12;;;-1:-1:-1;;;;;1615:21:8;:6;:21;;;;:::i;:::-;1614:38;;;;:::i;:::-;:47;1603:58;1599:116;;;1690:10;:6;1699:1;1690:10;:::i;:::-;1681:19;1301:430;-1:-1:-1;;;;1301:430:8:o;9088:192:20:-;9145:7;-1:-1:-1;;;;;9172:26:20;;;9164:78;;;;-1:-1:-1;;;9164:78:20;;36277:2:26;9164:78:20;;;36259:21:26;36316:2;36296:18;;;36289:30;36355:34;36335:18;;;36328:62;-1:-1:-1;;;36406:18:26;;;36399:37;36453:19;;9164:78:20;36075:403:26;9164:78:20;-1:-1:-1;9267:5:20;9088:192::o;38668:720:22:-;38919:14;38896:12;:19;;:37;;;;;;;:::i;:::-;-1:-1:-1;;;;;38896:37:22;;;-1:-1:-1;38943:19:22;;;:30;;38966:7;;38943:19;:30;;38966:7;;38943:30;:::i;:::-;-1:-1:-1;;;;;38943:30:22;;;;;;-1:-1:-1;;;;;39019:27:22;;;;;;:16;:27;;;;;:38;;;;;;-1:-1:-1;39019:27:22;:38;;;;;:::i;:::-;;;;-1:-1:-1;;39067:26:22;;;;;;-1:-1:-1;;;;;39067:26:22;;;-1:-1:-1;;;39067:26:22;;;;:11;:26;-1:-1:-1;;;;;39132:23:22;;39150:4;39132:23;39128:185;;39171:131;-1:-1:-1;;;;;39171:13:22;:30;39219:6;39251:4;-1:-1:-1;;;;;39171:131:22;;:30;:131::i;:::-;39327:54;;;-1:-1:-1;;;;;6890:15:26;;;6872:34;;6942:15;;6937:2;6922:18;;6915:43;-1:-1:-1;;;;;39327:54:22;;;;;;;;;;6792:18:26;39327:54:22;;;;;;;38668:720;;;;;:::o;1359:130:9:-;1273:6;;-1:-1:-1;;;;;1273:6:9;719:10:19;1422:23:9;1414:68;;;;-1:-1:-1;;;1414:68:9;;37009:2:26;1414:68:9;;;36991:21:26;;;37028:18;;;37021:30;37087:34;37067:18;;;37060:62;37139:18;;1414:68:9;36807:356:26;2433:117:11;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;;;2491:15:11::1;::::0;;2521:22:::1;719:10:19::0;2530:12:11::1;2521:22;::::0;-1:-1:-1;;;;;178:32:26;;;160:51;;148:2;133:18;2521:22:11::1;;;;;;;2433:117::o:0;711:430:8:-;869:12;;839:14;;-1:-1:-1;;;;;869:17:8;;;865:270;;-1:-1:-1;911:6:8;865:270;;;983:12;;967;;;;-1:-1:-1;;;;;957:38:8;;;;958:21;;;:6;:21;:::i;:::-;957:38;;;;:::i;:::-;948:47;;1013:7;:58;;;;;1065:6;1050:5;:12;;;-1:-1:-1;;;;;1024:38:8;1034:5;:12;;;-1:-1:-1;;;;;1025:21:8;:6;:21;;;;:::i;13067:131:22:-;13117:4;13140:12;:17;;;;:51;;;13179:12;13161:15;:30;13140:51;13133:58;;13067:131;:::o;1767:106:11:-;1685:7;;-1:-1:-1;;;1685:7:11;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:11;;37370:2:26;1828:38:11;;;37352:21:26;37409:2;37389:18;;;37382:30;-1:-1:-1;;;37428:18:26;;;37421:46;37484:18;;1828:38:11;37168:340:26;25094:544:22;25309:7;25287:11;:18;;:29;;;;;;;:::i;:::-;-1:-1:-1;;;;;25287:29:22;;;-1:-1:-1;25326:18:22;;;:29;;25348:7;;25326:18;:29;;25348:7;;25326:29;:::i;:::-;-1:-1:-1;;;;;25326:29:22;;;;;;25408:25;;-1:-1:-1;25414:9:22;;25408:25;;:5;:25::i;:::-;25443:24;;;;;;-1:-1:-1;;;;;25443:24:22;;;-1:-1:-1;;;25443:24:22;;;;;;;;:10;:24;25502:66;;-1:-1:-1;;;;;25502:13:22;:30;;25533:10;;25553:4;;25502:66;;:30;:66::i;:::-;25583:48;;;-1:-1:-1;;;;;6890:15:26;;;6872:34;;6942:15;;6937:2;6922:18;;6915:43;-1:-1:-1;;;;;25583:48:22;;;25591:10;;25583:48;;6792:18:26;25583:48:22;;;;;;;25094:544;;;;:::o;2433:187:9:-;2525:6;;;-1:-1:-1;;;;;2541:17:9;;;-1:-1:-1;;;;;;2541:17:9;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;12262:619:22:-;12371:4;12395:6;12405:1;12395:11;12391:28;;-1:-1:-1;12415:4:22;12408:11;;12391:28;-1:-1:-1;;;;;12489:27:22;;12429:23;12489:27;;;:16;:27;;;;;;;;;12455:20;;;;;;;;:11;:20;-1:-1:-1;;;;;12455:20:22;;;;;-1:-1:-1;;;12455:20:22;;;;;;;;;;;:89;;12530:4;12455:20;:89::i;:::-;12429:115;;12558:15;12577:1;12558:20;12554:37;;12587:4;12580:11;;;;;12554:37;-1:-1:-1;;;;;12629:32:22;;12601:25;12629:32;;;:21;:32;;;;;;;12675:22;;;12671:40;;12706:5;12699:12;;;;;;12671:40;12722:12;12826:17;1537:3:1;1756:4;12740:31:22;12758:13;12740:15;:31;:::i;:::-;12739:66;;;;:::i;:::-;12738:84;;;;:::i;:::-;12737:106;;;;:::i;:::-;12868:6;-1:-1:-1;12860:14:22;;12262:619;-1:-1:-1;;;;;;12262:619:22:o;34781:297:20:-;34837:6;-1:-1:-1;;;;;34962:5:20;:34;;34954:87;;;;-1:-1:-1;;;34954:87:20;;37715:2:26;34954:87:20;;;37697:21:26;37754:2;37734:18;;;37727:30;37793:34;37773:18;;;37766:62;-1:-1:-1;;;37844:18:26;;;37837:38;37892:19;;34954:87:20;37513:404:26;36003:762:22;-1:-1:-1;;;;;36275:32:22;;;;;;:21;:32;;;;;:53;;36311:17;;36275:32;:53;;36311:17;;36275:53;:::i;:::-;;;;;;;;36447:17;36428:15;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;36503:26:22;;36524:4;36503:26;36499:118;;36545:61;-1:-1:-1;;;;;36545:18:22;:31;36577:9;36588:17;36545:31;:61::i;:::-;36739:9;-1:-1:-1;;;;;36631:127:22;36716:9;-1:-1:-1;;;;;36631:127:22;36661:10;-1:-1:-1;;;;;36631:127:22;;36685:17;36631:127;;;;368:25:26;;356:2;341:18;;222:177;36631:127:22;;;;;;;;36003:762;;;:::o;2186:115:11:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;;;2245:14:11::1;-1:-1:-1::0;;;2245:14:11::1;::::0;;2274:20:::1;2281:12;719:10:19::0;;640:96;1566:235:7;1706:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1706:34:7;-1:-1:-1;;;1706:34:7;;;1680:61;;1623:13;;1645:12;;;;-1:-1:-1;;;;;1680:25:7;;;:61;;1706:34;1680:61;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:97;;;;1754:7;:42;;;;;;;;;;;;;;;-1:-1:-1;;;1754:42:7;;;;;;1764:24;1783:4;1764:18;:24::i;33885:573:22:-;-1:-1:-1;;;;;34056:32:22;;;;;;:21;:32;;;;;:53;;34092:17;;34056:32;:53;;34092:17;;34056:53;:::i;:::-;;;;;;;;34138:17;34119:15;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;34194:24:22;;34213:4;34194:24;34190:195;;34234:140;-1:-1:-1;;;;;34234:18:22;:35;34287:7;34320:4;34343:17;34234:35;:140::i;:::-;34422:9;-1:-1:-1;;;;;34399:52:22;34413:7;-1:-1:-1;;;;;34399:52:22;;34433:17;34399:52;;;;368:25:26;;356:2;341:18;;222:177;31081:1244:22;31215:46;;;;;;;;31250:11;31215:46;-1:-1:-1;;;;;31215:46:22;;;;;-1:-1:-1;;;31215:46:22;;;;;;;;;;;;;;31334:80;;;;;;;;31368:10;31334:80;;;;;;;;;;;;;;;31179:20;;;;31334:80;;31215:46;31334:20;:80::i;:::-;31307:107;;31447:13;-1:-1:-1;;;;;31428:32:22;:16;:32;31424:177;;;31483:107;;-1:-1:-1;;;31483:107:22;;;;;38388:25:26;;;-1:-1:-1;;;;;38449:47:26;;38429:18;;;38422:75;38361:18;;31483:107:22;38214:289:26;31424:177:22;31709:42;:12;-1:-1:-1;;;;;31709:42:22;;31746:4;31709:21;:42::i;:::-;31694:57;;31784:13;31761:12;:19;;:36;;;;;;;:::i;:::-;-1:-1:-1;;;;;31761:36:22;;;-1:-1:-1;31807:19:22;;;:44;;31838:12;;31807:19;:44;;31838:12;;31807:44;:::i;:::-;-1:-1:-1;;;;;31807:44:22;;;;;;32017:26;;;;;;;;;-1:-1:-1;;;32017:26:22;;;;;;:11;:26;32070:10;32017:26;32053:28;;;:16;:28;;;;;;:44;;32085:12;;-1:-1:-1;32053:28:22;;32017:26;32053:44;;32085:12;;32053:44;:::i;:::-;;;;-1:-1:-1;;;;;;;32136:26:22;;32157:4;32136:26;32132:109;;32178:52;-1:-1:-1;;;;;32178:13:22;:26;32205:9;-1:-1:-1;;;;;32178:52:22;;:26;:52::i;:::-;32255:63;;;-1:-1:-1;;;;;38700:47:26;;38682:66;;38779:2;38764:18;;38757:34;;;-1:-1:-1;;;;;32255:63:22;;;32267:10;;32255:63;;38655:18:26;32255:63:22;;;;;;;31205:1120;;31081:1244;;;;:::o;27841:1242::-;28037:10;-1:-1:-1;;;;;28037:20:22;;;28033:293;;28073:15;28091:29;28101:6;28109:10;28091:9;:29::i;:::-;28073:47;;-1:-1:-1;;28222:7:22;:28;28218:97;;28268:47;28277:6;28285:10;28297:17;-1:-1:-1;;;;;28297:17:22;;:7;:17;:::i;28268:47::-;28059:267;28033:293;28414:80;;;;;;;;;28473:11;28414:80;-1:-1:-1;;;;;28414:80:22;;;;;-1:-1:-1;;;28414:80:22;;;;;;;;28387:24;;28414:80;;28448:11;;28414:20;:80::i;:::-;28387:107;;28527:15;-1:-1:-1;;;;;28508:34:22;:16;:34;28504:181;;;28565:109;;-1:-1:-1;;;28565:109:22;;;;;38388:25:26;;;-1:-1:-1;;;;;38449:47:26;;38429:18;;;38422:75;38361:18;;28565:109:22;38214:289:26;28504:181:22;28749:15;28727:11;:18;;:37;;;;;;;:::i;:::-;-1:-1:-1;;;;;28727:37:22;;;-1:-1:-1;28774:18:22;;;:29;;28796:7;;28774:18;:29;;28796:7;;28774:29;:::i;:::-;-1:-1:-1;;;;;28774:29:22;;;;;;28851:24;;;;;;;;-1:-1:-1;;;28851:24:22;;;;;:10;:24;28885:22;;-1:-1:-1;28891:6:22;;28885:22;;:5;:22::i;:::-;28942:54;-1:-1:-1;;;;;28942:13:22;:26;28969:9;-1:-1:-1;;;;;28942:54:22;;:26;:54::i;:::-;29011:65;;;-1:-1:-1;;;;;6890:15:26;;;6872:34;;6942:15;;6937:2;6922:18;;6915:43;-1:-1:-1;;;;;29011:65:22;;;;;;;;29020:10;;29011:65;;6792:18:26;29011:65:22;;;;;;;28023:1060;27841:1242;;;;;:::o;11735:215::-;11924:19;;11903:18;;11877:7;;11903:40;;;:::i;:::-;-1:-1:-1;;;;;11896:47:22;;11735:215;-1:-1:-1;;;11735:215:22:o;9422:659:13:-;-1:-1:-1;;;;;9505:21:13;;9497:67;;;;-1:-1:-1;;;9497:67:13;;39004:2:26;9497:67:13;;;38986:21:26;39043:2;39023:18;;;39016:30;39082:34;39062:18;;;39055:62;-1:-1:-1;;;39133:18:26;;;39126:31;39174:19;;9497:67:13;38802:397:26;9497:67:13;-1:-1:-1;;;;;9660:18:13;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:13;;39406:2:26;9688:71:13;;;39388:21:26;39445:2;39425:18;;;39418:30;39484:34;39464:18;;;39457:62;-1:-1:-1;;;39535:18:26;;;39528:32;39577:19;;9688:71:13;39204:398:26;9688:71:13;-1:-1:-1;;;;;9793:18:13;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;368:25:26;;;9793:9:13;;:18;9978:37;;341:18:26;9978:37:13;222:177:26;10026:48:13;9487:594;9422:659;;:::o;2669:141:7:-;2763:42;2788:5;2795:2;2799:5;2763:24;:42::i;8567:535:13:-;-1:-1:-1;;;;;8650:21:13;;8642:65;;;;-1:-1:-1;;;8642:65:13;;39809:2:26;8642:65:13;;;39791:21:26;39848:2;39828:18;;;39821:30;39887:33;39867:18;;;39860:61;39938:18;;8642:65:13;39607:355:26;8642:65:13;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:13;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;368:25:26;;;8999:37:13;;341:18:26;8999:37:13;;;;;;;34833:234:22;;:::o;2814:173:7:-;2930:52;2959:5;2966:4;2972:2;2976:5;2930:28;:52::i;1945:106:11:-;1685:7;;-1:-1:-1;;;1685:7:11;;;;2003:41;;;;-1:-1:-1;;;2003:41:11;;40169:2:26;2003:41:11;;;40151:21:26;40208:2;40188:18;;;40181:30;-1:-1:-1;;;40227:18:26;;;40220:50;40287:18;;2003:41:11;39967:344:26;890:483:7;960:13;1000:2;985:4;:11;:17;981:388;;1030:4;1019:26;;;;;;;;;;;;:::i;981:388::-;1062:4;:11;1077:2;1062:17;1058:311;;1089:7;1108:53;1119:2;1115:1;:6;;;:22;;;;;1125:4;1130:1;1125:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1125:7:7;:12;;1115:22;1108:53;;;1149:3;;;;:::i;:::-;;;;1108:53;;;1168:23;1204:1;1194:12;;-1:-1:-1;;;;;1194:12:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1194:12:7;;1168:38;;1223:1;1219:5;;1214:83;1230:2;1226:1;:6;;;:22;;;;;1236:4;1241:1;1236:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1236:7:7;:12;;1226:22;1214:83;;;1281:4;1286:1;1281:7;;;;;;;;;;:::i;:::-;;;;;;;;;1265:10;1276:1;1265:13;;;;;;;;;;:::i;:::-;;;;:23;-1:-1:-1;;;;;1265:23:7;;;;;;;;-1:-1:-1;1250:3:7;;;;:::i;:::-;;;;1214:83;;1058:311;-1:-1:-1;;1350:12:7;;;;;;;;;;;;-1:-1:-1;;;1350:12:7;;;;;890:483::o;1058:311::-;890:483;;;:::o;763:205:17:-;902:58;;-1:-1:-1;;;;;24109:32:26;;902:58:17;;;24091:51:26;24158:18;;;24151:34;;;875:86:17;;895:5;;-1:-1:-1;;;925:23:17;24064:18:26;;902:58:17;;;;-1:-1:-1;;902:58:17;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:17;-1:-1:-1;;;;;;902:58:17;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;41478:15:26;;;1139:68:17;;;41460:34:26;41530:15;;41510:18;;;41503:43;41562:18;;;41555:34;;;1112:96:17;;1132:5;;-1:-1:-1;;;1162:27:17;41395:18:26;;1139:68:17;41220:375:26;3747:706:17;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:17;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:17;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:17;;41802:2:26;4351:85:17;;;41784:21:26;41841:2;41821:18;;;41814:30;41880:34;41860:18;;;41853:62;-1:-1:-1;;;41931:18:26;;;41924:40;41981:19;;4351:85:17;41600:406:26;3872:223:18;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;5240;5254:23;5281:6;-1:-1:-1;;;;;5281:11:18;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:18:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;-1:-1:-1;;;;;1465:19:18;;;7907:60;;;;-1:-1:-1;;;7907:60:18;;42620:2:26;7907:60:18;;;42602:21:26;42659:2;42639:18;;;42632:30;42698:31;42678:18;;;42671:59;42747:18;;7907:60:18;42418:353:26;7907:60:18;-1:-1:-1;8002:10:18;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:18;;;;;;;;:::i;404:250:26:-;489:1;499:113;513:6;510:1;507:13;499:113;;;589:11;;;583:18;570:11;;;563:39;535:2;528:10;499:113;;;-1:-1:-1;;646:1:26;628:16;;621:27;404:250::o;659:271::-;701:3;739:5;733:12;766:6;761:3;754:19;782:76;851:6;844:4;839:3;835:14;828:4;821:5;817:16;782:76;:::i;:::-;912:2;891:15;-1:-1:-1;;887:29:26;878:39;;;;919:4;874:50;;659:271;-1:-1:-1;;659:271:26:o;935:220::-;1084:2;1073:9;1066:21;1047:4;1104:45;1145:2;1134:9;1130:18;1122:6;1104:45;:::i;1160:173::-;1228:20;;-1:-1:-1;;;;;1277:31:26;;1267:42;;1257:70;;1323:1;1320;1313:12;1338:254;1406:6;1414;1467:2;1455:9;1446:7;1442:23;1438:32;1435:52;;;1483:1;1480;1473:12;1435:52;1506:29;1525:9;1506:29;:::i;:::-;1496:39;1582:2;1567:18;;;;1554:32;;-1:-1:-1;;;1338:254:26:o;2208:328::-;2285:6;2293;2301;2354:2;2342:9;2333:7;2329:23;2325:32;2322:52;;;2370:1;2367;2360:12;2322:52;2393:29;2412:9;2393:29;:::i;:::-;2383:39;;2441:38;2475:2;2464:9;2460:18;2441:38;:::i;:::-;2431:48;;2526:2;2515:9;2511:18;2498:32;2488:42;;2208:328;;;;;:::o;3688:367::-;3751:8;3761:6;3815:3;3808:4;3800:6;3796:17;3792:27;3782:55;;3833:1;3830;3823:12;3782:55;-1:-1:-1;3856:20:26;;-1:-1:-1;;;;;3888:30:26;;3885:50;;;3931:1;3928;3921:12;3885:50;3968:4;3960:6;3956:17;3944:29;;4028:3;4021:4;4011:6;4008:1;4004:14;3996:6;3992:27;3988:38;3985:47;3982:67;;;4045:1;4042;4035:12;3982:67;3688:367;;;;;:::o;4060:118::-;4146:5;4139:13;4132:21;4125:5;4122:32;4112:60;;4168:1;4165;4158:12;4183:566;4275:6;4283;4291;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4400:9;4387:23;-1:-1:-1;;;;;4425:6:26;4422:30;4419:50;;;4465:1;4462;4455:12;4419:50;4504:70;4566:7;4557:6;4546:9;4542:22;4504:70;:::i;:::-;4593:8;;-1:-1:-1;4478:96:26;-1:-1:-1;;4678:2:26;4663:18;;4650:32;4691:28;4650:32;4691:28;:::i;:::-;4738:5;4728:15;;;4183:566;;;;;:::o;4754:254::-;4822:6;4830;4883:2;4871:9;4862:7;4858:23;4854:32;4851:52;;;4899:1;4896;4889:12;4851:52;4935:9;4922:23;4912:33;;4964:38;4998:2;4987:9;4983:18;4964:38;:::i;:::-;4954:48;;4754:254;;;;;:::o;5013:315::-;5078:6;5086;5139:2;5127:9;5118:7;5114:23;5110:32;5107:52;;;5155:1;5152;5145:12;5107:52;5178:29;5197:9;5178:29;:::i;:::-;5168:39;;5257:2;5246:9;5242:18;5229:32;5270:28;5292:5;5270:28;:::i;:::-;5317:5;5307:15;;;5013:315;;;;;:::o;5333:309::-;5398:6;5406;5459:2;5447:9;5438:7;5434:23;5430:32;5427:52;;;5475:1;5472;5465:12;5427:52;5511:9;5498:23;5488:33;;5571:2;5560:9;5556:18;5543:32;5584:28;5606:5;5584:28;:::i;5647:186::-;5706:6;5759:2;5747:9;5738:7;5734:23;5730:32;5727:52;;;5775:1;5772;5765:12;5727:52;5798:29;5817:9;5798:29;:::i;5838:188::-;5906:20;;-1:-1:-1;;;;;5955:46:26;;5945:57;;5935:85;;6016:1;6013;6006:12;6031:328;6108:6;6116;6124;6177:2;6165:9;6156:7;6152:23;6148:32;6145:52;;;6193:1;6190;6183:12;6145:52;6216:29;6235:9;6216:29;:::i;:::-;6206:39;;6292:2;6281:9;6277:18;6264:32;6254:42;;6315:38;6349:2;6338:9;6334:18;6315:38;:::i;:::-;6305:48;;6031:328;;;;;:::o;6364:276::-;6422:6;6475:2;6463:9;6454:7;6450:23;6446:32;6443:52;;;6491:1;6488;6481:12;6443:52;6530:9;6517:23;6580:10;6573:5;6569:22;6562:5;6559:33;6549:61;;6606:1;6603;6596:12;7430:348;7482:8;7492:6;7546:3;7539:4;7531:6;7527:17;7523:27;7513:55;;7564:1;7561;7554:12;7513:55;-1:-1:-1;7587:20:26;;-1:-1:-1;;;;;7619:30:26;;7616:50;;;7662:1;7659;7652:12;7616:50;7699:4;7691:6;7687:17;7675:29;;7751:3;7744:4;7735:6;7727;7723:19;7719:30;7716:39;7713:59;;;7768:1;7765;7758:12;7783:1351;7946:6;7954;7962;7970;7978;7986;7994;8002;8055:3;8043:9;8034:7;8030:23;8026:33;8023:53;;;8072:1;8069;8062:12;8023:53;8112:9;8099:23;-1:-1:-1;;;;;8182:2:26;8174:6;8171:14;8168:34;;;8198:1;8195;8188:12;8168:34;8237:59;8288:7;8279:6;8268:9;8264:22;8237:59;:::i;:::-;8315:8;;-1:-1:-1;8211:85:26;-1:-1:-1;8403:2:26;8388:18;;8375:32;;-1:-1:-1;8419:16:26;;;8416:36;;;8448:1;8445;8438:12;8416:36;8487:72;8551:7;8540:8;8529:9;8525:24;8487:72;:::i;:::-;8578:8;;-1:-1:-1;8461:98:26;-1:-1:-1;8666:2:26;8651:18;;8638:32;;-1:-1:-1;8682:16:26;;;8679:36;;;8711:1;8708;8701:12;8679:36;8750:72;8814:7;8803:8;8792:9;8788:24;8750:72;:::i;:::-;8841:8;;-1:-1:-1;8724:98:26;-1:-1:-1;8929:2:26;8914:18;;8901:32;;-1:-1:-1;8945:16:26;;;8942:36;;;8974:1;8971;8964:12;8942:36;;9013:61;9066:7;9055:8;9044:9;9040:24;9013:61;:::i;:::-;7783:1351;;;;-1:-1:-1;7783:1351:26;;-1:-1:-1;7783:1351:26;;;;;;9093:8;-1:-1:-1;;;7783:1351:26:o;9857:127::-;9918:10;9913:3;9909:20;9906:1;9899:31;9949:4;9946:1;9939:15;9973:4;9970:1;9963:15;9989:275;10060:2;10054:9;10125:2;10106:13;;-1:-1:-1;;10102:27:26;10090:40;;-1:-1:-1;;;;;10145:34:26;;10181:22;;;10142:62;10139:88;;;10207:18;;:::i;:::-;10243:2;10236:22;9989:275;;-1:-1:-1;9989:275:26:o;10269:183::-;10329:4;-1:-1:-1;;;;;10354:6:26;10351:30;10348:56;;;10384:18;;:::i;:::-;-1:-1:-1;10429:1:26;10425:14;10441:4;10421:25;;10269:183::o;10457:1177::-;10577:6;10585;10593;10601;10609;10662:3;10650:9;10641:7;10637:23;10633:33;10630:53;;;10679:1;10676;10669:12;10630:53;10702:29;10721:9;10702:29;:::i;:::-;10692:39;;10750:2;10799;10788:9;10784:18;10771:32;10761:42;;10850:2;10839:9;10835:18;10822:32;10812:42;;10901:2;10890:9;10886:18;10873:32;10863:42;;10956:3;10945:9;10941:19;10928:33;-1:-1:-1;;;;;10976:6:26;10973:30;10970:50;;;11016:1;11013;11006:12;10970:50;11039:22;;11092:4;11084:13;;11080:27;-1:-1:-1;11070:55:26;;11121:1;11118;11111:12;11070:55;11157:2;11144:16;11180:60;11196:43;11236:2;11196:43;:::i;:::-;11180:60;:::i;:::-;11274:15;;;11356:1;11352:10;;;;11344:19;;11340:28;;;11305:12;;;;11380:19;;;11377:39;;;11412:1;11409;11402:12;11377:39;11436:11;;;;11456:148;11472:6;11467:3;11464:15;11456:148;;;11538:23;11557:3;11538:23;:::i;:::-;11526:36;;11489:12;;;;11582;;;;11456:148;;;11623:5;11613:15;;;;;;;10457:1177;;;;;;;;:::o;11963:328::-;12040:6;12048;12056;12109:2;12097:9;12088:7;12084:23;12080:32;12077:52;;;12125:1;12122;12115:12;12077:52;12161:9;12148:23;12138:33;;12190:38;12224:2;12213:9;12209:18;12190:38;:::i;:::-;12180:48;;12247:38;12281:2;12270:9;12266:18;12247:38;:::i;12742:648::-;12855:6;12863;12871;12879;12887;12940:3;12928:9;12919:7;12915:23;12911:33;12908:53;;;12957:1;12954;12947:12;12908:53;12980:29;12999:9;12980:29;:::i;:::-;12970:39;;13056:2;13045:9;13041:18;13028:32;13018:42;;13107:2;13096:9;13092:18;13079:32;13069:42;;13162:2;13151:9;13147:18;13134:32;-1:-1:-1;;;;;13181:6:26;13178:30;13175:50;;;13221:1;13218;13211:12;13175:50;13260:70;13322:7;13313:6;13302:9;13298:22;13260:70;:::i;:::-;12742:648;;;;-1:-1:-1;12742:648:26;;-1:-1:-1;13349:8:26;;13234:96;12742:648;-1:-1:-1;;;12742:648:26:o;13952:260::-;14020:6;14028;14081:2;14069:9;14060:7;14056:23;14052:32;14049:52;;;14097:1;14094;14087:12;14049:52;14120:29;14139:9;14120:29;:::i;:::-;14110:39;;14168:38;14202:2;14191:9;14187:18;14168:38;:::i;14217:260::-;14285:6;14293;14346:2;14334:9;14325:7;14321:23;14317:32;14314:52;;;14362:1;14359;14352:12;14314:52;14385:29;14404:9;14385:29;:::i;14482:322::-;14559:6;14567;14575;14628:2;14616:9;14607:7;14603:23;14599:32;14596:52;;;14644:1;14641;14634:12;14596:52;14680:9;14667:23;14657:33;;14737:2;14726:9;14722:18;14709:32;14699:42;;14760:38;14794:2;14783:9;14779:18;14760:38;:::i;15802:380::-;15881:1;15877:12;;;;15924;;;15945:61;;15999:4;15991:6;15987:17;15977:27;;15945:61;16052:2;16044:6;16041:14;16021:18;16018:38;16015:161;;16098:10;16093:3;16089:20;16086:1;16079:31;16133:4;16130:1;16123:15;16161:4;16158:1;16151:15;16015:161;;15802:380;;;:::o;16187:127::-;16248:10;16243:3;16239:20;16236:1;16229:31;16279:4;16276:1;16269:15;16303:4;16300:1;16293:15;16319:125;16384:9;;;16405:10;;;16402:36;;;16418:18;;:::i;16449:127::-;16510:10;16505:3;16501:20;16498:1;16491:31;16541:4;16538:1;16531:15;16565:4;16562:1;16555:15;16581:135;16620:3;16641:17;;;16638:43;;16661:18;;:::i;:::-;-1:-1:-1;16708:1:26;16697:13;;16581:135::o;17263:168::-;17336:9;;;17367;;17384:15;;;17378:22;;17364:37;17354:71;;17405:18;;:::i;17436:217::-;17476:1;17502;17492:132;;17546:10;17541:3;17537:20;17534:1;17527:31;17581:4;17578:1;17571:15;17609:4;17606:1;17599:15;17492:132;-1:-1:-1;17638:9:26;;17436:217::o;17658:200::-;17724:9;;;17697:4;17752:9;;17780:10;;17792:12;;;17776:29;17815:12;;;17807:21;;17773:56;17770:82;;;17832:18;;:::i;:::-;17770:82;17658:200;;;;:::o;17863:::-;-1:-1:-1;;;;;17999:10:26;;;17987;;;17983:27;;18022:12;;;18019:38;;;18037:18;;:::i;18625:197::-;-1:-1:-1;;;;;18747:10:26;;;18759;;;18743:27;;18782:11;;;18779:37;;;18796:18;;:::i;19333:786::-;-1:-1:-1;;;19739:3:26;19732:28;19714:3;19789:6;19783:13;19805:75;19873:6;19868:2;19863:3;19859:12;19852:4;19844:6;19840:17;19805:75;:::i;:::-;-1:-1:-1;;;19939:2:26;19899:16;;;19931:11;;;19924:24;19973:13;;19995:76;19973:13;20057:2;20049:11;;20042:4;20030:17;;19995:76;:::i;:::-;20091:17;20110:2;20087:26;;19333:786;-1:-1:-1;;;;19333:786:26:o;20250:545::-;20352:2;20347:3;20344:11;20341:448;;;20388:1;20413:5;20409:2;20402:17;20458:4;20454:2;20444:19;20528:2;20516:10;20512:19;20509:1;20505:27;20499:4;20495:38;20564:4;20552:10;20549:20;20546:47;;;-1:-1:-1;20587:4:26;20546:47;20642:2;20637:3;20633:12;20630:1;20626:20;20620:4;20616:31;20606:41;;20697:82;20715:2;20708:5;20705:13;20697:82;;;20760:17;;;20741:1;20730:13;20697:82;;;20701:3;;;20250:545;;;:::o;20971:1206::-;-1:-1:-1;;;;;21090:3:26;21087:27;21084:53;;;21117:18;;:::i;:::-;21146:94;21236:3;21196:38;21228:4;21222:11;21196:38;:::i;:::-;21190:4;21146:94;:::i;:::-;21266:1;21291:2;21286:3;21283:11;21308:1;21303:616;;;;21963:1;21980:3;21977:93;;;-1:-1:-1;22036:19:26;;;22023:33;21977:93;-1:-1:-1;;20928:1:26;20924:11;;;20920:24;20916:29;20906:40;20952:1;20948:11;;;20903:57;22083:78;;21276:895;;21303:616;20197:1;20190:14;;;20234:4;20221:18;;-1:-1:-1;;21339:17:26;;;21440:9;21462:229;21476:7;21473:1;21470:14;21462:229;;;21565:19;;;21552:33;21537:49;;21672:4;21657:20;;;;21625:1;21613:14;;;;21492:12;21462:229;;;21466:3;21719;21710:7;21707:16;21704:159;;;21843:1;21839:6;21833:3;21827;21824:1;21820:11;21816:21;21812:34;21808:39;21795:9;21790:3;21786:19;21773:33;21769:79;21761:6;21754:95;21704:159;;;21906:1;21900:3;21897:1;21893:11;21889:19;21883:4;21876:33;21276:895;;20971:1206;;;:::o;22182:388::-;22339:2;22328:9;22321:21;22378:6;22373:2;22362:9;22358:18;22351:34;22435:6;22427;22422:2;22411:9;22407:18;22394:48;22491:1;22462:22;;;22486:2;22458:31;;;22451:42;;;;22554:2;22533:15;;;-1:-1:-1;;22529:29:26;22514:45;22510:54;;22182:388;-1:-1:-1;22182:388:26:o;23784:128::-;23851:9;;;23872:11;;;23869:37;;;23886:18;;:::i;24196:245::-;24263:6;24316:2;24304:9;24295:7;24291:23;24287:32;24284:52;;;24332:1;24329;24322:12;24284:52;24364:9;24358:16;24383:28;24405:5;24383:28;:::i;24446:184::-;24516:6;24569:2;24557:9;24548:7;24544:23;24540:32;24537:52;;;24585:1;24582;24575:12;24537:52;-1:-1:-1;24608:16:26;;24446:184;-1:-1:-1;24446:184:26:o;24635:972::-;24889:4;24937:3;24926:9;24922:19;24968:6;24957:9;24950:25;24994:2;25032:6;25027:2;25016:9;25012:18;25005:34;25075:3;25070:2;25059:9;25055:18;25048:31;25099:6;25134;25128:13;25165:6;25157;25150:22;25203:3;25192:9;25188:19;25181:26;;25242:2;25234:6;25230:15;25216:29;;25263:1;25273:195;25287:6;25284:1;25281:13;25273:195;;;25352:13;;-1:-1:-1;;;;;25348:39:26;25336:52;;25443:15;;;;25408:12;;;;25384:1;25302:9;25273:195;;;-1:-1:-1;;;;;;;25524:32:26;;;;25519:2;25504:18;;25497:60;-1:-1:-1;;;25588:3:26;25573:19;25566:35;25485:3;24635:972;-1:-1:-1;;;24635:972:26:o;25612:881::-;25707:6;25738:2;25781;25769:9;25760:7;25756:23;25752:32;25749:52;;;25797:1;25794;25787:12;25749:52;25830:9;25824:16;-1:-1:-1;;;;;25855:6:26;25852:30;25849:50;;;25895:1;25892;25885:12;25849:50;25918:22;;25971:4;25963:13;;25959:27;-1:-1:-1;25949:55:26;;26000:1;25997;25990:12;25949:55;26029:2;26023:9;26052:60;26068:43;26108:2;26068:43;:::i;26052:60::-;26146:15;;;26228:1;26224:10;;;;26216:19;;26212:28;;;26177:12;;;;26252:19;;;26249:39;;;26284:1;26281;26274:12;26249:39;26308:11;;;;26328:135;26344:6;26339:3;26336:15;26328:135;;;26410:10;;26398:23;;26361:12;;;;26441;;;;26328:135;;27748:950;28073:25;;;28117:2;28135:18;;;28128:34;;;28060:3;28193:2;28178:18;;28171:31;;;28045:19;;28237:22;;;28012:4;;28317:6;;28290:3;28275:19;;28012:4;28351:208;28365:6;28362:1;28359:13;28351:208;;;-1:-1:-1;;;;;28430:26:26;28449:6;28430:26;:::i;:::-;28426:52;28414:65;;28534:15;;;;28499:12;;;;28387:1;28380:9;28351:208;;;-1:-1:-1;;;;;;28615:32:26;;;;28610:2;28595:18;;28588:60;-1:-1:-1;;;28679:3:26;28664:19;28657:35;28576:3;27748:950;-1:-1:-1;;;;27748:950:26:o;30283:179::-;30361:13;;30414:22;30403:34;;30393:45;;30383:73;;30452:1;30449;30442:12;30467:473;30570:6;30578;30586;30594;30602;30655:3;30643:9;30634:7;30630:23;30626:33;30623:53;;;30672:1;30669;30662:12;30623:53;30695:39;30724:9;30695:39;:::i;:::-;30685:49;;30774:2;30763:9;30759:18;30753:25;30743:35;;30818:2;30807:9;30803:18;30797:25;30787:35;;30862:2;30851:9;30847:18;30841:25;30831:35;;30885:49;30929:3;30918:9;30914:19;30885:49;:::i;:::-;30875:59;;30467:473;;;;;;;;:::o;32172:1089::-;32362:2;32351:9;32344:21;32325:4;32388:45;32429:2;32418:9;32414:18;32406:6;32388:45;:::i;:::-;32452:2;32502:9;32494:6;32490:22;32485:2;32474:9;32470:18;32463:50;32533:1;32566:6;32560:13;32596:36;32622:9;32596:36;:::i;:::-;32641:22;;;32682:1;32699:18;;;32726:152;;;;32892:1;32887:348;;;;32692:543;;32726:152;-1:-1:-1;;32771:24:26;;32754:15;;;32747:49;32846:14;;32839:22;32836:1;32832:30;32820:43;;32816:52;;;-1:-1:-1;32726:152:26;;32887:348;32918:6;32915:1;32908:17;32966:2;32963:1;32953:16;32991:1;33005:177;33019:6;33016:1;33013:13;33005:177;;;33109:14;;33088;;;33084:23;;33077:47;33152:16;;;;33034:10;;33005:177;;;33206:14;;33202:23;;;-1:-1:-1;;32692:543:26;-1:-1:-1;33252:3:26;;32172:1089;-1:-1:-1;;;;;;;;;32172:1089:26:o;33266:288::-;33335:6;33388:2;33376:9;33367:7;33363:23;33359:32;33356:52;;;33404:1;33401;33394:12;33356:52;33436:9;33430:16;-1:-1:-1;;;;;33479:5:26;33475:30;33468:5;33465:41;33455:69;;33520:1;33517;33510:12;37922:287;38051:3;38089:6;38083:13;38105:66;38164:6;38159:3;38152:4;38144:6;38140:17;38105:66;:::i;:::-;38187:16;;;;;37922:287;-1:-1:-1;;37922:287:26:o;40316:719::-;40396:6;40449:2;40437:9;40428:7;40424:23;40420:32;40417:52;;;40465:1;40462;40455:12;40417:52;40498:9;40492:16;-1:-1:-1;;;;;40568:2:26;40560:6;40557:14;40554:34;;;40584:1;40581;40574:12;40554:34;40622:6;40611:9;40607:22;40597:32;;40667:7;40660:4;40656:2;40652:13;40648:27;40638:55;;40689:1;40686;40679:12;40638:55;40718:2;40712:9;40740:2;40736;40733:10;40730:36;;;40746:18;;:::i;:::-;40788:53;40831:2;40812:13;;-1:-1:-1;;40808:27:26;40837:2;40804:36;40788:53;:::i;:::-;40775:66;;40864:2;40857:5;40850:17;40904:7;40899:2;40894;40890;40886:11;40882:20;40879:33;40876:53;;;40925:1;40922;40915:12;40876:53;40938:67;41002:2;40997;40990:5;40986:14;40981:2;40977;40973:11;40938:67;:::i;:::-;-1:-1:-1;41024:5:26;40316:719;-1:-1:-1;;;;40316:719:26:o;41040:175::-;41077:3;41121:4;41114:5;41110:16;41150:4;41141:7;41138:17;41135:43;;41158:18;;:::i;:::-;41207:1;41194:15;;41040:175;-1:-1:-1;;41040:175:26:o",
    "linkReferences": {},
    "immutableReferences": {
      "3949": [
        {
          "start": 1435,
          "length": 32
        },
        {
          "start": 1847,
          "length": 32
        },
        {
          "start": 7167,
          "length": 32
        },
        {
          "start": 8010,
          "length": 32
        },
        {
          "start": 10110,
          "length": 32
        },
        {
          "start": 11740,
          "length": 32
        },
        {
          "start": 15956,
          "length": 32
        },
        {
          "start": 16675,
          "length": 32
        },
        {
          "start": 18305,
          "length": 32
        },
        {
          "start": 18734,
          "length": 32
        }
      ],
      "3952": [
        {
          "start": 1472,
          "length": 32
        },
        {
          "start": 2994,
          "length": 32
        },
        {
          "start": 7117,
          "length": 32
        },
        {
          "start": 8044,
          "length": 32
        },
        {
          "start": 10144,
          "length": 32
        },
        {
          "start": 17386,
          "length": 32
        },
        {
          "start": 17870,
          "length": 32
        }
      ],
      "3954": [
        {
          "start": 1512,
          "length": 32
        },
        {
          "start": 2650,
          "length": 32
        },
        {
          "start": 12537,
          "length": 32
        },
        {
          "start": 12586,
          "length": 32
        },
        {
          "start": 12751,
          "length": 32
        }
      ],
      "3956": [
        {
          "start": 1095,
          "length": 32
        },
        {
          "start": 1554,
          "length": 32
        },
        {
          "start": 12812,
          "length": 32
        },
        {
          "start": 12861,
          "length": 32
        },
        {
          "start": 13026,
          "length": 32
        }
      ],
      "3958": [
        {
          "start": 2936,
          "length": 32
        },
        {
          "start": 3693,
          "length": 32
        },
        {
          "start": 13090,
          "length": 32
        }
      ],
      "3960": [
        {
          "start": 3514,
          "length": 32
        },
        {
          "start": 3728,
          "length": 32
        },
        {
          "start": 16891,
          "length": 32
        },
        {
          "start": 17138,
          "length": 32
        }
      ],
      "3962": [
        {
          "start": 1290,
          "length": 32
        },
        {
          "start": 3766,
          "length": 32
        },
        {
          "start": 5946,
          "length": 32
        }
      ],
      "3964": [
        {
          "start": 1993,
          "length": 32
        },
        {
          "start": 6053,
          "length": 32
        }
      ],
      "3967": [
        {
          "start": 1594,
          "length": 32
        },
        {
          "start": 3417,
          "length": 32
        },
        {
          "start": 7663,
          "length": 32
        },
        {
          "start": 14146,
          "length": 32
        }
      ],
      "3975": [
        {
          "start": 1634,
          "length": 32
        },
        {
          "start": 3224,
          "length": 32
        },
        {
          "start": 6823,
          "length": 32
        },
        {
          "start": 7260,
          "length": 32
        }
      ],
      "3977": [
        {
          "start": 2746,
          "length": 32
        },
        {
          "start": 6695,
          "length": 32
        }
      ],
      "3979": [
        {
          "start": 1674,
          "length": 32
        },
        {
          "start": 3583,
          "length": 32
        },
        {
          "start": 4866,
          "length": 32
        },
        {
          "start": 6747,
          "length": 32
        }
      ],
      "3983": [
        {
          "start": 1714,
          "length": 32
        },
        {
          "start": 3456,
          "length": 32
        }
      ],
      "3987": [
        {
          "start": 3282,
          "length": 32
        },
        {
          "start": 3806,
          "length": 32
        },
        {
          "start": 16391,
          "length": 32
        },
        {
          "start": 16433,
          "length": 32
        }
      ],
      "3989": [
        {
          "start": 3321,
          "length": 32
        },
        {
          "start": 3844,
          "length": 32
        },
        {
          "start": 13996,
          "length": 32
        }
      ],
      "4031": [
        {
          "start": 1353,
          "length": 32
        },
        {
          "start": 1756,
          "length": 32
        },
        {
          "start": 7872,
          "length": 32
        },
        {
          "start": 9401,
          "length": 32
        },
        {
          "start": 11972,
          "length": 32
        }
      ],
      "4037": [
        {
          "start": 1797,
          "length": 32
        },
        {
          "start": 2032,
          "length": 32
        },
        {
          "start": 4214,
          "length": 32
        },
        {
          "start": 5284,
          "length": 32
        },
        {
          "start": 5555,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CIRCUIT_BREAKER_ADDRESS()": "ad0c3bb5",
    "COMPTROLLER_ADDRESS()": "fbaa8b85",
    "DEPLOYER_ADDRESS()": "d2a156e0",
    "FRAXLEND_WHITELIST_ADDRESS()": "ef14900d",
    "TIME_LOCK_ADDRESS()": "657a409c",
    "addCollateral(uint256,address)": "cadac479",
    "addInterest()": "0d09365c",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approvedBorrowers(address)": "c936c624",
    "approvedLenders(address)": "afa85de6",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "borrowAsset(uint256,uint256,address)": "e5f13b16",
    "borrowerWhitelistActive()": "2165d72f",
    "changeFee(uint32)": "8142dd53",
    "cleanLiquidationFee()": "11a2e4bc",
    "collateralContract()": "c6e1c7c9",
    "currentRateInfo()": "95d14ca8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "dirtyLiquidationFee()": "4732428c",
    "exchangeRateInfo()": "fbbbf94c",
    "getConstants()": "9a295e73",
    "getImmutableAddressBool()": "36fad62d",
    "getImmutableUint256()": "fea10d5d",
    "getPairAccounting()": "cdd72d52",
    "getUserSnapshot(address)": "b68d0a09",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,address[],address[],bytes)": "99024fc1",
    "lenderWhitelistActive()": "4962e494",
    "leveragedPosition(address,uint256,uint256,uint256,address[])": "a053db68",
    "liquidate(uint128,uint256,address)": "721b0a47",
    "maturityDate()": "d59624b4",
    "maxLTV()": "f384bd05",
    "name()": "06fdde03",
    "oracleDivide()": "0053f733",
    "oracleMultiply()": "9bdff2e6",
    "oracleNormalization()": "c10c92a1",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "penaltyRate()": "d6b7494f",
    "rateContract()": "eee24219",
    "rateInitCallData()": "c7be9786",
    "redeem(uint256,address,address)": "ba087652",
    "removeCollateral(uint256,address)": "d41ddc96",
    "renounceOwnership()": "715018a6",
    "repayAsset(uint256,address)": "3d417d2d",
    "repayAssetWithCollateral(address,uint256,uint256,address[])": "ca2298fe",
    "setApprovedBorrowers(address[],bool)": "b054898b",
    "setApprovedLenders(address[],bool)": "3cc32aba",
    "setSwapper(address,bool)": "3f2617cb",
    "setTimeLock(address)": "891682d2",
    "swappers(address)": "8cad7fbe",
    "symbol()": "95d89b41",
    "toAssetAmount(uint256,bool)": "404ffa7a",
    "toAssetShares(uint256,bool)": "56968f97",
    "toBorrowAmount(uint256,bool)": "94e301e0",
    "toBorrowShares(uint256,bool)": "c270a544",
    "totalAsset()": "f9557ccb",
    "totalBorrow()": "8285ef40",
    "totalCollateral()": "4ac8eb5f",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "updateExchangeRate()": "02ce728f",
    "userBorrowShares(address)": "4fd422df",
    "userCollateralBalance(address)": "b5af3062",
    "version()": "54fd4d50",
    "withdrawFees(uint128,address)": "daf33f2a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_configData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_immutables\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_maxLTV\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBorrowerWhitelistActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isLenderWhitelistActive\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadProtocolFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadSwapper\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowerSolvent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowerWhitelistRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"Insolvent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_request\",\"type\":\"uint256\"}],\"name\":\"InsufficientAssetsInContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_actual\",\"type\":\"address\"}],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDeployer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NotOnWhitelist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyApprovedBorrowers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyApprovedLenders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTimeLock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleLTEZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"PastDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PastMaturity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolOrOwnerOnly\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_actual\",\"type\":\"uint256\"}],\"name\":\"SlippageTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"AddCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestEarned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deltaTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feesShare\",\"type\":\"uint256\"}],\"name\":\"AddInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesAdded\",\"type\":\"uint256\"}],\"name\":\"BorrowAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_newFee\",\"type\":\"uint32\"}],\"name\":\"ChangeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_swapperAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_borrowShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_initialCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountCollateralOut\",\"type\":\"uint256\"}],\"name\":\"LeveragedPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralForLiquidator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesToLiquidate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLiquidatorToRepay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesToAdjust\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToAdjust\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"RemoveCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToRepay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"RepayAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_swapperAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralToSwap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountAssetOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesRepaid\",\"type\":\"uint256\"}],\"name\":\"RepayAssetWithCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"SetApprovedBorrower\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"SetApprovedLender\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"SetSwapper\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"SetTimeLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"UpdateExchangeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ratePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deltaTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_utilizationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRatePerSec\",\"type\":\"uint256\"}],\"name\":\"UpdateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_shares\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToTransfer\",\"type\":\"uint256\"}],\"name\":\"WithdrawFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CIRCUIT_BREAKER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPTROLLER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPLOYER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FRAXLEND_WHITELIST_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_LOCK_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesShare\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_newRate\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedBorrowers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedLenders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"borrowAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerWhitelistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newFee\",\"type\":\"uint32\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanLiquidationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRateInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"lastBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ratePerSec\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dirtyLiquidationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateInfo\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"exchangeRate\",\"type\":\"uint224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConstants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_LTV_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_LIQ_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_UTIL_PREC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_FEE_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_EXCHANGE_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_DEFAULT_INT\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_DEFAULT_PROTOCOL_FEE\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_MAX_PROTOCOL_FEE\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImmutableAddressBool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_assetContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleMultiply\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleDivide\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rateContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DEPLOYER_CONTRACT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_COMPTROLLER_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_FRAXLEND_WHITELIST\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_borrowerWhitelistActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_lenderWhitelistActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImmutableUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleNormalization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLTV\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cleanLiquidationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPairAccounting\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_totalAssetAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalAssetShares\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalBorrowAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalBorrowShares\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_totalCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUserSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_userAssetShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCollateralBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_approvedBorrowers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_approvedLenders\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_rateInitCallData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderWhitelistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapperAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountCollateralOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"leveragedPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalCollateralBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_sharesToLiquidate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralForLiquidator\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDivide\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleMultiply\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleNormalization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateContract\",\"outputs\":[{\"internalType\":\"contract IRateCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInitCallData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"repayAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToRepay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapperAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralToSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountAssetOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"repayAssetWithCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountAssetOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_borrowers\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"setApprovedBorrowers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_lenders\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"setApprovedLenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"setSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setTimeLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swappers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toAssetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toAssetShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toBorrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toBorrowShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAsset\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shares\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrow\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shares\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBorrowShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_shares\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToTransfer\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ChangeFee(uint32)\":{\"params\":{\"_newFee\":\"The new fee\"}},\"SetApprovedBorrower(address,bool)\":{\"params\":{\"_address\":\"The address\",\"_approval\":\"The approval\"}},\"SetApprovedLender(address,bool)\":{\"params\":{\"_address\":\"The address\",\"_approval\":\"The approval\"}},\"SetSwapper(address,bool)\":{\"params\":{\"_approval\":\"The approval\",\"_swapper\":\"The swapper address\"}},\"SetTimeLock(address,address)\":{\"params\":{\"_newAddress\":\"The new address\",\"_oldAddress\":\"The original address\"}},\"WithdrawFees(uint128,address,uint256)\":{\"params\":{\"_amountToTransfer\":\"The amount of fees redeemed\",\"_recipient\":\"To whom the assets were sent\",\"_shares\":\"Number of _shares (fTokens) redeemed\"}}},\"kind\":\"dev\",\"methods\":{\"addCollateral(uint256,address)\":{\"details\":\"msg.sender must call ERC20.approve() on the Collateral Token contract prior to invocation\",\"params\":{\"_borrower\":\"The account to be credited\",\"_collateralAmount\":\"The amount of Collateral Token to be added to borrower's position\"}},\"addInterest()\":{\"returns\":{\"_interestEarned\":\"The amount of interest accrued by all borrowers\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"borrowAsset(uint256,uint256,address)\":{\"details\":\"Borrower must call ```ERC20.approve``` on the Collateral Token contract if applicable\",\"params\":{\"_borrowAmount\":\"The amount of Asset Token to borrow\",\"_collateralAmount\":\"The amount of Collateral Token to transfer to Pair\",\"_receiver\":\"The address which will receive the Asset Tokens\"},\"returns\":{\"_shares\":\"The number of borrow Shares the msg.sender will be debited\"}},\"changeFee(uint32)\":{\"params\":{\"_newFee\":\"The new fee\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling function\",\"params\":{\"_amount\":\"The amount of Asset Token to transfer to Pair\",\"_receiver\":\"The address to receive the Asset Shares (fTokens)\"},\"returns\":{\"_sharesReceived\":\"The number of fTokens received for the deposit\"}},\"getImmutableAddressBool()\":{\"returns\":{\"_COMPTROLLER_ADDRESS\":\"Address of comptroller\",\"_DEPLOYER_CONTRACT\":\"Address of deployer contract\",\"_FRAXLEND_WHITELIST\":\"Address of whitelist\",\"_assetContract\":\"Address of asset\",\"_borrowerWhitelistActive\":\"Boolean is borrower whitelist active\",\"_collateralContract\":\"Address of collateral\",\"_lenderWhitelistActive\":\"Boolean is lender whitelist active\",\"_oracleDivide\":\"Address of oracle denominator\",\"_oracleMultiply\":\"Address of oracle numerator\",\"_rateContract\":\"Address of rate contract\"}},\"getImmutableUint256()\":{\"returns\":{\"_cleanLiquidationFee\":\"Clean Liquidation Fee\",\"_maturityDate\":\"Maturity Date\",\"_maxLTV\":\"Maximum LTV\",\"_oracleNormalization\":\"Oracle normalization factor\",\"_penaltyRate\":\"Penalty Rate\"}},\"getPairAccounting()\":{\"returns\":{\"_totalAssetAmount\":\"Total assets deposited and interest accrued, total claims\",\"_totalAssetShares\":\"Total fTokens\",\"_totalBorrowAmount\":\"Total borrows\",\"_totalBorrowShares\":\"Total borrow shares\",\"_totalCollateral\":\"Total collateral\"}},\"getUserSnapshot(address)\":{\"params\":{\"_address\":\"The user address\"},\"returns\":{\"_userAssetShares\":\"The user fToken balance\",\"_userBorrowShares\":\"The user borrow shares\",\"_userCollateralBalance\":\"The user collateral balance\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,address[],address[],bytes)\":{\"details\":\"This function can only be called by the deployer\",\"params\":{\"_approvedBorrowers\":\"An array of approved borrower addresses\",\"_approvedLenders\":\"An array of approved lender addresses\",\"_name\":\"The name of the contract\",\"_rateInitCallData\":\"The configuration data for the Rate Calculator contract\"}},\"leveragedPosition(address,uint256,uint256,uint256,address[])\":{\"details\":\"Caller must invoke ```ERC20.approve()``` on the Collateral Token contract prior to calling function\",\"params\":{\"_amountCollateralOutMin\":\"The minimum amount of Collateral Tokens to be received in exchange for the borrowed Asset Tokens\",\"_borrowAmount\":\"The amount of Asset Tokens borrowed\",\"_initialCollateralAmount\":\"The initial amount of Collateral Tokens supplied by the borrower\",\"_path\":\"An array containing the addresses of ERC20 tokens to swap.  Adheres to UniV2 style path params.\",\"_swapperAddress\":\"The address of the whitelisted swapper to use to swap borrowed Asset Tokens for Collateral Tokens\"},\"returns\":{\"_totalCollateralBalance\":\"The total amount of Collateral Tokens added to a users account (initial + swap)\"}},\"liquidate(uint128,uint256,address)\":{\"details\":\"Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling ```Liquidate()```\",\"params\":{\"_borrower\":\"The account for which the repayment is credited and from whom collateral will be taken\",\"_deadline\":\"The timestamp after which tx will revert\",\"_sharesToLiquidate\":\"The number of Borrow Shares repaid by the liquidator\"},\"returns\":{\"_collateralForLiquidator\":\"The amount of Collateral Token transferred to the liquidator\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"redeem(uint256,address,address)\":{\"params\":{\"_owner\":\"The owner of the Asset Shares (fTokens)\",\"_receiver\":\"The address to which the Asset Tokens will be transferred\",\"_shares\":\"The number of Asset Shares (fTokens) to burn for Asset Tokens\"},\"returns\":{\"_amountToReturn\":\"The amount of Asset Tokens to be transferred\"}},\"removeCollateral(uint256,address)\":{\"details\":\"msg.sender must be solvent after invocation or transaction will revert\",\"params\":{\"_collateralAmount\":\"The amount of Collateral Token to transfer\",\"_receiver\":\"The address to receive the transferred funds\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repayAsset(uint256,address)\":{\"details\":\"Caller must first invoke ```ERC20.approve()``` for the Asset Token contract\",\"params\":{\"_borrower\":\"The account for which the debt will be reduced\",\"_shares\":\"The number of Borrow Shares which will be repaid by the call\"},\"returns\":{\"_amountToRepay\":\"The amount of Asset Tokens which were transferred in order to repay the Borrow Shares\"}},\"repayAssetWithCollateral(address,uint256,uint256,address[])\":{\"params\":{\"_amountAssetOutMin\":\"The minimum amount of Asset Tokens to receive during the swap\",\"_collateralToSwap\":\"The amount of Collateral Tokens to swap for Asset Tokens\",\"_path\":\"An array containing the addresses of ERC20 tokens to swap.  Adheres to UniV2 style path params.\",\"_swapperAddress\":\"The address of the whitelisted swapper to use for token swaps\"},\"returns\":{\"_amountAssetOut\":\"The amount of Asset Tokens received for the Collateral Tokens, the amount the borrowers account was credited\"}},\"setApprovedBorrowers(address[],bool)\":{\"details\":\"Cannot black list self\",\"params\":{\"_approval\":\"The approval status\",\"_borrowers\":\"The addresses who's status will be set\"}},\"setApprovedLenders(address[],bool)\":{\"details\":\"Cannot black list self\",\"params\":{\"_approval\":\"The approval status\",\"_lenders\":\"The addresses who's status will be set\"}},\"setSwapper(address,bool)\":{\"details\":\"@param _swapper The swapper address\",\"params\":{\"_approval\":\"The approval\"}},\"setTimeLock(address)\":{\"params\":{\"_newAddress\":\"the new time lock address\"}},\"toAssetAmount(uint256,bool)\":{\"params\":{\"_roundUp\":\"Whether to round up after division\",\"_shares\":\"Shares of asset (fToken)\"},\"returns\":{\"_0\":\"The amount of asset\"}},\"toAssetShares(uint256,bool)\":{\"params\":{\"_amount\":\"The amount of asset\",\"_roundUp\":\"Whether to round up after division\"},\"returns\":{\"_0\":\"The number of shares (fTokens)\"}},\"toBorrowAmount(uint256,bool)\":{\"params\":{\"_roundUp\":\"Whether to roundup during division\",\"_shares\":\"Shares of borrow\"},\"returns\":{\"_0\":\"The amount of asset\"}},\"toBorrowShares(uint256,bool)\":{\"params\":{\"_amount\":\"Amount of borrow\",\"_roundUp\":\"Whether to roundup during division\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateExchangeRate()\":{\"details\":\"This function is invoked at most once per block as these queries can be expensive\",\"returns\":{\"_exchangeRate\":\"The new exchange rate\"}},\"withdrawFees(uint128,address)\":{\"params\":{\"_recipient\":\"Address to send the assets\",\"_shares\":\"Number of fTokens to redeem\"},\"returns\":{\"_amountToTransfer\":\"Amount of assets sent to recipient\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AddInterest(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```AddInterest``` event is emitted when interest is accrued by borrowers\"},\"BorrowAsset(address,address,uint256,uint256)\":{\"notice\":\"The ```BorrowAsset``` event is emitted when a borrower increases their position\"},\"ChangeFee(uint32)\":{\"notice\":\"The ```ChangeFee``` event first when the fee is changed\"},\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"The ```Deposit``` event fires when a user deposits assets to the pair\"},\"LeveragedPosition(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```LeveragedPosition``` event is emitted when a borrower takes out a new leveraged position\"},\"Liquidate(address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```Liquidate``` event is emitted when a liquidation occurs\"},\"RemoveCollateral(address,uint256,address,address)\":{\"notice\":\"The ```RemoveCollateral``` event is emitted when collateral is removed from a borrower's position\"},\"RepayAsset(address,address,uint256,uint256)\":{\"notice\":\"The ```RepayAsset``` event is emitted whenever a debt position is repaid\"},\"RepayAssetWithCollateral(address,address,uint256,uint256,uint256)\":{\"notice\":\"The ```RepayAssetWithCollateral``` event is emitted whenever ```repayAssetWithCollateral()``` is invoked\"},\"SetApprovedBorrower(address,bool)\":{\"notice\":\"The ```SetApprovedBorrower``` event fires when a borrower is black or whitelisted\"},\"SetApprovedLender(address,bool)\":{\"notice\":\"The ```SetApprovedLender``` event fires when a lender is black or whitelisted\"},\"SetSwapper(address,bool)\":{\"notice\":\"The ```SetSwapper``` event fires whenever a swapper is black or whitelisted\"},\"SetTimeLock(address,address)\":{\"notice\":\"The ```SetTimeLock``` event fires when the TIME_LOCK_ADDRESS is set\"},\"UpdateExchangeRate(uint256)\":{\"notice\":\"The ```UpdateExchangeRate``` event is emitted when the Collateral:Asset exchange rate is updated\"},\"UpdateRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```UpdateRate``` event is emitted when the interest rate is updated\"},\"Withdraw(address,address,address,uint256,uint256)\":{\"notice\":\"The ```Withdraw``` event fires when a user redeems their fTokens for the underlying asset\"},\"WithdrawFees(uint128,address,uint256)\":{\"notice\":\"The ```WithdrawFees``` event fires when the fees are withdrawn\"}},\"kind\":\"user\",\"methods\":{\"addCollateral(uint256,address)\":{\"notice\":\"The ```addCollateral``` function allows the caller to add Collateral Token to a borrowers position\"},\"addInterest()\":{\"notice\":\"The ```addInterest``` function is a public implementation of _addInterest and allows 3rd parties to trigger interest accrual\"},\"borrowAsset(uint256,uint256,address)\":{\"notice\":\"The ```borrowAsset``` function allows a user to open/increase a borrow position\"},\"changeFee(uint32)\":{\"notice\":\"The ```changeFee``` function changes the protocol fee, max 50%\"},\"currentRateInfo()\":{\"notice\":\"Stores information about the current interest rate\"},\"deposit(uint256,address)\":{\"notice\":\"The ```deposit``` function allows a user to Lend Assets by specifying the amount of Asset Tokens to lend\"},\"exchangeRateInfo()\":{\"notice\":\"Stores information about the current exchange rate. Collateral:Asset ratio\"},\"getImmutableAddressBool()\":{\"notice\":\"The ```getImmutableAddressBool``` function gets all the address and bool configs\"},\"getImmutableUint256()\":{\"notice\":\"The ```getImmutableUint256``` function gets all uint256 config values\"},\"getPairAccounting()\":{\"notice\":\"The ```getPairAccounting``` function gets all pair level accounting numbers\"},\"getUserSnapshot(address)\":{\"notice\":\"The ```getUserSnapshot``` function gets user level accounting data\"},\"initialize(string,address[],address[],bytes)\":{\"notice\":\"The ```initialize``` function is called immediately after deployment\"},\"leveragedPosition(address,uint256,uint256,uint256,address[])\":{\"notice\":\"The ```leveragedPosition``` function allows a user to enter a leveraged borrow position with minimal upfront Collateral\"},\"liquidate(uint128,uint256,address)\":{\"notice\":\"The ```liquidate``` function allows a third party to repay a borrower's debt if they have become insolvent\"},\"redeem(uint256,address,address)\":{\"notice\":\"The ```redeem``` function allows the caller to redeem their Asset Shares for Asset Tokens\"},\"removeCollateral(uint256,address)\":{\"notice\":\"The ```removeCollateral``` function is used to remove collateral from msg.sender's borrow position\"},\"repayAsset(uint256,address)\":{\"notice\":\"The ```repayAsset``` function allows the caller to pay down the debt for a given borrower.\"},\"repayAssetWithCollateral(address,uint256,uint256,address[])\":{\"notice\":\"The ```repayAssetWithCollateral``` function allows a borrower to repay their debt using existing collateral in contract\"},\"setApprovedBorrowers(address[],bool)\":{\"notice\":\"The ```setApprovedBorrowers``` function sets a given array of addresses to the whitelist\"},\"setApprovedLenders(address[],bool)\":{\"notice\":\"The ```setApprovedLenders``` function sets a given set of addresses to the whitelist\"},\"setSwapper(address,bool)\":{\"notice\":\"The ```setSwapper``` function is called to black or whitelist a given swapper address\"},\"setTimeLock(address)\":{\"notice\":\"The ```setTimeLock``` function sets the TIME_LOCK address\"},\"toAssetAmount(uint256,bool)\":{\"notice\":\"The ```toAssetAmount``` function converts a given number of shares to an asset amount\"},\"toAssetShares(uint256,bool)\":{\"notice\":\"The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)\"},\"toBorrowAmount(uint256,bool)\":{\"notice\":\"The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares\"},\"toBorrowShares(uint256,bool)\":{\"notice\":\"The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares\"},\"updateExchangeRate()\":{\"notice\":\"The ```updateExchangeRate``` function is the external implementation of _updateExchangeRate.\"},\"userBorrowShares(address)\":{\"notice\":\"Stores the balance of borrow shares for each user\"},\"userCollateralBalance(address)\":{\"notice\":\"Stores the balance of collateral for each user\"},\"withdrawFees(uint128,address)\":{\"notice\":\"The ```withdrawFees``` function withdraws fees accumulated\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPair.sol\":\"MugenLendPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-core/=lib/joe-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-core/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/fraxlend/src/contracts/FraxlendPairConstants.sol\":{\"keccak256\":\"0x992304427965ab1c3e3aa252a50c38f537851fa6f14703dfaf0a2435cf6444ed\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://39a77252078395b5d0de73d65717a5e0d66d3178bf9c87a9a923edb15fcbb226\",\"dweb:/ipfs/QmW6cPDW8f6qKgPSyKwWW618XFMQ7m2endGPJY8pc8E1pV\"]},\"lib/fraxlend/src/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xe3d3d74fd6bce945d5fe0dadf2dee7450d7a8e98a257c57361b14a25513649a0\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://0e63550ef23706b32a88c21e27d5ba1f496dd3a2ac22eaf7a74a052bea93cb1b\",\"dweb:/ipfs/QmcFsTo3EFtHPzpF6MF74vCQbP8bgzW6aXA1gBfhMmHUiL\"]},\"lib/fraxlend/src/contracts/interfaces/IFraxlendWhitelist.sol\":{\"keccak256\":\"0x27fa503c44c16272e0be45067e813d79404d32141f79ffad75948d65e840f862\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://452e43508b4d8b3dc34bbf789fd24ceea8f3908298517a6b3119378ed27dba34\",\"dweb:/ipfs/QmT3R1XfTDyTU9B2whii1YbydjYQoRS8neSKvqrRAZoW5n\"]},\"lib/fraxlend/src/contracts/interfaces/IRateCalculator.sol\":{\"keccak256\":\"0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a\",\"dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1\"]},\"lib/fraxlend/src/contracts/interfaces/ISwapper.sol\":{\"keccak256\":\"0xfbd706403f2967c8cc7d82fb67d9d71d405448d79593c70089e8ef1eaf6ad78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23d3732d76cac9046d9035cea06d6df9157d71605ddb9d708917c32c503b1b69\",\"dweb:/ipfs/QmSg1vPsizi39GGffLTKLgETT7QwNiq1kLYF71qfJBkHuW\"]},\"lib/fraxlend/src/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0x0975795c0f908c1d8050d743f4bdc05fd1a56f1e5d79f2c1dbe8e3e8227820dd\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://a3cbfb6ceb6f6f778148a07557904a560729449b27cb7f77b6426b5a54651cea\",\"dweb:/ipfs/QmeaMj1FA1HPqRGvzfruXkNjf1AqpCXNNGErWSY5B2Y5Q6\"]},\"lib/fraxlend/src/contracts/libraries/VaultAccount.sol\":{\"keccak256\":\"0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1\",\"dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c\",\"dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPair.sol\":{\"keccak256\":\"0x969028e8f033a03e4c9cc401eff8d14d4bbb4c5d78af32b3a5a8f0034086355d\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://fe7b61cdf97e86ecefd4091d417dee186c552ad49827262772d9e4ebeaee14ff\",\"dweb:/ipfs/QmcLdHiPN9zf3oPE8CiZXNuzVQgVMokMh3pnjsmx3rXD9J\"]},\"src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPairCore.sol\":{\"keccak256\":\"0xe678e6c9c8cae23624a911e768811a6d56d0b15ad9eafd075787c8e4b7fcc45f\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://ed34b6d58460edd633934fc6274a8f0aae244f02859391b41268dc94244a545e\",\"dweb:/ipfs/QmUzuCdDAcuxBWXrQMBYJz1MKTWndqB4U74R3Ny1QedS84\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_configData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_immutables",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_maxLTV",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_liquidationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_penaltyRate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isBorrowerWhitelistActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_isLenderWhitelistActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadProtocolFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadSwapper"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowerSolvent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowerWhitelistRequired"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_borrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_exchangeRate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Insolvent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_request",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientAssetsInContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_expected",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_actual",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidPath"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NameEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotDeployer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotOnWhitelist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyApprovedBorrowers"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyApprovedLenders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyTimeLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OracleLTEZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_blockTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PastDeadline"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PastMaturity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PriceTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolOrOwnerOnly"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_minOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SlippageTooHigh"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_interestEarned",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_deltaTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_feesAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_feesShare",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddInterest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesAdded",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BorrowAsset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFee",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangeFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_swapperAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_borrowShares",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_initialCollateralAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountCollateralOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LeveragedPosition",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralForLiquidator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesToLiquidate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountLiquidatorToRepay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesToAdjust",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountToAdjust",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Liquidate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountToRepay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RepayAsset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_swapperAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_collateralToSwap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountAssetOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesRepaid",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RepayAssetWithCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetApprovedBorrower",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetApprovedLender",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapper",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapper",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oldAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTimeLock",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateExchangeRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_ratePerSec",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_deltaTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_utilizationRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newRatePerSec",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_shares",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountToTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawFees",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CIRCUIT_BREAKER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COMPTROLLER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPLOYER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FRAXLEND_WHITELIST_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TIME_LOCK_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addInterest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_interestEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_feesAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_feesShare",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_newRate",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedBorrowers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedLenders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrowAsset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowerWhitelistActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFee",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeFee"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cleanLiquidationFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralContract",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRateInfo",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "lastBlock",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "feeToProtocolRate",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lastTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "ratePerSec",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_sharesReceived",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dirtyLiquidationFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "exchangeRateInfo",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "exchangeRate",
              "type": "uint224"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getConstants",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_LTV_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_LIQ_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_UTIL_PREC",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_FEE_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_EXCHANGE_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_DEFAULT_INT",
              "type": "uint64"
            },
            {
              "internalType": "uint16",
              "name": "_DEFAULT_PROTOCOL_FEE",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_MAX_PROTOCOL_FEE",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getImmutableAddressBool",
          "outputs": [
            {
              "internalType": "address",
              "name": "_assetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_collateralContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oracleMultiply",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oracleDivide",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rateContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_DEPLOYER_CONTRACT",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_COMPTROLLER_ADDRESS",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_FRAXLEND_WHITELIST",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_borrowerWhitelistActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_lenderWhitelistActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getImmutableUint256",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_oracleNormalization",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxLTV",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_cleanLiquidationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_penaltyRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPairAccounting",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "_totalAssetAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalAssetShares",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalBorrowAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalBorrowShares",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "_totalCollateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserSnapshot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_userAssetShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_userBorrowShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_userCollateralBalance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_approvedBorrowers",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_approvedLenders",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_rateInitCallData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderWhitelistActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapperAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_initialCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountCollateralOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_path",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "leveragedPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_totalCollateralBalance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_sharesToLiquidate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_collateralForLiquidator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maturityDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxLTV",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleDivide",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleMultiply",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleNormalization",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "penaltyRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateContract",
          "outputs": [
            {
              "internalType": "contract IRateCalculator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateInitCallData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToReturn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAsset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToRepay",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapperAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_collateralToSwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountAssetOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_path",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAssetWithCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountAssetOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_borrowers",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovedBorrowers"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_lenders",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovedLenders"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapper",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapper"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swappers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toAssetAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toAssetShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toBorrowAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toBorrowShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAsset",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shares",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBorrow",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shares",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBorrowShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userCollateralBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_shares",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToTransfer",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addCollateral(uint256,address)": {
            "details": "msg.sender must call ERC20.approve() on the Collateral Token contract prior to invocation",
            "params": {
              "_borrower": "The account to be credited",
              "_collateralAmount": "The amount of Collateral Token to be added to borrower's position"
            }
          },
          "addInterest()": {
            "returns": {
              "_interestEarned": "The amount of interest accrued by all borrowers"
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "borrowAsset(uint256,uint256,address)": {
            "details": "Borrower must call ```ERC20.approve``` on the Collateral Token contract if applicable",
            "params": {
              "_borrowAmount": "The amount of Asset Token to borrow",
              "_collateralAmount": "The amount of Collateral Token to transfer to Pair",
              "_receiver": "The address which will receive the Asset Tokens"
            },
            "returns": {
              "_shares": "The number of borrow Shares the msg.sender will be debited"
            }
          },
          "changeFee(uint32)": {
            "params": {
              "_newFee": "The new fee"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling function",
            "params": {
              "_amount": "The amount of Asset Token to transfer to Pair",
              "_receiver": "The address to receive the Asset Shares (fTokens)"
            },
            "returns": {
              "_sharesReceived": "The number of fTokens received for the deposit"
            }
          },
          "getImmutableAddressBool()": {
            "returns": {
              "_COMPTROLLER_ADDRESS": "Address of comptroller",
              "_DEPLOYER_CONTRACT": "Address of deployer contract",
              "_FRAXLEND_WHITELIST": "Address of whitelist",
              "_assetContract": "Address of asset",
              "_borrowerWhitelistActive": "Boolean is borrower whitelist active",
              "_collateralContract": "Address of collateral",
              "_lenderWhitelistActive": "Boolean is lender whitelist active",
              "_oracleDivide": "Address of oracle denominator",
              "_oracleMultiply": "Address of oracle numerator",
              "_rateContract": "Address of rate contract"
            }
          },
          "getImmutableUint256()": {
            "returns": {
              "_cleanLiquidationFee": "Clean Liquidation Fee",
              "_maturityDate": "Maturity Date",
              "_maxLTV": "Maximum LTV",
              "_oracleNormalization": "Oracle normalization factor",
              "_penaltyRate": "Penalty Rate"
            }
          },
          "getPairAccounting()": {
            "returns": {
              "_totalAssetAmount": "Total assets deposited and interest accrued, total claims",
              "_totalAssetShares": "Total fTokens",
              "_totalBorrowAmount": "Total borrows",
              "_totalBorrowShares": "Total borrow shares",
              "_totalCollateral": "Total collateral"
            }
          },
          "getUserSnapshot(address)": {
            "params": {
              "_address": "The user address"
            },
            "returns": {
              "_userAssetShares": "The user fToken balance",
              "_userBorrowShares": "The user borrow shares",
              "_userCollateralBalance": "The user collateral balance"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(string,address[],address[],bytes)": {
            "details": "This function can only be called by the deployer",
            "params": {
              "_approvedBorrowers": "An array of approved borrower addresses",
              "_approvedLenders": "An array of approved lender addresses",
              "_name": "The name of the contract",
              "_rateInitCallData": "The configuration data for the Rate Calculator contract"
            }
          },
          "leveragedPosition(address,uint256,uint256,uint256,address[])": {
            "details": "Caller must invoke ```ERC20.approve()``` on the Collateral Token contract prior to calling function",
            "params": {
              "_amountCollateralOutMin": "The minimum amount of Collateral Tokens to be received in exchange for the borrowed Asset Tokens",
              "_borrowAmount": "The amount of Asset Tokens borrowed",
              "_initialCollateralAmount": "The initial amount of Collateral Tokens supplied by the borrower",
              "_path": "An array containing the addresses of ERC20 tokens to swap.  Adheres to UniV2 style path params.",
              "_swapperAddress": "The address of the whitelisted swapper to use to swap borrowed Asset Tokens for Collateral Tokens"
            },
            "returns": {
              "_totalCollateralBalance": "The total amount of Collateral Tokens added to a users account (initial + swap)"
            }
          },
          "liquidate(uint128,uint256,address)": {
            "details": "Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling ```Liquidate()```",
            "params": {
              "_borrower": "The account for which the repayment is credited and from whom collateral will be taken",
              "_deadline": "The timestamp after which tx will revert",
              "_sharesToLiquidate": "The number of Borrow Shares repaid by the liquidator"
            },
            "returns": {
              "_collateralForLiquidator": "The amount of Collateral Token transferred to the liquidator"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "redeem(uint256,address,address)": {
            "params": {
              "_owner": "The owner of the Asset Shares (fTokens)",
              "_receiver": "The address to which the Asset Tokens will be transferred",
              "_shares": "The number of Asset Shares (fTokens) to burn for Asset Tokens"
            },
            "returns": {
              "_amountToReturn": "The amount of Asset Tokens to be transferred"
            }
          },
          "removeCollateral(uint256,address)": {
            "details": "msg.sender must be solvent after invocation or transaction will revert",
            "params": {
              "_collateralAmount": "The amount of Collateral Token to transfer",
              "_receiver": "The address to receive the transferred funds"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "repayAsset(uint256,address)": {
            "details": "Caller must first invoke ```ERC20.approve()``` for the Asset Token contract",
            "params": {
              "_borrower": "The account for which the debt will be reduced",
              "_shares": "The number of Borrow Shares which will be repaid by the call"
            },
            "returns": {
              "_amountToRepay": "The amount of Asset Tokens which were transferred in order to repay the Borrow Shares"
            }
          },
          "repayAssetWithCollateral(address,uint256,uint256,address[])": {
            "params": {
              "_amountAssetOutMin": "The minimum amount of Asset Tokens to receive during the swap",
              "_collateralToSwap": "The amount of Collateral Tokens to swap for Asset Tokens",
              "_path": "An array containing the addresses of ERC20 tokens to swap.  Adheres to UniV2 style path params.",
              "_swapperAddress": "The address of the whitelisted swapper to use for token swaps"
            },
            "returns": {
              "_amountAssetOut": "The amount of Asset Tokens received for the Collateral Tokens, the amount the borrowers account was credited"
            }
          },
          "setApprovedBorrowers(address[],bool)": {
            "details": "Cannot black list self",
            "params": {
              "_approval": "The approval status",
              "_borrowers": "The addresses who's status will be set"
            }
          },
          "setApprovedLenders(address[],bool)": {
            "details": "Cannot black list self",
            "params": {
              "_approval": "The approval status",
              "_lenders": "The addresses who's status will be set"
            }
          },
          "setSwapper(address,bool)": {
            "details": "@param _swapper The swapper address",
            "params": {
              "_approval": "The approval"
            }
          },
          "setTimeLock(address)": {
            "params": {
              "_newAddress": "the new time lock address"
            }
          },
          "toAssetAmount(uint256,bool)": {
            "params": {
              "_roundUp": "Whether to round up after division",
              "_shares": "Shares of asset (fToken)"
            },
            "returns": {
              "_0": "The amount of asset"
            }
          },
          "toAssetShares(uint256,bool)": {
            "params": {
              "_amount": "The amount of asset",
              "_roundUp": "Whether to round up after division"
            },
            "returns": {
              "_0": "The number of shares (fTokens)"
            }
          },
          "toBorrowAmount(uint256,bool)": {
            "params": {
              "_roundUp": "Whether to roundup during division",
              "_shares": "Shares of borrow"
            },
            "returns": {
              "_0": "The amount of asset"
            }
          },
          "toBorrowShares(uint256,bool)": {
            "params": {
              "_amount": "Amount of borrow",
              "_roundUp": "Whether to roundup during division"
            }
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateExchangeRate()": {
            "details": "This function is invoked at most once per block as these queries can be expensive",
            "returns": {
              "_exchangeRate": "The new exchange rate"
            }
          },
          "withdrawFees(uint128,address)": {
            "params": {
              "_recipient": "Address to send the assets",
              "_shares": "Number of fTokens to redeem"
            },
            "returns": {
              "_amountToTransfer": "Amount of assets sent to recipient"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addCollateral(uint256,address)": {
            "notice": "The ```addCollateral``` function allows the caller to add Collateral Token to a borrowers position"
          },
          "addInterest()": {
            "notice": "The ```addInterest``` function is a public implementation of _addInterest and allows 3rd parties to trigger interest accrual"
          },
          "borrowAsset(uint256,uint256,address)": {
            "notice": "The ```borrowAsset``` function allows a user to open/increase a borrow position"
          },
          "changeFee(uint32)": {
            "notice": "The ```changeFee``` function changes the protocol fee, max 50%"
          },
          "currentRateInfo()": {
            "notice": "Stores information about the current interest rate"
          },
          "deposit(uint256,address)": {
            "notice": "The ```deposit``` function allows a user to Lend Assets by specifying the amount of Asset Tokens to lend"
          },
          "exchangeRateInfo()": {
            "notice": "Stores information about the current exchange rate. Collateral:Asset ratio"
          },
          "getImmutableAddressBool()": {
            "notice": "The ```getImmutableAddressBool``` function gets all the address and bool configs"
          },
          "getImmutableUint256()": {
            "notice": "The ```getImmutableUint256``` function gets all uint256 config values"
          },
          "getPairAccounting()": {
            "notice": "The ```getPairAccounting``` function gets all pair level accounting numbers"
          },
          "getUserSnapshot(address)": {
            "notice": "The ```getUserSnapshot``` function gets user level accounting data"
          },
          "initialize(string,address[],address[],bytes)": {
            "notice": "The ```initialize``` function is called immediately after deployment"
          },
          "leveragedPosition(address,uint256,uint256,uint256,address[])": {
            "notice": "The ```leveragedPosition``` function allows a user to enter a leveraged borrow position with minimal upfront Collateral"
          },
          "liquidate(uint128,uint256,address)": {
            "notice": "The ```liquidate``` function allows a third party to repay a borrower's debt if they have become insolvent"
          },
          "redeem(uint256,address,address)": {
            "notice": "The ```redeem``` function allows the caller to redeem their Asset Shares for Asset Tokens"
          },
          "removeCollateral(uint256,address)": {
            "notice": "The ```removeCollateral``` function is used to remove collateral from msg.sender's borrow position"
          },
          "repayAsset(uint256,address)": {
            "notice": "The ```repayAsset``` function allows the caller to pay down the debt for a given borrower."
          },
          "repayAssetWithCollateral(address,uint256,uint256,address[])": {
            "notice": "The ```repayAssetWithCollateral``` function allows a borrower to repay their debt using existing collateral in contract"
          },
          "setApprovedBorrowers(address[],bool)": {
            "notice": "The ```setApprovedBorrowers``` function sets a given array of addresses to the whitelist"
          },
          "setApprovedLenders(address[],bool)": {
            "notice": "The ```setApprovedLenders``` function sets a given set of addresses to the whitelist"
          },
          "setSwapper(address,bool)": {
            "notice": "The ```setSwapper``` function is called to black or whitelist a given swapper address"
          },
          "setTimeLock(address)": {
            "notice": "The ```setTimeLock``` function sets the TIME_LOCK address"
          },
          "toAssetAmount(uint256,bool)": {
            "notice": "The ```toAssetAmount``` function converts a given number of shares to an asset amount"
          },
          "toAssetShares(uint256,bool)": {
            "notice": "The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)"
          },
          "toBorrowAmount(uint256,bool)": {
            "notice": "The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares"
          },
          "toBorrowShares(uint256,bool)": {
            "notice": "The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares"
          },
          "updateExchangeRate()": {
            "notice": "The ```updateExchangeRate``` function is the external implementation of _updateExchangeRate."
          },
          "userBorrowShares(address)": {
            "notice": "Stores the balance of borrow shares for each user"
          },
          "userCollateralBalance(address)": {
            "notice": "Stores the balance of collateral for each user"
          },
          "withdrawFees(uint128,address)": {
            "notice": "The ```withdrawFees``` function withdraws fees accumulated"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-core/=lib/joe-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-core/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPair.sol": "MugenLendPair"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/fraxlend/src/contracts/FraxlendPairConstants.sol": {
        "keccak256": "0x992304427965ab1c3e3aa252a50c38f537851fa6f14703dfaf0a2435cf6444ed",
        "urls": [
          "bzz-raw://39a77252078395b5d0de73d65717a5e0d66d3178bf9c87a9a923edb15fcbb226",
          "dweb:/ipfs/QmW6cPDW8f6qKgPSyKwWW618XFMQ7m2endGPJY8pc8E1pV"
        ],
        "license": "ISC"
      },
      "lib/fraxlend/src/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0xe3d3d74fd6bce945d5fe0dadf2dee7450d7a8e98a257c57361b14a25513649a0",
        "urls": [
          "bzz-raw://0e63550ef23706b32a88c21e27d5ba1f496dd3a2ac22eaf7a74a052bea93cb1b",
          "dweb:/ipfs/QmcFsTo3EFtHPzpF6MF74vCQbP8bgzW6aXA1gBfhMmHUiL"
        ],
        "license": "ISC"
      },
      "lib/fraxlend/src/contracts/interfaces/IFraxlendWhitelist.sol": {
        "keccak256": "0x27fa503c44c16272e0be45067e813d79404d32141f79ffad75948d65e840f862",
        "urls": [
          "bzz-raw://452e43508b4d8b3dc34bbf789fd24ceea8f3908298517a6b3119378ed27dba34",
          "dweb:/ipfs/QmT3R1XfTDyTU9B2whii1YbydjYQoRS8neSKvqrRAZoW5n"
        ],
        "license": "ISC"
      },
      "lib/fraxlend/src/contracts/interfaces/IRateCalculator.sol": {
        "keccak256": "0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6",
        "urls": [
          "bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a",
          "dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1"
        ],
        "license": "ISC"
      },
      "lib/fraxlend/src/contracts/interfaces/ISwapper.sol": {
        "keccak256": "0xfbd706403f2967c8cc7d82fb67d9d71d405448d79593c70089e8ef1eaf6ad78c",
        "urls": [
          "bzz-raw://23d3732d76cac9046d9035cea06d6df9157d71605ddb9d708917c32c503b1b69",
          "dweb:/ipfs/QmSg1vPsizi39GGffLTKLgETT7QwNiq1kLYF71qfJBkHuW"
        ],
        "license": "MIT"
      },
      "lib/fraxlend/src/contracts/libraries/SafeERC20.sol": {
        "keccak256": "0x0975795c0f908c1d8050d743f4bdc05fd1a56f1e5d79f2c1dbe8e3e8227820dd",
        "urls": [
          "bzz-raw://a3cbfb6ceb6f6f778148a07557904a560729449b27cb7f77b6426b5a54651cea",
          "dweb:/ipfs/QmeaMj1FA1HPqRGvzfruXkNjf1AqpCXNNGErWSY5B2Y5Q6"
        ],
        "license": "ISC"
      },
      "lib/fraxlend/src/contracts/libraries/VaultAccount.sol": {
        "keccak256": "0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff",
        "urls": [
          "bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1",
          "dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc"
        ],
        "license": "ISC"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414",
        "urls": [
          "bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c",
          "dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPair.sol": {
        "keccak256": "0x969028e8f033a03e4c9cc401eff8d14d4bbb4c5d78af32b3a5a8f0034086355d",
        "urls": [
          "bzz-raw://fe7b61cdf97e86ecefd4091d417dee186c552ad49827262772d9e4ebeaee14ff",
          "dweb:/ipfs/QmcLdHiPN9zf3oPE8CiZXNuzVQgVMokMh3pnjsmx3rXD9J"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPairCore.sol": {
        "keccak256": "0xe678e6c9c8cae23624a911e768811a6d56d0b15ad9eafd075787c8e4b7fcc45f",
        "urls": [
          "bzz-raw://ed34b6d58460edd633934fc6274a8f0aae244f02859391b41268dc94244a545e",
          "dweb:/ipfs/QmUzuCdDAcuxBWXrQMBYJz1MKTWndqB4U74R3Ny1QedS84"
        ],
        "license": "ISC"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPair.sol",
    "id": 3907,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        8435
      ],
      "ERC20": [
        9022
      ],
      "FraxlendPairConstants": [
        138
      ],
      "IERC20": [
        8107
      ],
      "IERC20Metadata": [
        8132
      ],
      "IERC4626": [
        289
      ],
      "IFraxlendWhitelist": [
        835
      ],
      "IRateCalculator": [
        862
      ],
      "ISwapper": [
        882
      ],
      "MugenLendPair": [
        3906
      ],
      "MugenLendPairCore": [
        6446
      ],
      "OZSafeERC20": [
        8413
      ],
      "Ownable": [
        1365
      ],
      "Pausable": [
        1476
      ],
      "ReentrancyGuard": [
        1530
      ],
      "SafeCast": [
        3071
      ],
      "SafeERC20": [
        1131
      ],
      "VaultAccount": [
        1138
      ],
      "VaultAccountingLibrary": [
        1252
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:16404:21",
    "nodes": [
      {
        "id": 3073,
        "nodeType": "PragmaDirective",
        "src": "32:24:21",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 3074,
        "nodeType": "ImportDirective",
        "src": "58:55:21",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 8108,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3075,
        "nodeType": "ImportDirective",
        "src": "114:74:21",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 8133,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3076,
        "nodeType": "ImportDirective",
        "src": "189:61:21",
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 1531,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3077,
        "nodeType": "ImportDirective",
        "src": "251:75:21",
        "absolutePath": "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 46,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3078,
        "nodeType": "ImportDirective",
        "src": "327:58:21",
        "absolutePath": "lib/fraxlend/src/contracts/FraxlendPairConstants.sol",
        "file": "fraxlend/src/contracts/FraxlendPairConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 139,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3079,
        "nodeType": "ImportDirective",
        "src": "386:59:21",
        "absolutePath": "lib/fraxlend/src/contracts/libraries/VaultAccount.sol",
        "file": "fraxlend/src/contracts/libraries/VaultAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 1253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3080,
        "nodeType": "ImportDirective",
        "src": "446:56:21",
        "absolutePath": "lib/fraxlend/src/contracts/libraries/SafeERC20.sol",
        "file": "fraxlend/src/contracts/libraries/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 1132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3081,
        "nodeType": "ImportDirective",
        "src": "503:56:21",
        "absolutePath": "lib/fraxlend/src/contracts/interfaces/IERC4626.sol",
        "file": "fraxlend/src/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 290,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3082,
        "nodeType": "ImportDirective",
        "src": "560:66:21",
        "absolutePath": "lib/fraxlend/src/contracts/interfaces/IFraxlendWhitelist.sol",
        "file": "fraxlend/src/contracts/interfaces/IFraxlendWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 836,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3083,
        "nodeType": "ImportDirective",
        "src": "627:63:21",
        "absolutePath": "lib/fraxlend/src/contracts/interfaces/IRateCalculator.sol",
        "file": "fraxlend/src/contracts/interfaces/IRateCalculator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 863,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3084,
        "nodeType": "ImportDirective",
        "src": "691:56:21",
        "absolutePath": "lib/fraxlend/src/contracts/interfaces/ISwapper.sol",
        "file": "fraxlend/src/contracts/interfaces/ISwapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 883,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3085,
        "nodeType": "ImportDirective",
        "src": "748:33:21",
        "absolutePath": "src/NonTreasuryVaults/GLP/ModifiedFraxLend/MugenLendPairCore.sol",
        "file": "./MugenLendPairCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3907,
        "sourceUnit": 6447,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3906,
        "nodeType": "ContractDefinition",
        "src": "783:15652:21",
        "nodes": [
          {
            "id": 3093,
            "nodeType": "UsingForDirective",
            "src": "849:46:21",
            "global": false,
            "libraryName": {
              "id": 3090,
              "name": "VaultAccountingLibrary",
              "nameLocations": [
                "855:22:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1252,
              "src": "855:22:21"
            },
            "typeName": {
              "id": 3092,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3091,
                "name": "VaultAccount",
                "nameLocations": [
                  "882:12:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1138,
                "src": "882:12:21"
              },
              "referencedDeclaration": 1138,
              "src": "882:12:21",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_VaultAccount_$1138_storage_ptr",
                "typeString": "struct VaultAccount"
              }
            }
          },
          {
            "id": 3097,
            "nodeType": "UsingForDirective",
            "src": "900:27:21",
            "global": false,
            "libraryName": {
              "id": 3094,
              "name": "SafeERC20",
              "nameLocations": [
                "906:9:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1131,
              "src": "906:9:21"
            },
            "typeName": {
              "id": 3096,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3095,
                "name": "IERC20",
                "nameLocations": [
                  "920:6:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8107,
                "src": "920:6:21"
              },
              "referencedDeclaration": 8107,
              "src": "920:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8107",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3135,
            "nodeType": "FunctionDefinition",
            "src": "933:617:21",
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "1548:2:21",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3116,
                    "name": "_configData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3099,
                    "src": "1257:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "id": 3117,
                    "name": "_immutables",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3101,
                    "src": "1282:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "id": 3118,
                    "name": "_maxLTV",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3103,
                    "src": "1307:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3119,
                    "name": "_liquidationFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3105,
                    "src": "1328:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3120,
                    "name": "_maturityDate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3107,
                    "src": "1357:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3121,
                    "name": "_penaltyRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3109,
                    "src": "1384:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3122,
                    "name": "_isBorrowerWhitelistActive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3111,
                    "src": "1410:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "id": 3123,
                    "name": "_isLenderWhitelistActive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3113,
                    "src": "1450:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 3124,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3115,
                  "name": "MugenLendPairCore",
                  "nameLocations": [
                    "1226:17:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6446,
                  "src": "1226:17:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1226:258:21"
              },
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1499:2:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  {
                    "hexValue": "",
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1503:2:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 3128,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3125,
                  "name": "ERC20",
                  "nameLocations": [
                    "1493:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9022,
                  "src": "1493:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1493:13:21"
              },
              {
                "arguments": [],
                "id": 3130,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3129,
                  "name": "Ownable",
                  "nameLocations": [
                    "1515:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1365,
                  "src": "1515:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1515:9:21"
              },
              {
                "arguments": [],
                "id": 3132,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3131,
                  "name": "Pausable",
                  "nameLocations": [
                    "1533:8:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1476,
                  "src": "1533:8:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1533:10:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "_configData",
                  "nameLocation": "967:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "954:24:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3101,
                  "mutability": "mutable",
                  "name": "_immutables",
                  "nameLocation": "1001:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "988:24:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "_maxLTV",
                  "nameLocation": "1030:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1022:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "_liquidationFee",
                  "nameLocation": "1055:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1047:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "_maturityDate",
                  "nameLocation": "1088:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1080:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3109,
                  "mutability": "mutable",
                  "name": "_penaltyRate",
                  "nameLocation": "1119:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1111:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "mutability": "mutable",
                  "name": "_isBorrowerWhitelistActive",
                  "nameLocation": "1146:26:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1141:31:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "_isLenderWhitelistActive",
                  "nameLocation": "1187:24:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "1182:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:273:21"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3146,
            "nodeType": "FunctionDefinition",
            "src": "1779:158:21",
            "body": {
              "id": 3145,
              "nodeType": "Block",
              "src": "1899:38:21",
              "statements": [
                {
                  "expression": {
                    "id": 3143,
                    "name": "nameOfContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3985,
                    "src": "1916:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3142,
                  "id": 3144,
                  "nodeType": "Return",
                  "src": "1909:21:21"
                }
              ]
            },
            "baseFunctions": [
              8119,
              8490
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1788:4:21",
            "overrides": {
              "id": 3139,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3137,
                  "name": "ERC20",
                  "nameLocations": [
                    "1840:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9022,
                  "src": "1840:5:21"
                },
                {
                  "id": 3138,
                  "name": "IERC20Metadata",
                  "nameLocations": [
                    "1847:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8132,
                  "src": "1847:14:21"
                }
              ],
              "src": "1831:31:21"
            },
            "parameters": {
              "id": 3136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:2:21"
            },
            "returnParameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3146,
                  "src": "1880:13:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1879:15:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3170,
            "nodeType": "FunctionDefinition",
            "src": "1943:333:21",
            "body": {
              "id": 3169,
              "nodeType": "Block",
              "src": "2065:211:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "467261786c656e645631202d20",
                            "id": 3158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_eadc15569c3d13c6da3eb90b571b6d1cd00fde943a254a6189e1b8f17acb66af",
                              "typeString": "literal_string \"FraxlendV1 - \""
                            },
                            "value": "FraxlendV1 - "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3159,
                                "name": "collateralContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3952,
                                "src": "2203:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$8107",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2222:10:21",
                              "memberName": "safeSymbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1016,
                              "src": "2203:29:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$8107_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$8107_$",
                                "typeString": "function (contract IERC20) view returns (string memory)"
                              }
                            },
                            "id": 3161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2203:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 3162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2236:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3163,
                                "name": "assetContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3949,
                                "src": "2241:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$8107",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2255:10:21",
                              "memberName": "safeSymbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1016,
                              "src": "2241:24:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$8107_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$8107_$",
                                "typeString": "function (contract IERC20) view returns (string memory)"
                              }
                            },
                            "id": 3165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2241:26:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_eadc15569c3d13c6da3eb90b571b6d1cd00fde943a254a6189e1b8f17acb66af",
                              "typeString": "literal_string \"FraxlendV1 - \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3156,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2169:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2173:12:21",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2169:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2169:99:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2162:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3154,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2162:6:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:107:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3153,
                  "id": 3168,
                  "nodeType": "Return",
                  "src": "2155:114:21"
                }
              ]
            },
            "baseFunctions": [
              8125,
              8500
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1952:6:21",
            "overrides": {
              "id": 3150,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3148,
                  "name": "ERC20",
                  "nameLocations": [
                    "2006:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9022,
                  "src": "2006:5:21"
                },
                {
                  "id": 3149,
                  "name": "IERC20Metadata",
                  "nameLocations": [
                    "2013:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8132,
                  "src": "2013:14:21"
                }
              ],
              "src": "1997:31:21"
            },
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:2:21"
            },
            "returnParameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3170,
                  "src": "2046:13:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2045:15:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3181,
            "nodeType": "FunctionDefinition",
            "src": "2282:142:21",
            "body": {
              "id": 3180,
              "nodeType": "Block",
              "src": "2398:26:21",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 3178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2415:2:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 3177,
                  "id": 3179,
                  "nodeType": "Return",
                  "src": "2408:9:21"
                }
              ]
            },
            "baseFunctions": [
              8131,
              8510
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2291:8:21",
            "overrides": {
              "id": 3174,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3172,
                  "name": "ERC20",
                  "nameLocations": [
                    "2347:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9022,
                  "src": "2347:5:21"
                },
                {
                  "id": 3173,
                  "name": "IERC20Metadata",
                  "nameLocations": [
                    "2354:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8132,
                  "src": "2354:14:21"
                }
              ],
              "src": "2338:31:21"
            },
            "parameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:2:21"
            },
            "returnParameters": {
              "id": 3177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3181,
                  "src": "2387:5:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3175,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:7:21"
            },
            "scope": 3906,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3193,
            "nodeType": "FunctionDefinition",
            "src": "2480:154:21",
            "body": {
              "id": 3192,
              "nodeType": "Block",
              "src": "2593:41:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3189,
                      "name": "totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4014,
                      "src": "2610:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                        "typeString": "struct VaultAccount storage ref"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2621:6:21",
                    "memberName": "shares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1137,
                    "src": "2610:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 3188,
                  "id": 3191,
                  "nodeType": "Return",
                  "src": "2603:24:21"
                }
              ]
            },
            "baseFunctions": [
              8056,
              8520
            ],
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2489:11:21",
            "overrides": {
              "id": 3185,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3183,
                  "name": "ERC20",
                  "nameLocations": [
                    "2548:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9022,
                  "src": "2548:5:21"
                },
                {
                  "id": 3184,
                  "name": "IERC20",
                  "nameLocations": [
                    "2555:6:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8107,
                  "src": "2555:6:21"
                }
              ],
              "src": "2539:23:21"
            },
            "parameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2500:2:21"
            },
            "returnParameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "2580:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3204,
            "nodeType": "FunctionDefinition",
            "src": "2867:95:21",
            "body": {
              "id": 3203,
              "nodeType": "Block",
              "src": "2916:46:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "name": "assetContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3949,
                        "src": "2941:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8107",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8107",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2933:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2933:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:22:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3197,
                  "id": 3202,
                  "nodeType": "Return",
                  "src": "2926:29:21"
                }
              ]
            },
            "functionSelector": "38d52e0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "asset",
            "nameLocation": "2876:5:21",
            "parameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:21"
            },
            "returnParameters": {
              "id": 3197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3204,
                  "src": "2907:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2906:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3256,
            "nodeType": "FunctionDefinition",
            "src": "2968:725:21",
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "3348:345:21",
              "statements": [
                {
                  "expression": {
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3223,
                      "name": "_LTV_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "3358:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3224,
                      "name": "LTV_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3375:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3358:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:30:21"
                },
                {
                  "expression": {
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3227,
                      "name": "_LIQ_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3209,
                      "src": "3398:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3228,
                      "name": "LIQ_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "3415:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3398:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:30:21"
                },
                {
                  "expression": {
                    "id": 3233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3231,
                      "name": "_UTIL_PREC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "3438:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3232,
                      "name": "UTIL_PREC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3451:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3438:22:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3234,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:22:21"
                },
                {
                  "expression": {
                    "id": 3237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3235,
                      "name": "_FEE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "3470:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3236,
                      "name": "FEE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "3487:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3470:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3238,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:30:21"
                },
                {
                  "expression": {
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3239,
                      "name": "_EXCHANGE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3215,
                      "src": "3510:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3240,
                      "name": "EXCHANGE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3532:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3510:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3242,
                  "nodeType": "ExpressionStatement",
                  "src": "3510:40:21"
                },
                {
                  "expression": {
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3243,
                      "name": "_DEFAULT_INT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3217,
                      "src": "3560:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3244,
                      "name": "DEFAULT_INT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3575:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3560:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:26:21"
                },
                {
                  "expression": {
                    "id": 3249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3247,
                      "name": "_DEFAULT_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3219,
                      "src": "3596:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3248,
                      "name": "DEFAULT_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3620:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3596:44:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 3250,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:44:21"
                },
                {
                  "expression": {
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3251,
                      "name": "_MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3221,
                      "src": "3650:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3252,
                      "name": "MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "3670:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3254,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:36:21"
                }
              ]
            },
            "functionSelector": "9a295e73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConstants",
            "nameLocation": "2977:12:21",
            "parameters": {
              "id": 3205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2989:2:21"
            },
            "returnParameters": {
              "id": 3222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3207,
                  "mutability": "mutable",
                  "name": "_LTV_PRECISION",
                  "nameLocation": "3060:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3052:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3209,
                  "mutability": "mutable",
                  "name": "_LIQ_PRECISION",
                  "nameLocation": "3096:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3088:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3088:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3211,
                  "mutability": "mutable",
                  "name": "_UTIL_PREC",
                  "nameLocation": "3132:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3124:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3213,
                  "mutability": "mutable",
                  "name": "_FEE_PRECISION",
                  "nameLocation": "3164:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3156:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3215,
                  "mutability": "mutable",
                  "name": "_EXCHANGE_PRECISION",
                  "nameLocation": "3200:19:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3192:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3217,
                  "mutability": "mutable",
                  "name": "_DEFAULT_INT",
                  "nameLocation": "3240:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3233:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3216,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3219,
                  "mutability": "mutable",
                  "name": "_DEFAULT_PROTOCOL_FEE",
                  "nameLocation": "3273:21:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3266:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3218,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3221,
                  "mutability": "mutable",
                  "name": "_MAX_PROTOCOL_FEE",
                  "nameLocation": "3316:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "3308:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:305:21"
            },
            "scope": 3906,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3330,
            "nodeType": "FunctionDefinition",
            "src": "4410:1002:21",
            "body": {
              "id": 3329,
              "nodeType": "Block",
              "src": "4897:515:21",
              "statements": [
                {
                  "expression": {
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3280,
                      "name": "_assetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "4907:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3283,
                          "name": "assetContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3949,
                          "src": "4932:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8107",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$8107",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4924:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4924:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4924:22:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4907:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3286,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:39:21"
                },
                {
                  "expression": {
                    "id": 3292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3287,
                      "name": "_collateralContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "4956:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3290,
                          "name": "collateralContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3952,
                          "src": "4986:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8107",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$8107",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 3289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4978:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4978:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4978:27:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4956:49:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3293,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:49:21"
                },
                {
                  "expression": {
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3294,
                      "name": "_oracleMultiply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3264,
                      "src": "5015:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3295,
                      "name": "oracleMultiply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3954,
                      "src": "5033:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5015:32:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3297,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:32:21"
                },
                {
                  "expression": {
                    "id": 3300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3298,
                      "name": "_oracleDivide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3266,
                      "src": "5057:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3299,
                      "name": "oracleDivide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3956,
                      "src": "5073:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5057:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3301,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:28:21"
                },
                {
                  "expression": {
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3302,
                      "name": "_rateContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3268,
                      "src": "5095:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3305,
                          "name": "rateContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3967,
                          "src": "5119:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRateCalculator_$862",
                            "typeString": "contract IRateCalculator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRateCalculator_$862",
                            "typeString": "contract IRateCalculator"
                          }
                        ],
                        "id": 3304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5111:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5111:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5111:21:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5095:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:37:21"
                },
                {
                  "expression": {
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3309,
                      "name": "_DEPLOYER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3270,
                      "src": "5142:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3310,
                      "name": "DEPLOYER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3975,
                      "src": "5163:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5142:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3312,
                  "nodeType": "ExpressionStatement",
                  "src": "5142:37:21"
                },
                {
                  "expression": {
                    "id": 3315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3313,
                      "name": "_COMPTROLLER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3272,
                      "src": "5189:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3314,
                      "name": "COMPTROLLER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3979,
                      "src": "5212:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5189:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3316,
                  "nodeType": "ExpressionStatement",
                  "src": "5189:42:21"
                },
                {
                  "expression": {
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3317,
                      "name": "_FRAXLEND_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3274,
                      "src": "5241:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3318,
                      "name": "FRAXLEND_WHITELIST_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3983,
                      "src": "5263:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5241:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3320,
                  "nodeType": "ExpressionStatement",
                  "src": "5241:48:21"
                },
                {
                  "expression": {
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3321,
                      "name": "_borrowerWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3276,
                      "src": "5299:24:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3322,
                      "name": "borrowerWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4031,
                      "src": "5326:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5299:50:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "5299:50:21"
                },
                {
                  "expression": {
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3325,
                      "name": "_lenderWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3278,
                      "src": "5359:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3326,
                      "name": "lenderWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4037,
                      "src": "5384:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5359:46:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "5359:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3257,
              "nodeType": "StructuredDocumentation",
              "src": "3699:706:21",
              "text": "@notice The ```getImmutableAddressBool``` function gets all the address and bool configs\n @return _assetContract Address of asset\n @return _collateralContract Address of collateral\n @return _oracleMultiply Address of oracle numerator\n @return _oracleDivide Address of oracle denominator\n @return _rateContract Address of rate contract\n @return _DEPLOYER_CONTRACT Address of deployer contract\n @return _COMPTROLLER_ADDRESS Address of comptroller\n @return _FRAXLEND_WHITELIST Address of whitelist\n @return _borrowerWhitelistActive Boolean is borrower whitelist active\n @return _lenderWhitelistActive Boolean is lender whitelist active"
            },
            "functionSelector": "36fad62d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getImmutableAddressBool",
            "nameLocation": "4419:23:21",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4442:2:21"
            },
            "returnParameters": {
              "id": 3279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "_assetContract",
                  "nameLocation": "4513:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4505:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3262,
                  "mutability": "mutable",
                  "name": "_collateralContract",
                  "nameLocation": "4549:19:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4541:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3264,
                  "mutability": "mutable",
                  "name": "_oracleMultiply",
                  "nameLocation": "4590:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4582:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4582:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3266,
                  "mutability": "mutable",
                  "name": "_oracleDivide",
                  "nameLocation": "4627:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4619:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3268,
                  "mutability": "mutable",
                  "name": "_rateContract",
                  "nameLocation": "4662:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4654:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4654:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3270,
                  "mutability": "mutable",
                  "name": "_DEPLOYER_CONTRACT",
                  "nameLocation": "4697:18:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4689:26:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4689:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3272,
                  "mutability": "mutable",
                  "name": "_COMPTROLLER_ADDRESS",
                  "nameLocation": "4737:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4729:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3274,
                  "mutability": "mutable",
                  "name": "_FRAXLEND_WHITELIST",
                  "nameLocation": "4779:19:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4771:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4771:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3276,
                  "mutability": "mutable",
                  "name": "_borrowerWhitelistActive",
                  "nameLocation": "4817:24:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4812:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3278,
                  "mutability": "mutable",
                  "name": "_lenderWhitelistActive",
                  "nameLocation": "4860:22:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3330,
                  "src": "4855:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4491:401:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3365,
            "nodeType": "FunctionDefinition",
            "src": "5750:485:21",
            "body": {
              "id": 3364,
              "nodeType": "Block",
              "src": "6024:211:21",
              "statements": [
                {
                  "expression": {
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3344,
                      "name": "_oracleNormalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3334,
                      "src": "6034:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3345,
                      "name": "oracleNormalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3958,
                      "src": "6057:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6034:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3347,
                  "nodeType": "ExpressionStatement",
                  "src": "6034:42:21"
                },
                {
                  "expression": {
                    "id": 3350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3348,
                      "name": "_maxLTV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3336,
                      "src": "6086:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3349,
                      "name": "maxLTV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3960,
                      "src": "6096:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6086:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3351,
                  "nodeType": "ExpressionStatement",
                  "src": "6086:16:21"
                },
                {
                  "expression": {
                    "id": 3354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3352,
                      "name": "_cleanLiquidationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3338,
                      "src": "6112:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3353,
                      "name": "cleanLiquidationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3962,
                      "src": "6135:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6112:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3355,
                  "nodeType": "ExpressionStatement",
                  "src": "6112:42:21"
                },
                {
                  "expression": {
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3356,
                      "name": "_maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3340,
                      "src": "6164:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3357,
                      "name": "maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3987,
                      "src": "6180:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6164:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3359,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:28:21"
                },
                {
                  "expression": {
                    "id": 3362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3360,
                      "name": "_penaltyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3342,
                      "src": "6202:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3361,
                      "name": "penaltyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3989,
                      "src": "6217:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6202:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3363,
                  "nodeType": "ExpressionStatement",
                  "src": "6202:26:21"
                }
              ]
            },
            "documentation": {
              "id": 3331,
              "nodeType": "StructuredDocumentation",
              "src": "5418:327:21",
              "text": "@notice The ```getImmutableUint256``` function gets all uint256 config values\n @return _oracleNormalization Oracle normalization factor\n @return _maxLTV Maximum LTV\n @return _cleanLiquidationFee Clean Liquidation Fee\n @return _maturityDate Maturity Date\n @return _penaltyRate Penalty Rate"
            },
            "functionSelector": "fea10d5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getImmutableUint256",
            "nameLocation": "5759:19:21",
            "parameters": {
              "id": 3332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5778:2:21"
            },
            "returnParameters": {
              "id": 3343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "mutability": "mutable",
                  "name": "_oracleNormalization",
                  "nameLocation": "5849:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "5841:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5841:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "mutability": "mutable",
                  "name": "_maxLTV",
                  "nameLocation": "5891:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "5883:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "mutability": "mutable",
                  "name": "_cleanLiquidationFee",
                  "nameLocation": "5920:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "5912:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5912:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "mutability": "mutable",
                  "name": "_maturityDate",
                  "nameLocation": "5962:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "5954:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "mutability": "mutable",
                  "name": "_penaltyRate",
                  "nameLocation": "5997:12:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "5989:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5989:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5827:192:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3396,
            "nodeType": "FunctionDefinition",
            "src": "6546:402:21",
            "body": {
              "id": 3395,
              "nodeType": "Block",
              "src": "6771:177:21",
              "statements": [
                {
                  "expression": {
                    "id": 3381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3377,
                      "name": "_userAssetShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3371,
                      "src": "6781:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3379,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3368,
                          "src": "6810:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3378,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8534,
                        "src": "6800:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 3380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6800:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6781:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3382,
                  "nodeType": "ExpressionStatement",
                  "src": "6781:38:21"
                },
                {
                  "expression": {
                    "id": 3387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3383,
                      "name": "_userBorrowShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3373,
                      "src": "6829:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3384,
                        "name": "userBorrowShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4029,
                        "src": "6849:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3386,
                      "indexExpression": {
                        "id": 3385,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3368,
                        "src": "6866:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6849:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6829:46:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3388,
                  "nodeType": "ExpressionStatement",
                  "src": "6829:46:21"
                },
                {
                  "expression": {
                    "id": 3393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3389,
                      "name": "_userCollateralBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3375,
                      "src": "6885:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3390,
                        "name": "userCollateralBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4024,
                        "src": "6910:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3392,
                      "indexExpression": {
                        "id": 3391,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3368,
                        "src": "6932:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6910:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6885:56:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3394,
                  "nodeType": "ExpressionStatement",
                  "src": "6885:56:21"
                }
              ]
            },
            "documentation": {
              "id": 3366,
              "nodeType": "StructuredDocumentation",
              "src": "6241:300:21",
              "text": "@notice The ```getUserSnapshot``` function gets user level accounting data\n @param _address The user address\n @return _userAssetShares The user fToken balance\n @return _userBorrowShares The user borrow shares\n @return _userCollateralBalance The user collateral balance"
            },
            "functionSelector": "b68d0a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSnapshot",
            "nameLocation": "6555:15:21",
            "parameters": {
              "id": 3369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3368,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6579:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3396,
                  "src": "6571:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6571:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6570:18:21"
            },
            "returnParameters": {
              "id": 3376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3371,
                  "mutability": "mutable",
                  "name": "_userAssetShares",
                  "nameLocation": "6657:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3396,
                  "src": "6649:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3373,
                  "mutability": "mutable",
                  "name": "_userBorrowShares",
                  "nameLocation": "6695:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3396,
                  "src": "6687:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6687:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3375,
                  "mutability": "mutable",
                  "name": "_userCollateralBalance",
                  "nameLocation": "6734:22:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3396,
                  "src": "6726:30:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6726:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:131:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3445,
            "nodeType": "FunctionDefinition",
            "src": "7340:644:21",
            "body": {
              "id": 3444,
              "nodeType": "Block",
              "src": "7626:358:21",
              "statements": [
                {
                  "assignments": [
                    3412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3412,
                      "mutability": "mutable",
                      "name": "_totalAsset",
                      "nameLocation": "7656:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3444,
                      "src": "7636:31:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 3411,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3410,
                          "name": "VaultAccount",
                          "nameLocations": [
                            "7636:12:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1138,
                          "src": "7636:12:21"
                        },
                        "referencedDeclaration": 1138,
                        "src": "7636:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3414,
                  "initialValue": {
                    "id": 3413,
                    "name": "totalAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4014,
                    "src": "7670:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7636:44:21"
                },
                {
                  "expression": {
                    "id": 3418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3415,
                      "name": "_totalAssetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3400,
                      "src": "7690:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3416,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "7710:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7722:6:21",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "7710:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7690:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3419,
                  "nodeType": "ExpressionStatement",
                  "src": "7690:38:21"
                },
                {
                  "expression": {
                    "id": 3423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3420,
                      "name": "_totalAssetShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "7738:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3421,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "7758:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7770:6:21",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1137,
                      "src": "7758:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7738:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3424,
                  "nodeType": "ExpressionStatement",
                  "src": "7738:38:21"
                },
                {
                  "assignments": [
                    3427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3427,
                      "mutability": "mutable",
                      "name": "_totalBorrow",
                      "nameLocation": "7807:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3444,
                      "src": "7787:32:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 3426,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3425,
                          "name": "VaultAccount",
                          "nameLocations": [
                            "7787:12:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1138,
                          "src": "7787:12:21"
                        },
                        "referencedDeclaration": 1138,
                        "src": "7787:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3429,
                  "initialValue": {
                    "id": 3428,
                    "name": "totalBorrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4017,
                    "src": "7822:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7787:46:21"
                },
                {
                  "expression": {
                    "id": 3433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3430,
                      "name": "_totalBorrowAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3404,
                      "src": "7843:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3431,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "7864:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3432,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7877:6:21",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "7864:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7843:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3434,
                  "nodeType": "ExpressionStatement",
                  "src": "7843:40:21"
                },
                {
                  "expression": {
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3435,
                      "name": "_totalBorrowShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3406,
                      "src": "7893:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3436,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "7914:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7927:6:21",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1137,
                      "src": "7914:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7893:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3439,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:40:21"
                },
                {
                  "expression": {
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3440,
                      "name": "_totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "7943:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3441,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4019,
                      "src": "7962:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7943:34:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3443,
                  "nodeType": "ExpressionStatement",
                  "src": "7943:34:21"
                }
              ]
            },
            "documentation": {
              "id": 3397,
              "nodeType": "StructuredDocumentation",
              "src": "6954:381:21",
              "text": "@notice The ```getPairAccounting``` function gets all pair level accounting numbers\n @return _totalAssetAmount Total assets deposited and interest accrued, total claims\n @return _totalAssetShares Total fTokens\n @return _totalBorrowAmount Total borrows\n @return _totalBorrowShares Total borrow shares\n @return _totalCollateral Total collateral"
            },
            "functionSelector": "cdd72d52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAccounting",
            "nameLocation": "7349:17:21",
            "parameters": {
              "id": 3398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:21"
            },
            "returnParameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "_totalAssetAmount",
                  "nameLocation": "7437:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "7429:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7429:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3402,
                  "mutability": "mutable",
                  "name": "_totalAssetShares",
                  "nameLocation": "7476:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "7468:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7468:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3404,
                  "mutability": "mutable",
                  "name": "_totalBorrowAmount",
                  "nameLocation": "7515:18:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "7507:26:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3403,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7507:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3406,
                  "mutability": "mutable",
                  "name": "_totalBorrowShares",
                  "nameLocation": "7555:18:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "7547:26:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3405,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7547:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3408,
                  "mutability": "mutable",
                  "name": "_totalCollateral",
                  "nameLocation": "7595:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "7587:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7587:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7415:206:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3462,
            "nodeType": "FunctionDefinition",
            "src": "8204:179:21",
            "body": {
              "id": 3461,
              "nodeType": "Block",
              "src": "8320:63:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3457,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3448,
                        "src": "8358:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3458,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "8367:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3455,
                        "name": "totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "8337:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8349:8:21",
                      "memberName": "toShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1195,
                      "src": "8337:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$1138_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 3459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8337:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3454,
                  "id": 3460,
                  "nodeType": "Return",
                  "src": "8330:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3446,
              "nodeType": "StructuredDocumentation",
              "src": "7990:209:21",
              "text": "@notice The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares\n @param _amount Amount of borrow\n @param _roundUp Whether to roundup during division"
            },
            "functionSelector": "c270a544",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBorrowShares",
            "nameLocation": "8213:14:21",
            "parameters": {
              "id": 3451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3448,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8236:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "8228:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8228:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3450,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "8250:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "8245:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8245:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8227:32:21"
            },
            "returnParameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "8307:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8307:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8306:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3479,
            "nodeType": "FunctionDefinition",
            "src": "8639:179:21",
            "body": {
              "id": 3478,
              "nodeType": "Block",
              "src": "8755:63:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3474,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3465,
                        "src": "8793:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3475,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "8802:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3472,
                        "name": "totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "8772:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 3473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8784:8:21",
                      "memberName": "toAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1251,
                      "src": "8772:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$1138_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8772:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3471,
                  "id": 3477,
                  "nodeType": "Return",
                  "src": "8765:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3463,
              "nodeType": "StructuredDocumentation",
              "src": "8389:245:21",
              "text": "@notice The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares\n @param _shares Shares of borrow\n @param _roundUp Whether to roundup during division\n @return The amount of asset"
            },
            "functionSelector": "94e301e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBorrowAmount",
            "nameLocation": "8648:14:21",
            "parameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "8671:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3479,
                  "src": "8663:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8663:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3467,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "8685:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3479,
                  "src": "8680:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8680:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8662:32:21"
            },
            "returnParameters": {
              "id": 3471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3479,
                  "src": "8742:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8742:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8741:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3496,
            "nodeType": "FunctionDefinition",
            "src": "9069:177:21",
            "body": {
              "id": 3495,
              "nodeType": "Block",
              "src": "9184:62:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3491,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "9221:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3492,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "9230:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3489,
                        "name": "totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4014,
                        "src": "9201:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 3490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9212:8:21",
                      "memberName": "toAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1251,
                      "src": "9201:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$1138_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9201:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3488,
                  "id": 3494,
                  "nodeType": "Return",
                  "src": "9194:45:21"
                }
              ]
            },
            "documentation": {
              "id": 3480,
              "nodeType": "StructuredDocumentation",
              "src": "8824:240:21",
              "text": "@notice The ```toAssetAmount``` function converts a given number of shares to an asset amount\n @param _shares Shares of asset (fToken)\n @param _roundUp Whether to round up after division\n @return The amount of asset"
            },
            "functionSelector": "404ffa7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAssetAmount",
            "nameLocation": "9078:13:21",
            "parameters": {
              "id": 3485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3482,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "9100:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "9092:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9092:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3484,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "9114:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "9109:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9109:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9091:32:21"
            },
            "returnParameters": {
              "id": 3488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "9171:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9171:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9170:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3513,
            "nodeType": "FunctionDefinition",
            "src": "9518:177:21",
            "body": {
              "id": 3512,
              "nodeType": "Block",
              "src": "9633:62:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3508,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3499,
                        "src": "9670:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3509,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3501,
                        "src": "9679:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3506,
                        "name": "totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4014,
                        "src": "9650:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 3507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9661:8:21",
                      "memberName": "toShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1195,
                      "src": "9650:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$1138_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9650:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3505,
                  "id": 3511,
                  "nodeType": "Return",
                  "src": "9643:45:21"
                }
              ]
            },
            "documentation": {
              "id": 3497,
              "nodeType": "StructuredDocumentation",
              "src": "9252:261:21",
              "text": "@notice The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)\n @param _amount The amount of asset\n @param _roundUp Whether to round up after division\n @return The number of shares (fTokens)"
            },
            "functionSelector": "56968f97",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAssetShares",
            "nameLocation": "9527:13:21",
            "parameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9549:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "9541:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9541:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "9563:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "9558:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9558:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9540:32:21"
            },
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "9620:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9620:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9619:9:21"
            },
            "scope": 3906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3520,
            "nodeType": "EventDefinition",
            "src": "10108:60:21",
            "anonymous": false,
            "documentation": {
              "id": 3514,
              "nodeType": "StructuredDocumentation",
              "src": "9933:170:21",
              "text": "@notice The ```SetTimeLock``` event fires when the TIME_LOCK_ADDRESS is set\n @param _oldAddress The original address\n @param _newAddress The new address"
            },
            "eventSelector": "582d6cc2f042c43e00e0dd5c187f575daac294216d2afa075d9e1e27b0a40a94",
            "name": "SetTimeLock",
            "nameLocation": "10114:11:21",
            "parameters": {
              "id": 3519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_oldAddress",
                  "nameLocation": "10134:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "10126:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10126:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "10155:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "10147:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10147:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10125:42:21"
            }
          },
          {
            "id": 3544,
            "nodeType": "FunctionDefinition",
            "src": "10301:225:21",
            "body": {
              "id": 3543,
              "nodeType": "Block",
              "src": "10352:174:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3526,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10366:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10370:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10366:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3528,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "10380:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10366:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3533,
                  "nodeType": "IfStatement",
                  "src": "10362:58:21",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3530,
                        "name": "OnlyTimeLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "10406:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10406:14:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3532,
                    "nodeType": "RevertStatement",
                    "src": "10399:21:21"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3535,
                        "name": "TIME_LOCK_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3981,
                        "src": "10447:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3536,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "10466:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3534,
                      "name": "SetTimeLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "10435:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10435:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "EmitStatement",
                  "src": "10430:48:21"
                },
                {
                  "expression": {
                    "id": 3541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3539,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "10488:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3540,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3523,
                      "src": "10508:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10488:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3542,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:31:21"
                }
              ]
            },
            "documentation": {
              "id": 3521,
              "nodeType": "StructuredDocumentation",
              "src": "10174:122:21",
              "text": "@notice The ```setTimeLock``` function sets the TIME_LOCK address\n @param _newAddress the new time lock address"
            },
            "functionSelector": "891682d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTimeLock",
            "nameLocation": "10310:11:21",
            "parameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "10330:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "10322:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10322:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10321:21:21"
            },
            "returnParameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10352:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3549,
            "nodeType": "EventDefinition",
            "src": "10639:32:21",
            "anonymous": false,
            "documentation": {
              "id": 3545,
              "nodeType": "StructuredDocumentation",
              "src": "10532:102:21",
              "text": "@notice The ```ChangeFee``` event first when the fee is changed\n @param _newFee The new fee"
            },
            "eventSelector": "58a58c712558f3d6e20bed57421eb8f73048d881dea9e5bb80efb37c49680d1c",
            "name": "ChangeFee",
            "nameLocation": "10645:9:21",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newFee",
                  "nameLocation": "10662:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3549,
                  "src": "10655:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10655:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10654:16:21"
            }
          },
          {
            "id": 3587,
            "nodeType": "FunctionDefinition",
            "src": "10791:332:21",
            "body": {
              "id": 3586,
              "nodeType": "Block",
              "src": "10849:274:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3557,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10863:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10867:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10863:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3559,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "10877:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10863:31:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3564,
                  "nodeType": "IfStatement",
                  "src": "10859:58:21",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3561,
                        "name": "OnlyTimeLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "10903:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10903:14:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3563,
                    "nodeType": "RevertStatement",
                    "src": "10896:21:21"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3565,
                      "name": "_newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "10931:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3566,
                      "name": "MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "10941:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10931:26:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3572,
                  "nodeType": "IfStatement",
                  "src": "10927:80:21",
                  "trueBody": {
                    "id": 3571,
                    "nodeType": "Block",
                    "src": "10959:48:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3568,
                            "name": "BadProtocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "10980:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10980:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3570,
                        "nodeType": "RevertStatement",
                        "src": "10973:23:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3573,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "11016:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11016:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 3575,
                  "nodeType": "ExpressionStatement",
                  "src": "11016:14:21"
                },
                {
                  "expression": {
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3576,
                        "name": "currentRateInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "11040:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentRateInfo_$4002_storage",
                          "typeString": "struct MugenLendPairCore.CurrentRateInfo storage ref"
                        }
                      },
                      "id": 3578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11056:17:21",
                      "memberName": "feeToProtocolRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3997,
                      "src": "11040:33:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3579,
                      "name": "_newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "11076:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11040:43:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 3581,
                  "nodeType": "ExpressionStatement",
                  "src": "11040:43:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3583,
                        "name": "_newFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "11108:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 3582,
                      "name": "ChangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3549,
                      "src": "11098:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 3584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11098:18:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3585,
                  "nodeType": "EmitStatement",
                  "src": "11093:23:21"
                }
              ]
            },
            "documentation": {
              "id": 3550,
              "nodeType": "StructuredDocumentation",
              "src": "10677:109:21",
              "text": "@notice The ```changeFee``` function changes the protocol fee, max 50%\n @param _newFee The new fee"
            },
            "functionSelector": "8142dd53",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3555,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3554,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "10835:13:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1403,
                  "src": "10835:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "10835:13:21"
              }
            ],
            "name": "changeFee",
            "nameLocation": "10800:9:21",
            "parameters": {
              "id": 3553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "_newFee",
                  "nameLocation": "10817:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3587,
                  "src": "10810:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3551,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10810:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10809:16:21"
            },
            "returnParameters": {
              "id": 3556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10849:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3596,
            "nodeType": "EventDefinition",
            "src": "11384:113:21",
            "anonymous": false,
            "documentation": {
              "id": 3588,
              "nodeType": "StructuredDocumentation",
              "src": "11129:250:21",
              "text": "@notice The ```WithdrawFees``` event fires when the fees are withdrawn\n @param _shares Number of _shares (fTokens) redeemed\n @param _recipient To whom the assets were sent\n @param _amountToTransfer The amount of fees redeemed"
            },
            "eventSelector": "14f6e172cd596e9f9c5d24e2d4010daa24f8f65f9274b259b66517b306c617b9",
            "name": "WithdrawFees",
            "nameLocation": "11390:12:21",
            "parameters": {
              "id": 3595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3590,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "11420:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3596,
                  "src": "11412:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3589,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11412:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "11445:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3596,
                  "src": "11437:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11437:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountToTransfer",
                  "nameLocation": "11473:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3596,
                  "src": "11465:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11465:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11402:94:21"
            }
          },
          {
            "id": 3700,
            "nodeType": "FunctionDefinition",
            "src": "11751:1410:21",
            "body": {
              "id": 3699,
              "nodeType": "Block",
              "src": "11893:1268:21",
              "statements": [
                {
                  "assignments": [
                    3610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3610,
                      "mutability": "mutable",
                      "name": "_totalAsset",
                      "nameLocation": "11972:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "11952:31:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 3609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3608,
                          "name": "VaultAccount",
                          "nameLocations": [
                            "11952:12:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1138,
                          "src": "11952:12:21"
                        },
                        "referencedDeclaration": 1138,
                        "src": "11952:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3612,
                  "initialValue": {
                    "id": 3611,
                    "name": "totalAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4014,
                    "src": "11986:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11952:44:21"
                },
                {
                  "assignments": [
                    3615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3615,
                      "mutability": "mutable",
                      "name": "_totalBorrow",
                      "nameLocation": "12026:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "12006:32:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 3614,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3613,
                          "name": "VaultAccount",
                          "nameLocations": [
                            "12006:12:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1138,
                          "src": "12006:12:21"
                        },
                        "referencedDeclaration": 1138,
                        "src": "12006:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3617,
                  "initialValue": {
                    "id": 3616,
                    "name": "totalBorrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4017,
                    "src": "12041:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12006:46:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3618,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "12115:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12126:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12115:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3633,
                  "nodeType": "IfStatement",
                  "src": "12111:61:21",
                  "trueBody": {
                    "expression": {
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3621,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "12129:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3627,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12165:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MugenLendPair_$3906",
                                      "typeString": "contract MugenLendPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MugenLendPair_$3906",
                                      "typeString": "contract MugenLendPair"
                                    }
                                  ],
                                  "id": 3626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12157:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3625,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12157:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12157:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3624,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8534,
                              "src": "12147:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 3629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12147:24:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12139:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 3622,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "12139:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12139:33:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "12129:43:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 3632,
                    "nodeType": "ExpressionStatement",
                    "src": "12129:43:21"
                  }
                },
                {
                  "expression": {
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3634,
                      "name": "_amountToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3606,
                      "src": "12269:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3637,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3599,
                          "src": "12310:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 3638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12319:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 3635,
                          "name": "_totalAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3610,
                          "src": "12289:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                            "typeString": "struct VaultAccount memory"
                          }
                        },
                        "id": 3636,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12301:8:21",
                        "memberName": "toAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1251,
                        "src": "12289:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$1138_memory_ptr_$",
                          "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                        }
                      },
                      "id": 3639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12289:35:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12269:55:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3641,
                  "nodeType": "ExpressionStatement",
                  "src": "12269:55:21"
                },
                {
                  "assignments": [
                    3643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3643,
                      "mutability": "mutable",
                      "name": "_assetsAvailable",
                      "nameLocation": "12394:16:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "12386:24:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3642,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12386:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3648,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3645,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "12447:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      {
                        "id": 3646,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "12472:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      ],
                      "id": 3644,
                      "name": "_totalAssetAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4403,
                      "src": "12413:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$1138_memory_ptr_$_t_struct$_VaultAccount_$1138_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct VaultAccount memory,struct VaultAccount memory) pure returns (uint256)"
                      }
                    },
                    "id": 3647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:81:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12386:108:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3649,
                      "name": "_assetsAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3643,
                      "src": "12508:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3650,
                      "name": "_amountToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3606,
                      "src": "12527:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12508:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3658,
                  "nodeType": "IfStatement",
                  "src": "12504:185:21",
                  "trueBody": {
                    "id": 3657,
                    "nodeType": "Block",
                    "src": "12546:143:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 3653,
                              "name": "_assetsAvailable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "12613:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3654,
                              "name": "_amountToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3606,
                              "src": "12647:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3652,
                            "name": "InsufficientAssetsInContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "12567:28:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 3655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12567:111:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3656,
                        "nodeType": "RevertStatement",
                        "src": "12560:118:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3659,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "12731:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12743:6:21",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "12731:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3664,
                          "name": "_amountToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3606,
                          "src": "12761:17:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12753:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 3662,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "12753:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12753:26:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12731:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3667,
                  "nodeType": "ExpressionStatement",
                  "src": "12731:48:21"
                },
                {
                  "expression": {
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3668,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "12789:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 3670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12801:6:21",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1137,
                      "src": "12789:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3671,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "12811:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12789:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3673,
                  "nodeType": "ExpressionStatement",
                  "src": "12789:29:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3677,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12946:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenLendPair_$3906",
                              "typeString": "contract MugenLendPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenLendPair_$3906",
                              "typeString": "contract MugenLendPair"
                            }
                          ],
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12938:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12938:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12938:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3679,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "12953:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 3674,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8911,
                      "src": "12932:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12932:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3681,
                  "nodeType": "ExpressionStatement",
                  "src": "12932:29:21"
                },
                {
                  "expression": {
                    "id": 3684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3682,
                      "name": "totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4014,
                      "src": "12971:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                        "typeString": "struct VaultAccount storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3683,
                      "name": "_totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3610,
                      "src": "12984:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$1138_memory_ptr",
                        "typeString": "struct VaultAccount memory"
                      }
                    },
                    "src": "12971:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$1138_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "id": 3685,
                  "nodeType": "ExpressionStatement",
                  "src": "12971:24:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3689,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3601,
                        "src": "13057:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3690,
                        "name": "_amountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "13069:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3686,
                        "name": "assetContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3949,
                        "src": "13030:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13044:12:21",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1108,
                      "src": "13030:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8107_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8107_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3692,
                  "nodeType": "ExpressionStatement",
                  "src": "13030:57:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3694,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "13115:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 3695,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3601,
                        "src": "13124:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3696,
                        "name": "_amountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "13136:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3693,
                      "name": "WithdrawFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3596,
                      "src": "13102:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint128,address,uint256)"
                      }
                    },
                    "id": 3697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13102:52:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3698,
                  "nodeType": "EmitStatement",
                  "src": "13097:57:21"
                }
              ]
            },
            "documentation": {
              "id": 3597,
              "nodeType": "StructuredDocumentation",
              "src": "11503:243:21",
              "text": "@notice The ```withdrawFees``` function withdraws fees accumulated\n @param _shares Number of fTokens to redeem\n @param _recipient Address to send the assets\n @return _amountToTransfer Amount of assets sent to recipient"
            },
            "functionSelector": "daf33f2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3603,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11835:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1284,
                  "src": "11835:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "11835:9:21"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "11760:12:21",
            "parameters": {
              "id": 3602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3599,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "11781:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3700,
                  "src": "11773:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11773:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3601,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "11798:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3700,
                  "src": "11790:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11790:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11772:37:21"
            },
            "returnParameters": {
              "id": 3607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3606,
                  "mutability": "mutable",
                  "name": "_amountToTransfer",
                  "nameLocation": "11870:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3700,
                  "src": "11862:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11862:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11861:27:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3707,
            "nodeType": "EventDefinition",
            "src": "13341:51:21",
            "anonymous": false,
            "documentation": {
              "id": 3701,
              "nodeType": "StructuredDocumentation",
              "src": "13167:169:21",
              "text": "@notice The ```SetSwapper``` event fires whenever a swapper is black or whitelisted\n @param _swapper The swapper address\n @param _approval The approval"
            },
            "eventSelector": "ea1eefb4fd58778d7b274fe54045a9feeec8f2847899c2e71126d3a74d486da5",
            "name": "SetSwapper",
            "nameLocation": "13347:10:21",
            "parameters": {
              "id": 3706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3703,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapper",
                  "nameLocation": "13366:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3707,
                  "src": "13358:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13358:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3705,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "13381:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3707,
                  "src": "13376:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13376:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13357:34:21"
            }
          },
          {
            "id": 3729,
            "nodeType": "FunctionDefinition",
            "src": "13595:166:21",
            "body": {
              "id": 3728,
              "nodeType": "Block",
              "src": "13668:93:21",
              "statements": [
                {
                  "expression": {
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3717,
                        "name": "swappers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3973,
                        "src": "13678:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3719,
                      "indexExpression": {
                        "id": 3718,
                        "name": "_swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3710,
                        "src": "13687:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13678:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3720,
                      "name": "_approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3712,
                      "src": "13699:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13678:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3722,
                  "nodeType": "ExpressionStatement",
                  "src": "13678:30:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3724,
                        "name": "_swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3710,
                        "src": "13734:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3725,
                        "name": "_approval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3712,
                        "src": "13744:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3723,
                      "name": "SetSwapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3707,
                      "src": "13723:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13723:31:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3727,
                  "nodeType": "EmitStatement",
                  "src": "13718:36:21"
                }
              ]
            },
            "documentation": {
              "id": 3708,
              "nodeType": "StructuredDocumentation",
              "src": "13398:192:21",
              "text": "@notice The ```setSwapper``` function is called to black or whitelist a given swapper address\n @dev\n @param _swapper The swapper address\n @param _approval The approval"
            },
            "functionSelector": "3f2617cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3714,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13658:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1284,
                  "src": "13658:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "13658:9:21"
              }
            ],
            "name": "setSwapper",
            "nameLocation": "13604:10:21",
            "parameters": {
              "id": 3713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3710,
                  "mutability": "mutable",
                  "name": "_swapper",
                  "nameLocation": "13623:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3729,
                  "src": "13615:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13615:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3712,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "13638:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3729,
                  "src": "13633:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3711,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13633:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13614:34:21"
            },
            "returnParameters": {
              "id": 3716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13668:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3736,
            "nodeType": "EventDefinition",
            "src": "13935:66:21",
            "anonymous": false,
            "documentation": {
              "id": 3730,
              "nodeType": "StructuredDocumentation",
              "src": "13767:163:21",
              "text": "@notice The ```SetApprovedLender``` event fires when a lender is black or whitelisted\n @param _address The address\n @param _approval The approval"
            },
            "eventSelector": "3bb51c63bf139c4bc98211d74c51aafae8b743fd3090bee8b6bfe2026678a250",
            "name": "SetApprovedLender",
            "nameLocation": "13941:17:21",
            "parameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3732,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13975:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "13959:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13959:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "13990:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "13985:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13985:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13958:42:21"
            }
          },
          {
            "id": 3788,
            "nodeType": "FunctionDefinition",
            "src": "14252:472:21",
            "body": {
              "id": 3787,
              "nodeType": "Block",
              "src": "14381:343:21",
              "statements": [
                {
                  "body": {
                    "id": 3785,
                    "nodeType": "Block",
                    "src": "14437:281:21",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3760,
                            "name": "_approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3742,
                            "src": "14531:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3761,
                                "name": "_lenders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3740,
                                "src": "14544:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 3763,
                              "indexExpression": {
                                "id": 3762,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3750,
                                "src": "14553:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14544:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 3764,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14559:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14563:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14559:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14544:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14531:38:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3784,
                        "nodeType": "IfStatement",
                        "src": "14527:181:21",
                        "trueBody": {
                          "id": 3783,
                          "nodeType": "Block",
                          "src": "14571:137:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3768,
                                    "name": "approvedLenders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4041,
                                    "src": "14589:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3772,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3769,
                                      "name": "_lenders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3740,
                                      "src": "14605:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3771,
                                    "indexExpression": {
                                      "id": 3770,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3750,
                                      "src": "14614:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14605:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14589:28:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3773,
                                  "name": "_approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3742,
                                  "src": "14620:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14589:40:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3775,
                              "nodeType": "ExpressionStatement",
                              "src": "14589:40:21"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3777,
                                      "name": "_lenders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3740,
                                      "src": "14670:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3779,
                                    "indexExpression": {
                                      "id": 3778,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3750,
                                      "src": "14679:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14670:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3780,
                                    "name": "_approval",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3742,
                                    "src": "14683:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 3776,
                                  "name": "SetApprovedLender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3736,
                                  "src": "14652:17:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 3781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14652:41:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3782,
                              "nodeType": "EmitStatement",
                              "src": "14647:46:21"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3753,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3750,
                      "src": "14411:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3754,
                        "name": "_lenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "14415:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14424:6:21",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14415:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14411:19:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3786,
                  "initializationExpression": {
                    "assignments": [
                      3750
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3750,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14404:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3786,
                        "src": "14396:9:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14396:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3752,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14408:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14396:13:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14432:3:21",
                      "subExpression": {
                        "id": 3757,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3750,
                        "src": "14432:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3759,
                    "nodeType": "ExpressionStatement",
                    "src": "14432:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "14391:327:21"
                }
              ]
            },
            "documentation": {
              "id": 3737,
              "nodeType": "StructuredDocumentation",
              "src": "14007:240:21",
              "text": "@notice The ```setApprovedLenders``` function sets a given set of addresses to the whitelist\n @dev Cannot black list self\n @param _lenders The addresses who's status will be set\n @param _approval The approval status"
            },
            "functionSelector": "3cc32aba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3745,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "14365:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14369:6:21",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "14365:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3747,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3744,
                  "name": "approvedLender",
                  "nameLocations": [
                    "14350:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4555,
                  "src": "14350:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "14350:26:21"
              }
            ],
            "name": "setApprovedLenders",
            "nameLocation": "14261:18:21",
            "parameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3740,
                  "mutability": "mutable",
                  "name": "_lenders",
                  "nameLocation": "14299:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "14280:27:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3738,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14280:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3739,
                    "nodeType": "ArrayTypeName",
                    "src": "14280:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3742,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "14314:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "14309:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14309:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14279:45:21"
            },
            "returnParameters": {
              "id": 3748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14381:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3795,
            "nodeType": "EventDefinition",
            "src": "14902:68:21",
            "anonymous": false,
            "documentation": {
              "id": 3789,
              "nodeType": "StructuredDocumentation",
              "src": "14730:167:21",
              "text": "@notice The ```SetApprovedBorrower``` event fires when a borrower is black or whitelisted\n @param _address The address\n @param _approval The approval"
            },
            "eventSelector": "9c798cce2c4fdbec95a1a6dbba64db726912274dac938f44e36bce9b779cfee8",
            "name": "SetApprovedBorrower",
            "nameLocation": "14908:19:21",
            "parameters": {
              "id": 3794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3791,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "14944:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3795,
                  "src": "14928:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14928:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3793,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "14959:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3795,
                  "src": "14954:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14954:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14927:42:21"
            }
          },
          {
            "id": 3845,
            "nodeType": "FunctionDefinition",
            "src": "15227:480:21",
            "body": {
              "id": 3844,
              "nodeType": "Block",
              "src": "15350:357:21",
              "statements": [
                {
                  "body": {
                    "id": 3842,
                    "nodeType": "Block",
                    "src": "15408:293:21",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3817,
                            "name": "_approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3801,
                            "src": "15504:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3818,
                                "name": "_borrowers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3799,
                                "src": "15517:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 3820,
                              "indexExpression": {
                                "id": 3819,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3807,
                                "src": "15528:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15517:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 3821,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15534:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15538:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15534:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15517:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15504:40:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3841,
                        "nodeType": "IfStatement",
                        "src": "15500:191:21",
                        "trueBody": {
                          "id": 3840,
                          "nodeType": "Block",
                          "src": "15546:145:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3825,
                                    "name": "approvedBorrowers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4035,
                                    "src": "15564:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 3829,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 3826,
                                      "name": "_borrowers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3799,
                                      "src": "15582:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3828,
                                    "indexExpression": {
                                      "id": 3827,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3807,
                                      "src": "15593:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15582:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15564:32:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3830,
                                  "name": "_approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3801,
                                  "src": "15599:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "15564:44:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3832,
                              "nodeType": "ExpressionStatement",
                              "src": "15564:44:21"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3834,
                                      "name": "_borrowers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3799,
                                      "src": "15651:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3836,
                                    "indexExpression": {
                                      "id": 3835,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3807,
                                      "src": "15662:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15651:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3837,
                                    "name": "_approval",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3801,
                                    "src": "15666:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 3833,
                                  "name": "SetApprovedBorrower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3795,
                                  "src": "15631:19:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 3838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15631:45:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3839,
                              "nodeType": "EmitStatement",
                              "src": "15626:50:21"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3810,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3807,
                      "src": "15380:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3811,
                        "name": "_borrowers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3799,
                        "src": "15384:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15395:6:21",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15384:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15380:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3843,
                  "initializationExpression": {
                    "assignments": [
                      3807
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3807,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15373:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3843,
                        "src": "15365:9:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15365:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3809,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15377:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15365:13:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15403:3:21",
                      "subExpression": {
                        "id": 3814,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3807,
                        "src": "15403:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3816,
                    "nodeType": "ExpressionStatement",
                    "src": "15403:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "15360:341:21"
                }
              ]
            },
            "documentation": {
              "id": 3796,
              "nodeType": "StructuredDocumentation",
              "src": "14976:246:21",
              "text": "@notice The ```setApprovedBorrowers``` function sets a given array of addresses to the whitelist\n @dev Cannot black list self\n @param _borrowers The addresses who's status will be set\n @param _approval The approval status"
            },
            "functionSelector": "b054898b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3803,
                  "name": "approvedBorrower",
                  "nameLocations": [
                    "15329:16:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4530,
                  "src": "15329:16:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "15329:16:21"
              }
            ],
            "name": "setApprovedBorrowers",
            "nameLocation": "15236:20:21",
            "parameters": {
              "id": 3802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3799,
                  "mutability": "mutable",
                  "name": "_borrowers",
                  "nameLocation": "15276:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "15257:29:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3797,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15257:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3798,
                    "nodeType": "ArrayTypeName",
                    "src": "15257:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3801,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "15293:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "15288:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3800,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15288:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15256:47:21"
            },
            "returnParameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15350:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3880,
            "nodeType": "FunctionDefinition",
            "src": "15713:406:21",
            "body": {
              "id": 3879,
              "nodeType": "Block",
              "src": "15739:380:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3848,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15766:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15770:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15766:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3850,
                            "name": "CIRCUIT_BREAKER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3977,
                            "src": "15780:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15766:37:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3852,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15819:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15823:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15819:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3854,
                            "name": "COMPTROLLER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3979,
                            "src": "15833:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15819:33:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15766:86:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15868:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15872:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15868:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3859,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "15882:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15882:7:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15868:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "15766:123:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15905:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15909:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15905:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 3865,
                        "name": "DEPLOYER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3975,
                        "src": "15919:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "15905:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15766:169:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3872,
                  "nodeType": "IfStatement",
                  "src": "15749:250:21",
                  "trueBody": {
                    "id": 3871,
                    "nodeType": "Block",
                    "src": "15946:53:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3868,
                            "name": "ProtocolOrOwnerOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "15967:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15967:21:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3870,
                        "nodeType": "RevertStatement",
                        "src": "15960:28:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3873,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "16008:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16008:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "16008:14:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3876,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1459,
                      "src": "16104:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16104:8:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3878,
                  "nodeType": "ExpressionStatement",
                  "src": "16104:8:21"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "15722:5:21",
            "parameters": {
              "id": 3846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15727:2:21"
            },
            "returnParameters": {
              "id": 3847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15739:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3905,
            "nodeType": "FunctionDefinition",
            "src": "16125:308:21",
            "body": {
              "id": 3904,
              "nodeType": "Block",
              "src": "16153:280:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3883,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16167:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16171:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16167:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 3885,
                        "name": "COMPTROLLER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3979,
                        "src": "16181:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16167:33:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16204:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16208:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16204:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3889,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "16218:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16218:7:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16204:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16167:58:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3897,
                  "nodeType": "IfStatement",
                  "src": "16163:117:21",
                  "trueBody": {
                    "id": 3896,
                    "nodeType": "Block",
                    "src": "16227:53:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3893,
                            "name": "ProtocolOrOwnerOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "16248:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16248:21:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3895,
                        "nodeType": "RevertStatement",
                        "src": "16241:28:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3898,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "16392:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16392:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 3900,
                  "nodeType": "ExpressionStatement",
                  "src": "16392:14:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3901,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "16416:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16416:10:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3903,
                  "nodeType": "ExpressionStatement",
                  "src": "16416:10:21"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "16134:7:21",
            "parameters": {
              "id": 3881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16141:2:21"
            },
            "returnParameters": {
              "id": 3882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16153:0:21"
            },
            "scope": 3906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3086,
              "name": "IERC20Metadata",
              "nameLocations": [
                "809:14:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8132,
              "src": "809:14:21"
            },
            "id": 3087,
            "nodeType": "InheritanceSpecifier",
            "src": "809:14:21"
          },
          {
            "baseName": {
              "id": 3088,
              "name": "MugenLendPairCore",
              "nameLocations": [
                "825:17:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6446,
              "src": "825:17:21"
            },
            "id": 3089,
            "nodeType": "InheritanceSpecifier",
            "src": "825:17:21"
          }
        ],
        "canonicalName": "MugenLendPair",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3906,
          6446,
          1530,
          1476,
          1365,
          9022,
          8132,
          8107,
          8435,
          138
        ],
        "name": "MugenLendPair",
        "nameLocation": "792:13:21",
        "scope": 3907,
        "usedErrors": [
          79,
          81,
          83,
          85,
          87,
          89,
          93,
          99,
          103,
          105,
          107,
          109,
          115,
          117,
          123,
          125,
          127,
          129,
          131,
          137
        ]
      }
    ],
    "license": "ISC"
  },
  "id": 21
}