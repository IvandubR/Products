{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_configData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_immutables",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_maxLTV",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penaltyRate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isBorrowerWhitelistActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isLenderWhitelistActive",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadProtocolFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadSwapper",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowerSolvent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowerWhitelistRequired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_borrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        }
      ],
      "name": "Insolvent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_request",
          "type": "uint256"
        }
      ],
      "name": "InsufficientAssetsInContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_expected",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_actual",
          "type": "address"
        }
      ],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotDeployer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "NotOnWhitelist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyApprovedBorrowers",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyApprovedLenders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyTimeLock",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "OracleLTEZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "PastDeadline",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PastMaturity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolOrOwnerOnly",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_actual",
          "type": "uint256"
        }
      ],
      "name": "SlippageTooHigh",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "AddCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_interestEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_deltaTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_feesAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_feesShare",
          "type": "uint256"
        }
      ],
      "name": "AddInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesAdded",
          "type": "uint256"
        }
      ],
      "name": "BorrowAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "_newFee",
          "type": "uint32"
        }
      ],
      "name": "ChangeFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralForLiquidator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesToLiquidate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountLiquidatorToRepay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_sharesToAdjust",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToAdjust",
          "type": "uint256"
        }
      ],
      "name": "Liquidate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "RemoveCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_payer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToRepay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "RepayAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "SetApprovedLender",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "SetSwapper",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "SetTimeLock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "UpdateExchangeRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ratePerSec",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_deltaTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_utilizationRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newRatePerSec",
          "type": "uint256"
        }
      ],
      "name": "UpdateRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "_shares",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToTransfer",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFees",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CIRCUIT_BREAKER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMPTROLLER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEPLOYER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FRAXLEND_WHITELIST_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIME_LOCK_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_interestEarned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feesAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feesShare",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_newRate",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedBorrowers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedLenders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "borrowAsset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowerWhitelistActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_newFee",
          "type": "uint32"
        }
      ],
      "name": "changeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cleanLiquidationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRateInfo",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "lastBlock",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "feeToProtocolRate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "lastTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "ratePerSec",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_sharesReceived",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dirtyLiquidationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "lastTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint224",
          "name": "exchangeRate",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConstants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_LTV_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_LIQ_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_UTIL_PREC",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_FEE_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_EXCHANGE_PRECISION",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_DEFAULT_INT",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "_DEFAULT_PROTOCOL_FEE",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_MAX_PROTOCOL_FEE",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImmutableAddressBool",
      "outputs": [
        {
          "internalType": "address",
          "name": "_assetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleMultiply",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleDivide",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rateContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_DEPLOYER_CONTRACT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_COMPTROLLER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_MugenLending_WHITELIST",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_borrowerWhitelistActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_lenderWhitelistActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImmutableUint256",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_oracleNormalization",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxLTV",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cleanLiquidationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_penaltyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPairAccounting",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "_totalAssetAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalAssetShares",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalBorrowAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_totalBorrowShares",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "_totalCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_userAssetShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userBorrowShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCollateralBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_approvedBorrowers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_approvedLenders",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_rateInitCallData",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lenderWhitelistActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_sharesToLiquidate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_collateralForLiquidator",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLTV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDivide",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleMultiply",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleNormalization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rateContract",
      "outputs": [
        {
          "internalType": "contract IRateCalculator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rateInitCallData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToReturn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "removeCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "repayAsset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToRepay",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapper",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "setSwapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "setTimeLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swappers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toAssetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toAssetShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toBorrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_roundUp",
          "type": "bool"
        }
      ],
      "name": "toBorrowShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAsset",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "shares",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrow",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "shares",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBorrowShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_shares",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountToTransfer",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1347:31:16:-:0;1026:13963:17;1347:31:16;;1026:13963:17;1347:31:16;;;-1:-1:-1;;;1347:31:16;;;;;;;;:::i;:::-;;1178:616:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:7;;;;;;;;;-1:-1:-1;1976:113:7;;;;;;;;;;;;;;996:15:5;;-1:-1:-1;;996:15:5;;;;-1:-1:-1;1806:22:6;;1501:11:17;;1526;;1551:7;;1572:15;;1601:13;;1628:12;;1654:26;;1694:24;;1976:113:7;936:32:2;719:10:13;936:18:2;:32::i;:::-;2042:5:7;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:7;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;6400:23:16;6441:27;6486:24;6528:33;6589:11;6578:61;;;;;;;;;;;;:::i;:::-;6382:257;;;;;;;;6706:10;-1:-1:-1;;;;;6687:29:16;;;-1:-1:-1;;;;;6687:29:16;;;;;6756:15;-1:-1:-1;;;;;6730:41:16;;;-1:-1:-1;;;;;6730:41:16;;;;;6807:19;-1:-1:-1;;;;;6785:41:16;;;-1:-1:-1;;;;;6785:41:16;;;;;6860:16;6840:17;;:36;;;;;-1:-1:-1;;;;;6840:36:16;;;;;-1:-1:-1;;;;;6840:36:16;;;;;;6919:25;-1:-1:-1;;;;;6890:54:16;;;-1:-1:-1;;;;;6890:54:16;;;;;6368:587;;;;6997:14;7029:19;7066:23;7107:21;7146:28;7192:21;7264:11;7232:334;;;;;;;;;;;;:::i;:::-;6979:587;;;;;;;;;;;;;7633:6;-1:-1:-1;;;;;7610:30:16;;;-1:-1:-1;;;;;7610:30:16;;;;;7682:11;-1:-1:-1;;;;;7654:40:16;;;-1:-1:-1;;;;;7654:40:16;;;;;1970:1:15;7708:56:16;;:15;:33;;;:56;;;;;-1:-1:-1;;;;;7708:56:16;;;;;-1:-1:-1;;;;;7708:56:16;;;;;;7800:15;7778:37;;;;;;1601:3:15;7852:15:16;7870:5;7852:23;;;;:::i;:::-;7851:41;;;;:::i;:::-;7829:63;;1536:3:15;7931:24:16;;;;;:55;;;7960:26;7959:27;7931:55;7927:111;;;8011:27;;-1:-1:-1;;;8011:27:16;;;;;;;;;;;7927:111;8052:16;;;;8224:26;;-1:-1:-1;;;;;8374:29:16;;;;;;:113;;-1:-1:-1;8428:59:16;;-1:-1:-1;;;8428:59:16;;-1:-1:-1;;;;;7052:32:22;;;8428:59:16;;;7034:51:22;8428:42:16;;;;;7007:18:22;;8428:59:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8427:60;8374:113;8349:236;;;8535:31;;-1:-1:-1;;;8535:31:16;;-1:-1:-1;;;;;7052:32:22;;8535:31:16;;;7034:51:22;7007:18;;8535:31:16;;;;;;;;8349:236;-1:-1:-1;;;;;8628:27:16;;;;;;:109;;-1:-1:-1;8680:57:16;;-1:-1:-1;;;8680:57:16;;-1:-1:-1;;;;;7052:32:22;;;8680:57:16;;;7034:51:22;8680:42:16;;;;;7007:18:22;;8680:57:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8679:58;8628:109;8603:230;;;8785:29;;-1:-1:-1;;;8785:29:16;;-1:-1:-1;;;;;7052:32:22;;8785:29:16;;;7034:51:22;7007:18;;8785:29:16;6888:203:22;8603:230:16;-1:-1:-1;;;;;8898:32:16;;;;;8948:28;;;;;8994:42;;;;9093:55;;-1:-1:-1;;;9093:55:16;;7052:32:22;;;9093:55:16;;;7034:51:22;9093:40:16;;;;;;7007:18:22;;9093:55:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9088:139;;9179:29;;-1:-1:-1;;;9179:29:16;;-1:-1:-1;;;;;7052:32:22;;9179:29:16;;;7034:51:22;7007:18;;9179:29:16;6888:203:22;9088:139:16;-1:-1:-1;;;;;;9255:45:16;;;-1:-1:-1;;;;9365:52:16;;;;;9477:48;;;;-1:-1:-1;9589:28:16;;;;;9627:26;;-1:-1:-1;1026:13963:17;;-1:-1:-1;;;;;;;;;;;1026:13963:17;2433:187:2;2525:6;;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:22;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:22;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:22;;;2580:26;2531:89;-1:-1:-1;;1335:1:22;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:22;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:22;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:22;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:22:o;2735:884::-;2788:5;2841:3;2834:4;2826:6;2822:17;2818:27;2808:55;;2859:1;2856;2849:12;2808:55;2882:13;;-1:-1:-1;;;;;2944:10:22;;;2941:36;;;2957:18;;:::i;:::-;3032:2;3026:9;3000:2;3086:13;;-1:-1:-1;;3082:22:22;;;3106:2;3078:31;3074:40;3062:53;;;3130:18;;;3150:22;;;3127:46;3124:72;;;3176:18;;:::i;:::-;3216:10;3212:2;3205:22;3251:2;3243:6;3236:18;3273:4;3263:14;;3318:3;3313:2;3308;3300:6;3296:15;3292:24;3289:33;3286:53;;;3335:1;3332;3325:12;3286:53;3357:1;3348:10;;3367:133;3381:2;3378:1;3375:9;3367:133;;;3469:14;;;3465:23;;3459:30;3438:14;;;3434:23;;3427:63;3392:10;;;;3367:133;;;3518:2;3515:1;3512:9;3509:80;;;3577:1;3572:2;3567;3559:6;3555:15;3551:24;3544:35;3509:80;3607:6;2735:884;-1:-1:-1;;;;;;2735:884:22:o;3624:164::-;3700:13;;3749;;3742:21;3732:32;;3722:60;;3778:1;3775;3768:12;3722:60;3624:164;;;:::o;3793:965::-;3938:6;3946;3954;3962;3970;3978;3986;3994;4047:3;4035:9;4026:7;4022:23;4018:33;4015:53;;;4064:1;4061;4054:12;4015:53;4091:16;;-1:-1:-1;;;;;4156:14:22;;;4153:34;;;4183:1;4180;4173:12;4153:34;4206:60;4258:7;4249:6;4238:9;4234:22;4206:60;:::i;:::-;4196:70;;4312:2;4301:9;4297:18;4291:25;4275:41;;4341:2;4331:8;4328:16;4325:36;;;4357:1;4354;4347:12;4325:36;;4380:62;4434:7;4423:8;4412:9;4408:24;4380:62;:::i;:::-;4370:72;;;4482:2;4471:9;4467:18;4461:25;4451:35;;4526:2;4515:9;4511:18;4505:25;4495:35;;4570:3;4559:9;4555:19;4549:26;4539:36;;4615:3;4604:9;4600:19;4594:26;4584:36;;4639:47;4681:3;4670:9;4666:19;4639:47;:::i;:::-;4629:57;;4705:47;4747:3;4736:9;4732:19;4705:47;:::i;:::-;4695:57;;3793:965;;;;;;;;;;;:::o;4763:185::-;4850:13;;-1:-1:-1;;;;;4892:31:22;;4882:42;;4872:70;;4938:1;4935;4928:12;4953:528;5082:6;5090;5098;5106;5159:3;5147:9;5138:7;5134:23;5130:33;5127:53;;;5176:1;5173;5166:12;5127:53;5199:48;5237:9;5199:48;:::i;:::-;5189:58;;5266:57;5319:2;5308:9;5304:18;5266:57;:::i;:::-;5256:67;;5342:57;5395:2;5384:9;5380:18;5342:57;:::i;:::-;5332:67;;5418:57;5471:2;5460:9;5456:18;5418:57;:::i;:::-;5408:67;;4953:528;;;;;;;:::o;5486:905::-;5659:6;5667;5675;5683;5691;5699;5707;5760:3;5748:9;5739:7;5735:23;5731:33;5728:53;;;5777:1;5774;5767:12;5728:53;5800:48;5838:9;5800:48;:::i;:::-;5790:58;;5867:57;5920:2;5909:9;5905:18;5867:57;:::i;:::-;5857:67;;5943:57;5996:2;5985:9;5981:18;5943:57;:::i;:::-;5933:67;;6019:57;6072:2;6061:9;6057:18;6019:57;:::i;:::-;6009:67;;6116:3;6105:9;6101:19;6095:26;6085:36;;6140:58;6193:3;6182:9;6178:19;6140:58;:::i;:::-;6242:3;6227:19;;6221:26;6130:68;;-1:-1:-1;;;;;;6259:30:22;;6256:50;;;6302:1;6299;6292:12;6256:50;6325:60;6377:7;6368:6;6357:9;6353:22;6325:60;:::i;:::-;6315:70;;;5486:905;;;;;;;;;;:::o;6396:265::-;6436:7;6502:1;6498;6494:6;6490:14;6487:1;6484:21;6479:1;6472:9;6465:17;6461:45;6458:168;;;6548:10;6543:3;6539:20;6536:1;6529:31;6583:4;6580:1;6573:15;6611:4;6608:1;6601:15;6458:168;-1:-1:-1;6646:9:22;;6396:265::o;6666:217::-;6706:1;6732;6722:132;;6776:10;6771:3;6767:20;6764:1;6757:31;6811:4;6808:1;6801:15;6839:4;6836:1;6829:15;6722:132;-1:-1:-1;6868:9:22;;6666:217::o;7096:202::-;7163:6;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;7255:37;7282:9;7255:37;:::i;:::-;7245:47;7096:202;-1:-1:-1;;;7096:202:22:o;:::-;1026:13963:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106104115760003560e01c806394e301e011610220578063c936c62411610130578063e5f13b16116100b8578063f384bd0511610087578063f384bd0514610d36578063f9557ccb14610d5d578063fbaa8b8514610d7b578063fbbbf94c14610da2578063fea10d5d14610de957600080fd5b8063e5f13b1614610cc2578063eee2421914610cd5578063ef14900d14610cfc578063f2fde38b14610d2357600080fd5b8063d41ddc96116100ff578063d41ddc9614610c3b578063d59624b414610c4e578063d6b7494f14610c75578063daf33f2a14610c9c578063dd62ed3e14610caf57600080fd5b8063c936c62414610b70578063cadac47914610b93578063cdd72d5214610ba6578063d2a156e014610c1457600080fd5b8063ad0c3bb5116101b3578063ba08765211610182578063ba08765214610af4578063c10c92a114610b07578063c270a54414610b2e578063c6e1c7c914610b41578063c7be978614610b6857600080fd5b8063ad0c3bb514610a5c578063afa85de614610a83578063b5af306214610aa6578063b68d0a0914610ac657600080fd5b80639a295e73116101ef5780639a295e73146109bf5780639bdff2e614610a0f578063a457c2d714610a36578063a9059cbb14610a4957600080fd5b806394e301e01461092c57806395d14ca81461093f57806395d89b41146109a457806399024fc1146109ac57600080fd5b80634732428c1161032657806370a08231116102ae5780638285ef401161027d5780638285ef401461089f5780638456cb59146108dd578063891682d2146108e55780638cad7fbe146108f85780638da5cb5b1461091b57600080fd5b806370a0823114610848578063715018a614610871578063721b0a47146108795780638142dd531461088c57600080fd5b806354fd4d50116102f557806354fd4d50146107fc57806356968f97146108045780635c975abb14610817578063657a409c146108225780636e553f651461083557600080fd5b80634732428c146107855780634962e494146107ac5780634ac8eb5f146107d35780634fd422df146107dc57600080fd5b806323b872dd116103a95780633950935111610378578063395093511461072f5780633d417d2d146107425780633f2617cb146107555780633f4ba83a1461076a578063404ffa7a1461077257600080fd5b806323b872dd1461053f578063313ce5671461055257806336fad62d1461056157806338d52e0f1461070957600080fd5b80630d09365c116103e55780630d09365c146104a857806311a2e4bc146104d957806318160ddd146105005780632165d72f1461051857600080fd5b806253f7331461041657806302ce728f1461045a57806306fdde0314610470578063095ea7b314610485575b600080fd5b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610462610eb2565b604051908152602001610451565b610478610ed2565b60405161045191906140e0565b61049861049336600461410a565b610f64565b6040519015158152602001610451565b6104b0610f7e565b604080519485526020850193909352918301526001600160401b03166060820152608001610451565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b600f54600160801b90046001600160801b0316610462565b6104987f000000000000000000000000000000000000000000000000000000000000000081565b61049861054d366004614134565b610fab565b60405160128152602001610451565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000008116928201929092527f0000000000000000000000000000000000000000000000000000000000000000821660608201527f0000000000000000000000000000000000000000000000000000000000000000821660808201527f0000000000000000000000000000000000000000000000000000000000000000821660a08201527f0000000000000000000000000000000000000000000000000000000000000000821660c08201527f00000000000000000000000000000000000000000000000000000000000000009190911660e08201527f000000000000000000000000000000000000000000000000000000000000000015156101008201527f0000000000000000000000000000000000000000000000000000000000000000151561012082015261014001610451565b7f000000000000000000000000000000000000000000000000000000000000000061043d565b61049861073d36600461410a565b610fd1565b610462610750366004614170565b610ff3565b6107686107633660046141aa565b611068565b005b6107686110d3565b6104626107803660046141e1565b61114b565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b6104987f000000000000000000000000000000000000000000000000000000000000000081565b61046260115481565b6104626107ea366004614206565b60136020526000908152604090205481565b610478611181565b6104626108123660046141e1565b61120f565b60005460ff16610498565b600b5461043d906001600160a01b031681565b610462610843366004614170565b611245565b610462610856366004614206565b6001600160a01b031660009081526003602052604090205490565b6107686112b7565b610462610887366004614238565b6112c9565b61076861089a366004614274565b6115ec565b6010546108bd906001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610451565b6107686116b7565b6107686108f3366004614206565b611797565b610498610906366004614206565b600a6020526000908152604090205460ff1681565b6002546001600160a01b031661043d565b61046261093a3660046141e1565b61182b565b600d54610971906001600160401b0380821691600160401b8104821691600160801b8204811691600160c01b90041684565b604080516001600160401b0395861681529385166020850152918416918301919091529091166060820152608001610451565b610478611861565b6107686109ba366004614326565b6118ec565b60408051620186a0808252602082018190529181018290526060810191909152670de0b6b3a7640000608082015263096ba6c460a0820152600060c082015261c35060e082015261010001610451565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b610498610a4436600461410a565b611b21565b610498610a5736600461410a565b611ba7565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b610498610a91366004614206565b60156020526000908152604090205460ff1681565b610462610ab4366004614206565b60126020526000908152604090205481565b610ad9610ad4366004614206565b611bb5565b60408051938452602084019290925290820152606001610451565b610462610b023660046143e9565b611c0a565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b610462610b3c3660046141e1565b611c7f565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b610478611cb5565b610498610b7e366004614206565b60146020526000908152604090205460ff1681565b610768610ba1366004614170565b611cc2565b604080518082018252600f546001600160801b03808216808452600160801b928390048216602094850181905285518087018752601054808516808352959004909316928501839052601154865192835294820152938401919091526060830152608082015260a001610451565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b610768610c49366004614170565b611cee565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b610462610caa36600461441c565b611e02565b610462610cbd366004614446565b611fc0565b610462610cd0366004614462565b611feb565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b610768610d31366004614206565b6120ad565b6104627f000000000000000000000000000000000000000000000000000000000000000081565b600f546108bd906001600160801b0380821691600160801b90041682565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b600e54610dc59063ffffffff81169064010000000090046001600160e01b031682565b6040805163ffffffff90931683526001600160e01b03909116602083015201610451565b604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f0000000000000000000000000000000000000000000000000000000000000000608082015260a001610451565b6000610ebc612126565b610ec461217f565b9050610ecf60018055565b90565b6060600c8054610ee19061448e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0d9061448e565b8015610f5a5780601f10610f2f57610100808354040283529160200191610f5a565b820191906000526020600020905b815481529060010190602001808311610f3d57829003601f168201915b5050505050905090565b600033610f728185856124bb565b60019150505b92915050565b600080600080610f8c612126565b610f946125e0565b9350935093509350610fa560018055565b90919293565b600033610fb9858285612b29565b610fc4858585612ba3565b60019150505b9392505050565b600033610f72818585610fe48383611fc0565b610fee91906144de565b6124bb565b6000610ffd612126565b6110056125e0565b5050604080518082019091526010546001600160801b038082168352600160801b909104166020820152915061103f905081856001612d4e565b915061105e8161104e84612dea565b61105787612dea565b3387612e57565b50610f7860018055565b611070612f8d565b6001600160a01b0382166000818152600a6020908152604091829020805460ff19168515159081179091558251938452908301527fea1eefb4fd58778d7b274fe54045a9feeec8f2847899c2e71126d3a74d486da5910160405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061111757506002546001600160a01b03163314155b1561113557604051638f5b12a760e01b815260040160405180910390fd5b61113d6125e0565b50505050611149612fe7565b565b60408051808201909152600f546001600160801b038082168352600160801b909104166020820152600090610fca908484612d4e565b6008805461118e9061448e565b80601f01602080910402602001604051908101604052809291908181526020018280546111ba9061448e565b80156112075780601f106111dc57610100808354040283529160200191611207565b820191906000526020600020905b8154815290600101906020018083116111ea57829003601f168201915b505050505081565b60408051808201909152600f546001600160801b038082168352600160801b909104166020820152600090610fca908484613039565b600061124f612126565b6112576130ae565b61125f6125e0565b505060408051808201909152600f546001600160801b038082168352600160801b9091041660208201529150611299905081856000613039565b915061105e816112a886612dea565b6112b185612dea565b866130f4565b6112bf612f8d565b61114960006131f4565b60006112d36130ae565b6112db612126565b8242111561130a57604051635ba2a8d560e01b8152426004820152602481018490526044015b60405180910390fd5b6113126125e0565b50505050600061132061217f565b905061132c8382613246565b1561134a57604051633af2cafd60e11b815260040160405180910390fd5b6040805180820182526010546001600160801b038082168352600160801b909104166020808301919091526001600160a01b03861660009081526012825283812054601390925292832054919290916113a290612dea565b9050600080670de0b6b3a7640000866113c5876001600160801b038e1685612d4e565b6113cf91906144f6565b6113d99190614515565b90506000620186a061140b7f0000000000000000000000000000000000000000000000000000000000000000826144de565b61141590846144f6565b61141f9190614515565b905061142a8161336c565b6114338661336c565b61143d9190614537565b9250600083131561148f57620186a06114767f0000000000000000000000000000000000000000000000000000000000000000826144de565b61148090846144f6565b61148a9190614515565b611491565b845b9750600091506114b690506114b1866001600160801b038d166001612d4e565b612dea565b905060008060008413611555576114cd8c86614576565b91506001600160801b03821615611555576114f66114b1886001600160801b0385166000612d4e565b9050808760000181815161150a9190614576565b6001600160801b03908116909152600f8054849350909160009161153091859116614576565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b604080518a81526001600160801b038e811660208301528581168284015284811660608301528316608082015290516001600160a01b038c16917f35f432a64bd3767447a456650432406c6cacb885819947a202216eeea6820ecf919081900360a00190a2506115d186836115ca848f61459e565b338d612e57565b6115dc88338b6133d6565b50505050505050610fca60018055565b6115f46130ae565b600b546001600160a01b0316331461161f57604051633b6b86b160e01b815260040160405180910390fd5b61c3508163ffffffff1611156116485760405163da0afa5760e01b815260040160405180910390fd5b6116506125e0565b5050600d80546fffffffffffffffff0000000000000000191663ffffffff8516600160401b8102919091179091556040519081527f58a58c712558f3d6e20bed57421eb8f73048d881dea9e5bb80efb37c49680d1c9250602001905060405180910390a150565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906117195750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b801561173057506002546001600160a01b03163314155b80156117655750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b1561178357604051638f5b12a760e01b815260040160405180910390fd5b61178b6125e0565b505050506111496134bc565b600b546001600160a01b031633146117c257604051633b6b86b160e01b815260040160405180910390fd5b600b54604080516001600160a01b03928316815291831660208301527f582d6cc2f042c43e00e0dd5c187f575daac294216d2afa075d9e1e27b0a40a94910160405180910390a1600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082019091526010546001600160801b038082168352600160801b909104166020820152600090610fca908484612d4e565b60606118957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166134f9565b6118c77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166134f9565b6040516020016118d89291906145c9565b604051602081830303815290604052905090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461193557604051638b906c9760e01b815260040160405180910390fd5b600087900361195757604051631ff3ed9d60e01b815260040160405180910390fd5b600c80546119649061448e565b1590506119835760405162dc149f60e41b815260040160405180910390fd5b600c611990888a83614686565b5060005b85811015611a01576001601460008989858181106119b4576119b4614746565b90506020020160208101906119c99190614206565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556119fa8161475c565b9050611994565b5060005b83811015611a7257600160156000878785818110611a2557611a25614746565b9050602002016020810190611a3a9190614206565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055611a6b8161475c565b9050611a05565b5060405163453f31d560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063453f31d590611ac19085908590600401614775565b60006040518083038186803b158015611ad957600080fd5b505afa158015611aed573d6000803e3d6000fd5b5060099250611b0191508390508483614686565b50611b0a6125e0565b50505050611b1661217f565b505050505050505050565b60003381611b2f8286611fc0565b905083811015611b8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401611301565b611b9c82868684036124bb565b506001949350505050565b600033610f72818585612ba3565b6000806000611bd9846001600160a01b031660009081526003602052604090205490565b6001600160a01b03909416600090815260136020908152604080832054601290925290912054949590949350915050565b6000611c14612126565b611c1c6125e0565b505060408051808201909152600f546001600160801b038082168352600160801b9091041660208201529150611c56905081866000612d4e565b9150611c7581611c6584612dea565b611c6e88612dea565b87876135b4565b50610fca60018055565b604080518082019091526010546001600160801b038082168352600160801b909104166020820152600090610fca908484613039565b6009805461118e9061448e565b611cca612126565b611cd26125e0565b50505050611ce1338383613767565b611cea60018055565b5050565b611cf6612126565b33611cff6125e0565b505033600090815260136020526040902054159150611d24905057611d2261217f565b505b611d2f8383336133d6565b600e54611d4e90829064010000000090046001600160e01b0316613246565b611df8576001600160a01b0381166000908152601360209081526040918290205482518084019093526010546001600160801b038082168552600160801b9091041691830191909152611da391906001612d4e565b6001600160a01b0382166000908152601260205260409081902054600e549151633b49de0f60e21b81526004810193909352602483015264010000000090046001600160e01b03166044820152606401611301565b50611cea60018055565b6000611e0c612f8d565b604080518082018252600f546001600160801b038082168352600160801b91829004811660208085019190915284518086019095526010548083168652929092048116918401919091529091908516600003611e75573060009081526003602052604090205494505b611e8a826001600160801b0387166001612d4e565b92506000611e988383613837565b905083811015611ec5576040516362ddb6d760e11b81526004810182905260248101859052604401611301565b8383600001818151611ed79190614576565b6001600160801b0316905250602083018051879190611ef7908390614576565b6001600160801b03908116909152611f13915030908816613857565b825160208401516001600160801b03908116600160801b02911617600f55611f656001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686613988565b604080516001600160801b03881681526001600160a01b03871660208201529081018590527f14f6e172cd596e9f9c5d24e2d4010daa24f8f65f9274b259b66517b306c617b99060600160405180910390a150505092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6000611ff56130ae565b611ffd612126565b336120066125e0565b5050505061201261217f565b50831561202457612024338533613767565b61203661203086612dea565b84613993565b600e5490925061205890829064010000000090046001600160e01b0316613246565b611c75576001600160a01b0381166000908152601360209081526040918290205482518084019093526010546001600160801b038082168552600160801b9091041691830191909152611da391906001612d4e565b6120b5612f8d565b6001600160a01b03811661211a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611301565b612123816131f4565b50565b6002600154036121785760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611301565b6002600155565b60408051808201909152600e5463ffffffff81168083526401000000009091046001600160e01b03166020830152600091904290036121ca57602001516001600160e01b0316919050565b6ec097ce7bc90715b34b9f10000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156122ed5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d91906147be565b505050915050600081136122df576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611301565b6122e981836144f6565b9150505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156124005760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a091906147be565b505050915050600081136123f2576040516322ad99db60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602401611301565b6123fc8183614515565b9150505b61242a7f000000000000000000000000000000000000000000000000000000000000000082614515565b92506001600160e01b038311156124545760405163057b0e2160e41b815260040160405180910390fd5b6001600160e01b0383166020830181905263ffffffff421680845264010000000090910217600e556040517f4fc1b45960547ee95894b08a284c3c066cf5aca706a7420639c42c3ec2e118a4906124ae9085815260200190565b60405180910390a1505090565b6001600160a01b03831661251d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401611301565b6001600160a01b03821661257e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401611301565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60408051608081018252600d546001600160401b038082168352600160401b820481166020840152600160801b82048116938301849052600160c01b9091041660608201526000918291829182919042900361264157606001519050610fa5565b604080518082018252600f546001600160801b038082168352600160801b918290048116602080850191909152845180860190955260105480831686529290920416908301819052909190158061269a575060005460ff165b156127285760005460ff166126b45763096ba6c460608401525b6001600160401b0342811660408501819052438216808652600d8054602088015160608901518616600160c01b026001600160c01b03600160801b909602959095166001600160801b0391909616600160401b026001600160801b0319909216909317179190911692909217179055612b20565b600083604001516001600160401b031642612743919061480e565b835183519192506000916001600160801b03918216916127679116620186a06144f6565b6127719190614515565b905060008560600151838388600001516001600160401b031643612795919061480e565b604080516001600160401b0390951660208601528401929092526060830152608082015260a00160408051601f1981840301815290829052631b54c1a360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b54c1a39061281b908490600990600401614825565b602060405180830381865afa158015612838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285c91906148c0565b606080880151604080516001600160401b03928316815260208101889052908101869052908316918101919091529097507fc63977c8e2362a31182dc8e89a52252f9836922738e0abcfc0de6924972eafe59060800160405180910390a16001600160401b038088166060880181905242821660408901524390911687528451670de0b6b3a764000091906128fa906001600160801b0316866144f6565b61290491906144f6565b61290e9190614515565b8451909a506001600160801b03906129289082168c6144de565b1115801561294b575084516001600160801b03906129489082168c6144de565b11155b15612a87578984600001818151612962919061459e565b6001600160801b031690525084518a90869061297f90839061459e565b6001600160801b031690525060208601516001600160401b031615612a2a57620186a086602001516001600160401b03168b6129bb91906144f6565b6129c59190614515565b85519099506129de908a906001600160801b031661480e565b60208601516129f6906001600160801b03168b6144f6565b612a009190614515565b97508785602001818151612a14919061459e565b6001600160801b0316905250612a2a3089613b60565b606080870151604080518d81526001600160401b03909216602083015281018590529081018a9052608081018990527f50225349cc7e3814c4fa5fe6baef7a3c4cac55e92c64b1f4a5d1ba55e65dcc829060a00160405180910390a15b505082516020808501516001600160801b03908116600160801b90810293821693909317600f558651600d80548985015160408b015160608c01516001600160401b03908116600160c01b026001600160c01b039282168a0292909216928116600160401b026001600160801b031994909416951694909417919091178416179190911790558451918501518116909202911617601055505b50505090919293565b6000612b358484611fc0565b90506000198114612b9d5781811015612b905760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611301565b612b9d84848484036124bb565b50505050565b6001600160a01b038316612c075760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401611301565b6001600160a01b038216612c695760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401611301565b6001600160a01b03831660009081526003602052604090205481811015612ce15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401611301565b6001600160a01b0380851660008181526003602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612d419086815260200190565b60405180910390a3612b9d565b600083602001516001600160801b0316600003612d6c575081610fca565b602084015184516001600160801b0391821691612d8a9116856144f6565b612d949190614515565b9050818015612dd257508284600001516001600160801b031685602001516001600160801b031683612dc691906144f6565b612dd09190614515565b105b15610fca57612de28160016144de565b949350505050565b60006001600160801b03821115612e535760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401611301565b5090565b8385600001818151612e699190614576565b6001600160801b0316905250602085018051849190612e89908390614576565b6001600160801b039081169091526001600160a01b03831660009081526013602052604081208054928716935091612ec290849061480e565b9091555050845160208601516001600160801b03908116600160801b029116176010556001600160a01b0382163014612f3357612f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683306001600160801b038816613c21565b604080516001600160801b038087168252851660208201526001600160a01b0380841692908516917f9dc1449a0ff0c152e18e8289d865b47acc6e1b76b1ecb239c13d6ee22a9206a7910160405180910390a35050505050565b6002546001600160a01b031633146111495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611301565b612fef613c2d565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b82516000906001600160801b03168103613054575081610fca565b835160208501516001600160801b03918216916130729116856144f6565b61307c9190614515565b9050818015612dd257508284602001516001600160801b031685600001516001600160801b031683612dc691906144f6565b60005460ff16156111495760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401611301565b8284600001818151613106919061459e565b6001600160801b031690525060208401805183919061312690839061459e565b6001600160801b03908116909152613142915082908416613b60565b835160208501516001600160801b03908116600160801b0291811691909117600f5561319e906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690339030908716613c21565b604080516001600160801b038086168252841660208201526001600160a01b0383169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007f000000000000000000000000000000000000000000000000000000000000000060000361327857506001610f78565b6001600160a01b03831660009081526013602090815260408083205481518083019092526010546001600160801b038082168452600160801b90910416928201929092526132c7916001612d4e565b9050806000036132db576001915050610f78565b6001600160a01b0384166000908152601260205260408120549081900361330757600092505050610f78565b600081620186a0670de0b6b3a764000061332188876144f6565b61332b9190614515565b61333591906144f6565b61333f9190614515565b7f000000000000000000000000000000000000000000000000000000000000000010159695505050505050565b60006001600160ff1b03821115612e535760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611301565b6001600160a01b038116600090815260126020526040812080548592906133fe90849061480e565b925050819055508260116000828254613417919061480e565b90915550506001600160a01b0382163014613460576134606001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168385613988565b806001600160a01b0316826001600160a01b0316336001600160a01b03167fbc290bb45104f73cf92115c9603987c3f8fd30c182a13603d8cffa49b5f59952866040516134af91815260200190565b60405180910390a4505050565b6134c46130ae565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861301c3390565b60408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b179052905160609160009182916001600160a01b0386169161354091906148e9565b600060405180830381855afa9150503d806000811461357b576040519150601f19603f3d011682016040523d82523d6000602084013e613580565b606091505b5091509150816135ab57604051806040016040528060038152602001623f3f3f60e81b815250612de2565b612de281613c76565b336001600160a01b038216146135f55760006135d08233611fc0565b905060001981146135f3576135f38233610fee6001600160801b0388168561480e565b505b604080518082019091526010546001600160801b038082168352600160801b90910416602082015260009061362b908790613837565b9050846001600160801b0316811015613669576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611301565b848660000181815161367b9190614576565b6001600160801b031690525060208601805185919061369b908390614576565b6001600160801b03908116909152875160208901518216600160801b0290821617600f556136cd915083908616613857565b61370a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016846001600160801b038816613988565b604080516001600160801b038088168252861660208201526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4505050505050565b6001600160a01b0381166000908152601260205260408120805484929061378f9084906144de565b9250508190555081601160008282546137a891906144de565b90915550506001600160a01b03831630146137f2576137f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085613c21565b806001600160a01b0316836001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f846040516125d391815260200190565b8051825160009161384791614576565b6001600160801b03169392505050565b6001600160a01b0382166138b75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401611301565b6001600160a01b0382166000908152600360205260409020548181101561392b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401611301565b6001600160a01b03831660008181526003602090815260408083208686039055600580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016125d3565b505050565b613983838383613df8565b6040805180820182526010546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600f54808316865292909204169083015260009182906139e89083613837565b9050846001600160801b0316811015613a26576040516362ddb6d760e11b8152600481018290526001600160801b0386166024820152604401611301565b613a3b826001600160801b0387166001613039565b92508482600001818151613a4f919061459e565b6001600160801b0316905250602082018051849190613a6f90839061459e565b6001600160801b0390811690915283516020808601518316600160801b0291909216176010553360009081526013909152604081208054869350909190613ab79084906144de565b90915550506001600160a01b0384163014613b0957613b096001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016856001600160801b038816613988565b604080516001600160801b0387168152602081018590526001600160a01b0386169133917f01348584ec81ac7acd52b7d66d9ade986dd909f3d513881c190fc31c90527efe910160405180910390a3505092915050565b6001600160a01b038216613bb65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401611301565b8060056000828254613bc891906144de565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b612b9d84848484613e5b565b60005460ff166111495760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611301565b60606040825110613c955781806020019051810190610f789190614905565b8151602003613dd45760005b60208160ff16108015613cd65750828160ff1681518110613cc457613cc4614746565b01602001516001600160f81b03191615155b15613ced5780613ce5816149a6565b915050613ca1565b60008160ff166001600160401b03811115613d0a57613d0a614622565b6040519080825280601f01601f191660200182016040528015613d34576020820181803683370190505b509050600091505b60208260ff16108015613d715750838260ff1681518110613d5f57613d5f614746565b01602001516001600160f81b03191615155b15610fca57838260ff1681518110613d8b57613d8b614746565b602001015160f81c60f81b818360ff1681518110613dab57613dab614746565b60200101906001600160f81b031916908160001a90535081613dcc816149a6565b925050613d3c565b50506040805180820190915260038152623f3f3f60e81b602082015290565b919050565b6040516001600160a01b03831660248201526044810182905261398390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613e93565b6040516001600160a01b0380851660248301528316604482015260648101829052612b9d9085906323b872dd60e01b90608401613e24565b6000613ee8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613f659092919063ffffffff16565b8051909150156139835780806020019051810190613f0691906149c5565b6139835760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611301565b6060612de2848460008585600080866001600160a01b03168587604051613f8c91906148e9565b60006040518083038185875af1925050503d8060008114613fc9576040519150601f19603f3d011682016040523d82523d6000602084013e613fce565b606091505b5091509150613fdf87838387613fea565b979650505050505050565b60608315614059578251600003614052576001600160a01b0385163b6140525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611301565b5081612de2565b612de2838381511561406e5781518083602001fd5b8060405162461bcd60e51b815260040161130191906140e0565b60005b838110156140a357818101518382015260200161408b565b83811115612b9d5750506000910152565b600081518084526140cc816020860160208601614088565b601f01601f19169290920160200192915050565b602081526000610fca60208301846140b4565b80356001600160a01b0381168114613df357600080fd5b6000806040838503121561411d57600080fd5b614126836140f3565b946020939093013593505050565b60008060006060848603121561414957600080fd5b614152846140f3565b9250614160602085016140f3565b9150604084013590509250925092565b6000806040838503121561418357600080fd5b82359150614193602084016140f3565b90509250929050565b801515811461212357600080fd5b600080604083850312156141bd57600080fd5b6141c6836140f3565b915060208301356141d68161419c565b809150509250929050565b600080604083850312156141f457600080fd5b8235915060208301356141d68161419c565b60006020828403121561421857600080fd5b610fca826140f3565b80356001600160801b0381168114613df357600080fd5b60008060006060848603121561424d57600080fd5b61425684614221565b92506020840135915061426b604085016140f3565b90509250925092565b60006020828403121561428657600080fd5b813563ffffffff81168114610fca57600080fd5b60008083601f8401126142ac57600080fd5b5081356001600160401b038111156142c357600080fd5b6020830191508360208285010111156142db57600080fd5b9250929050565b60008083601f8401126142f457600080fd5b5081356001600160401b0381111561430b57600080fd5b6020830191508360208260051b85010111156142db57600080fd5b6000806000806000806000806080898b03121561434257600080fd5b88356001600160401b038082111561435957600080fd5b6143658c838d0161429a565b909a50985060208b013591508082111561437e57600080fd5b61438a8c838d016142e2565b909850965060408b01359150808211156143a357600080fd5b6143af8c838d016142e2565b909650945060608b01359150808211156143c857600080fd5b506143d58b828c0161429a565b999c989b5096995094979396929594505050565b6000806000606084860312156143fe57600080fd5b8335925061440e602085016140f3565b915061426b604085016140f3565b6000806040838503121561442f57600080fd5b61443883614221565b9150614193602084016140f3565b6000806040838503121561445957600080fd5b614438836140f3565b60008060006060848603121561447757600080fd5b833592506020840135915061426b604085016140f3565b600181811c908216806144a257607f821691505b6020821081036144c257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156144f1576144f16144c8565b500190565b6000816000190483118215151615614510576145106144c8565b500290565b60008261453257634e487b7160e01b600052601260045260246000fd5b500490565b60008083128015600160ff1b850184121615614555576145556144c8565b6001600160ff1b0384018313811615614570576145706144c8565b50500390565b60006001600160801b0383811690831681811015614596576145966144c8565b039392505050565b60006001600160801b038083168185168083038211156145c0576145c06144c8565b01949350505050565b70026bab3b2b72632b73234b733ab1890169607d1b8152600083516145f5816011850160208801614088565b602f60f81b6011918401918201528351614616816012840160208801614088565b01601201949350505050565b634e487b7160e01b600052604160045260246000fd5b601f82111561398357600081815260208120601f850160051c8101602086101561465f5750805b601f850160051c820191505b8181101561467e5782815560010161466b565b505050505050565b6001600160401b0383111561469d5761469d614622565b6146b1836146ab835461448e565b83614638565b6000601f8411600181146146e557600085156146cd5750838201355b600019600387901b1c1916600186901b17835561473f565b600083815260209020601f19861690835b8281101561471657868501358255602094850194600190920191016146f6565b50868210156147335760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161476e5761476e6144c8565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b805169ffffffffffffffffffff81168114613df357600080fd5b600080600080600060a086880312156147d657600080fd5b6147df866147a4565b9450602086015193506040860151925060608601519150614802608087016147a4565b90509295509295909350565b600082821015614820576148206144c8565b500390565b60408152600061483860408301856140b4565b6020838203818501526000855461484e8161448e565b808552600182811680156148695760018114614883576148b1565b60ff1984168787015282151560051b8701860194506148b1565b896000528560002060005b848110156148a957815489820189015290830190870161488e565b880187019550505b50929998505050505050505050565b6000602082840312156148d257600080fd5b81516001600160401b0381168114610fca57600080fd5b600082516148fb818460208701614088565b9190910192915050565b60006020828403121561491757600080fd5b81516001600160401b038082111561492e57600080fd5b818401915084601f83011261494257600080fd5b81518181111561495457614954614622565b604051601f8201601f19908116603f0116810190838211818310171561497c5761497c614622565b8160405282815287602084870101111561499557600080fd5b613fdf836020830160208801614088565b600060ff821660ff81036149bc576149bc6144c8565b60010192915050565b6000602082840312156149d757600080fd5b8151610fca8161419c56fea2646970667358221220250eb9ece07ed22db9ba5124cd446188d669c83df56f3bb655c225ba2dd6c1d264736f6c634300080f0033",
    "sourceMapi;:::-;;;368:25:22;;;356:2;341:18;20933:166:16;222:177:22;2023:158:17;;;:::i;:::-;;;;;;;:::i;4431:197:7:-;;;;;;:::i;:::-;;:::i;:::-;;;1757:14:22;;1750:22;1732:41;;1720:2;1705:18;4431:197:7;1592:187:22;15337:261:16;;;:::i;:::-;;;;2013:25:22;;;2069:2;2054:18;;2047:34;;;;2097:18;;;2090:34;-1:-1:-1;;;;;2160:31:22;2155:2;2140:18;;2133:59;2000:3;1985:19;15337:261:16;1784:414:22;2036:44:16;;;;;2728:154:17;2858:10;:17;-1:-1:-1;;;2858:17:17;;-1:-1:-1;;;;;2858:17:17;2728:154;;4853:45:16;;;;;5190:286:7;;;;;;:::i;:::-;;:::i;2530:142:17:-;;;2663:2;2678:36:22;;2666:2;2651:18;2530:142:17;2536:184:22;4662:1010:17;;;;-1:-1:-1;;;;;5188:13:17;3168:15:22;;3150:34;;5242:18:17;3220:15:22;;3215:2;3200:18;;3193:43;5289:14:17;3272:15:22;;3252:18;;;3245:43;;;;5329:12:17;3324:15:22;;3319:2;3304:18;;3297:43;5375:12:17;3377:15:22;;3371:3;3356:19;;3349:44;5419:16:17;3430:15:22;;3130:3;3409:19;;3402:44;5468:19:17;3483:15:22;;3477:3;3462:19;;3455:44;5523:26:17;3536:15:22;;;;3530:3;3515:19;;3508:44;5586:23:17;3596:14:22;3589:22;3583:3;3568:19;;3561:51;5644:21:17;3656:14:22;3649:22;3643:3;3628:19;;3621:51;3099:3;3084:19;4662:1010:17;2725:953:22;3115:95:17;3189:13;3115:95;;5871:234:7;;;;;;:::i;:::-;;:::i;38564:466:16:-;;;;;;:::i;:::-;;:::i;13855:166:17:-;;;;;;:::i;:::-;;:::i;:::-;;14679:308;;;:::i;9329:177::-;;;;;;:::i;:::-;;:::i;2086:44:16:-;;;;;4960:43;;;;;4281:30;;;;;;4624:51;;;;;;:::i;:::-;;;;;;;;;;;;;;1347:31;;;:::i;9778:177:17:-;;;;;;:::i;:::-;;:::i;1615:84:5:-;1662:4;1685:7;;;1615:84;;2655:32:16;;;;;-1:-1:-1;;;;;2655:32:16;;;24932:458;;;;;;:::i;:::-;;:::i;3406:125:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:7;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;1831:101:2;;;:::i;40609:4407:16:-;;;;;;:::i;:::-;;:::i;11051:332:17:-;;;;;;:::i;:::-;;:::i;4155:31:16:-;;;;;-1:-1:-1;;;;;4155:31:16;;;;-1:-1:-1;;;4155:31:16;;;;;;;;;-1:-1:-1;;;;;5942:15:22;;;5924:34;;5994:15;;;;5989:2;5974:18;;5967:43;5844:18;4155:31:16;5697:319:22;14267:406:17;;;:::i;10561:225::-;;;;;;:::i;:::-;;:::i;2387:40:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1201:85:2;1273:6;;-1:-1:-1;;;;;1273:6:2;1201:85;;8899:179:17;;;;;;:::i;:::-;;:::i;3393:38:16:-;;;;;-1:-1:-1;;;;;3393:38:16;;;;-1:-1:-1;;;3393:38:16;;;;;-1:-1:-1;;;3393:38:16;;;;;-1:-1:-1;;;3393:38:16;;;;;;;;;-1:-1:-1;;;;;6299:15:22;;;6281:34;;6351:15;;;6346:2;6331:18;;6324:43;6403:15;;;6383:18;;;6376:43;;;;6455:15;;;6450:2;6435:18;;6428:43;6231:3;6216:19;3393:38:16;6021:456:22;2187:337:17;;;:::i;10092:1196:16:-;;;;;;:::i;:::-;;:::i;3216:725:17:-;;;;1536:3:15;8902:25:22;;;8958:2;8943:18;;8936:34;;;8986:18;;;8979:34;;;9044:2;9029:18;;9022:34;;;;1755:4:15;9087:3:22;9072:19;;9065:35;1851:9:15;9131:3:22;9116:19;;9109:60;3300:22:17;9200:3:22;9185:19;;9178:48;2039:3:15;9257::22;9242:19;;9235:35;8889:3;8874:19;3216:725:17;8563:713:22;1816:39:16;;;;;6592:427:7;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;2551:48:16:-;;;;;5009:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4452:56;;;;;;:::i;:::-;;;;;;;;;;;;;;6806:402:17;;;;;;:::i;:::-;;:::i;:::-;;;;9483:25:22;;;9539:2;9524:18;;9517:34;;;;9567:18;;;9560:34;9471:2;9456:18;6806:402:17;9281:319:22;28280:472:16;;;;;;:::i;:::-;;:::i;1904:44::-;;;;;8464:179:17;;;;;;:::i;:::-;;:::i;1721:42:16:-;;;;;2262:29;;;:::i;4904:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33560:208;;;;;;:::i;:::-;;:::i;7600:644:17:-;7896:44;;;;;;;;7930:10;7896:44;-1:-1:-1;;;;;7896:44:17;;;;;;-1:-1:-1;;;7896:44:17;;;;;;;;;;;;;8047:46;;;;;;;7896:44;8047:46;;;;;;;;;;;;;;;;;;;8222:15;;7600:644;;10696:34:22;;;10746:18;;;10739:43;10798:18;;;10791:43;;;;10865:2;10850:18;;10843:43;10917:3;10902:19;;10895:35;10630:3;10615:19;7600:644:17;10384:552:22;2480:41:16;;;;;35817:415;;;;;;:::i;:::-;;:::i;2911:37::-;;;;;2954:36;;;;;12011:1410:17;;;;;;:::i;:::-;;:::i;3974:149:7:-;;;;;;:::i;:::-;;:::i;31609:498:16:-;;;;;;:::i;:::-;;:::i;2178:45::-;;;;;2714:51;;;;;2081:198:2;;;;;;:::i;:::-;;:::i;1975:31:16:-;;;;;4049:30;;;;;-1:-1:-1;;;;;4049:30:16;;;;-1:-1:-1;;;4049:30:16;;;;;2605:44;;;;;3803:40;;;;;;;;;;;;-1:-1:-1;;;;;3803:40:16;;;;;;;12232:10:22;12220:23;;;12202:42;;-1:-1:-1;;;;;12280:32:22;;;12275:2;12260:18;;12253:60;12175:18;3803:40:16;12030:289:22;6010:485:17;;;;6317:19;12583:25:22;;6356:6:17;12639:2:22;12624:18;;12617:34;6395:19:17;12667:18:22;;;12660:34;;;;6440:12:17;12725:2:22;12710:18;;12703:34;6477:11:17;12768:3:22;12753:19;;12746:35;12570:3;12555:19;6010:485:17;12324:463:22;20933:166:16;21018:21;2246::6;:19;:21::i;:::-;21071::16::1;:19;:21::i;:::-;21055:37;;2288:20:6::0;1701:1;2794:22;;2614:209;2288:20;20933:166:16;:::o;2023:158:17:-;2124:13;2160:14;2153:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:158;:::o;4431:197:7:-;4514:4;719:10:13;4568:32:7;719:10:13;4584:7:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;15337:261:16:-;15428:23;15465:19;15498:18;15530:15;2246:21:6;:19;:21::i;:::-;15577:14:16::1;:12;:14::i;:::-;15570:21;;;;;;;;2288:20:6::0;1701:1;2794:22;;2614:209;2288:20;15337:261:16;;;;:::o;5190:286:7:-;5317:4;719:10:13;5373:38:7;5389:4;719:10:13;5404:6:7;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;5871:234::-;5959:4;719:10:13;6013:64:7;719:10:13;6029:7:7;6066:10;6038:25;719:10:13;6029:7:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;38564:466:16:-;38675:22;2246:21:6;:19;:21::i;:::-;38713:14:16::1;:12;:14::i;:::-;-1:-1:-1::0;;38737:46:16::1;::::0;;;;::::1;::::0;;;38772:11:::1;38737:46:::0;-1:-1:-1;;;;;38737:46:16;;::::1;::::0;;-1:-1:-1;;;38737:46:16;;::::1;;;::::0;::::1;::::0;;-1:-1:-1;38810:36:16::1;::::0;-1:-1:-1;38737:46:16;38832:7;38737:46;38810:21:::1;:36::i;:::-;38793:53;;38856:167;38881:12;38907:26;:14;:24;:26::i;:::-;38947:19;:7;:17;:19::i;:::-;38980:10;39004:9;38856:11;:167::i;:::-;38703:327;2288:20:6::0;1701:1;2794:22;;2614:209;13855:166:17;1094:13:2;:11;:13::i;:::-;-1:-1:-1;;;;;13938:18:17;::::1;;::::0;;;:8:::1;:18;::::0;;;;;;;;:30;;-1:-1:-1;;13938:30:17::1;::::0;::::1;;::::0;;::::1;::::0;;;13983:31;;13610:51:22;;;13677:18;;;13670:50;13983:31:17::1;::::0;13583:18:22;13983:31:17::1;;;;;;;13855:166:::0;;:::o;14679:308::-;14721:10;-1:-1:-1;;;;;14735:19:17;14721:33;;;;;:58;;-1:-1:-1;1273:6:2;;-1:-1:-1;;;;;1273:6:2;14758:10:17;:21;;14721:58;14717:117;;;14802:21;;-1:-1:-1;;;14802:21:17;;;;;;;;;;;14717:117;14946:14;:12;:14::i;:::-;;;;;14970:10;:8;:10::i;:::-;14679:308::o;9329:177::-;9461:19;;;;;;;;;:10;:19;-1:-1:-1;;;;;9461:19:17;;;;;-1:-1:-1;;;9461:19:17;;;;;;;;9431:7;;9461:38;;9481:7;9490:8;9461:19;:38::i;1347:31:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9778:177:17:-;9910:19;;;;;;;;;:10;:19;-1:-1:-1;;;;;9910:19:17;;;;;-1:-1:-1;;;9910:19:17;;;;;;;;9880:7;;9910:38;;9930:7;9939:8;9910:19;:38::i;24932:458:16:-;25062:23;2246:21:6;:19;:21::i;:::-;1239:19:5::1;:17;:19::i;:::-;25101:14:16::2;:12;:14::i;:::-;-1:-1:-1::0;;25125:44:16::2;::::0;;;;::::2;::::0;;;25159:10:::2;25125:44:::0;-1:-1:-1;;;;;25125:44:16;;::::2;::::0;;-1:-1:-1;;;25125:44:16;;::::2;;;::::0;::::2;::::0;;-1:-1:-1;25197:36:16::2;::::0;-1:-1:-1;25125:44:16;25218:7;25125:31:::2;25197:20;:36::i;:::-;25179:54;;25243:140;25265:11;25290:19;:7;:17;:19::i;:::-;25323:27;:15;:25;:27::i;:::-;25364:9;25243:8;:140::i;1831:101:2:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;40609:4407:16:-:0;40801:32;1239:19:5;:17;:19::i;:::-;2246:21:6::1;:19;:21::i;:::-;40871:9:16::2;40853:15;:27;40849:92;;;40901:40;::::0;-1:-1:-1;;;40901:40:16;;40914:15:::2;40901:40;::::0;::::2;13905:25:22::0;13946:18;;;13939:34;;;13878:18;;40901:40:16::2;;;;;;;;40849:92;40952:14;:12;:14::i;:::-;;;;;40976:21;41000;:19;:21::i;:::-;40976:45;;41036:36;41047:9;41058:13;41036:10;:36::i;:::-;41032:91;;;41095:17;;-1:-1:-1::0;;;41095:17:16::2;;;;;;;;;;;41032:91;41160:46;::::0;;;;::::2;::::0;;41195:11:::2;41160:46:::0;-1:-1:-1;;;;;41160:46:16;;::::2;::::0;;-1:-1:-1;;;41160:46:16;;::::2;;;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;41249:32:16;::::2;41160;41249::::0;;;:21:::2;:32:::0;;;;;;41317:16:::2;:27:::0;;;;;;;41160:46;;41249:32;;41317:39:::2;::::0;:37:::2;:39::i;:::-;41291:65:::0;-1:-1:-1;41401:26:16::2;::::0;1755:4:15::2;41722:13:16::0;41654:65:::2;:12:::0;-1:-1:-1;;;;;41654:65:16;::::2;41401:26:::0;41654:38:::2;:65::i;:::-;:81;;;;:::i;:::-;41653:120;;;;:::i;:::-;41606:168:::0;-1:-1:-1;42007:42:16::2;1601:3:15;42112:35:16;42128:19;1601:3:15::0;42112:35:16::2;:::i;:::-;42053:95;::::0;:35;:95:::2;:::i;:::-;42052:113;;;;:::i;:::-;42007:158;;42541:45;:34;:43;:45::i;:::-;42489:33;:22;:31;:33::i;:::-;:97;;;;:::i;:::-;42466:121;;42850:1;42827:19;:24;;:197;;1601:3:15;42971:35:16;42987:19;1601:3:15::0;42971:35:16::2;:::i;:::-;42912:95;::::0;:35;:95:::2;:::i;:::-;42911:113;;;;:::i;:::-;42827:197;;;42870:22;42827:197;42800:224:::0;-1:-1:-1;43143:32:16::2;::::0;-1:-1:-1;43178:83:16::2;::::0;-1:-1:-1;43192:47:16::2;:12:::0;-1:-1:-1;;;;;43192:47:16;::::2;43234:4;43192:21;:47::i;:::-;43178:81;:83::i;:::-;43143:118;;43324:23;43371::::0;43435:1:::2;43412:19;:24;43408:697;;43535:36;43553:18:::0;43535:15;:36:::2;:::i;:::-;43517:54:::0;-1:-1:-1;;;;;;43593:19:16;::::2;::::0;43589:502:::2;;43696:105;43722:45;:12:::0;-1:-1:-1;;;;;43722:45:16;::::2;43761:5;43722:21;:45::i;43696:105::-;43678:123;;43951:15;43928:12;:19;;:38;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;43928:38:16;;::::2;::::0;;;44036:10:::2;:36:::0;;44057:15;;-1:-1:-1;44036:10:16;;:17:::2;::::0;:36:::2;::::0;44057:15;;44036:36:::2;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;44036:36:16::2;;;;;-1:-1:-1::0;;;;;44036:36:16::2;;;;;;43589:502;44123:236;::::0;;15161:25:22;;;-1:-1:-1;;;;;15275:15:22;;;15270:2;15255:18;;15248:43;15327:15;;;15307:18;;;15300:43;15379:15;;;15374:2;15359:18;;15352:43;15432:15;;15426:3;15411:19;;15404:44;44123:236:16;;-1:-1:-1;;;;;44123:236:16;::::2;::::0;::::2;::::0;;;;;15148:3:22;44123:236:16;;::::2;-1:-1:-1::0;44469:182:16::2;44494:12:::0;44520:24;44558:36:::2;44579:15:::0;44558:18;:36:::2;:::i;:::-;44608:10;44632:9;44469:11;:182::i;:::-;44943:66;44961:24;44987:10;44999:9;44943:17;:66::i;:::-;40839:4177;;;;;;;2288:20:6::1;1701:1:::0;2794:22;;2614:209;11051:332:17;1239:19:5;:17;:19::i;:::-;11137:17:17::1;::::0;-1:-1:-1;;;;;11137:17:17::1;11123:10;:31;11119:58;;11163:14;;-1:-1:-1::0;;;11163:14:17::1;;;;;;;;;;;11119:58;2039:3:15;11191:7:17;:26;;;11187:80;;;11240:16;;-1:-1:-1::0;;;11240:16:17::1;;;;;;;;;;;11187:80;11276:14;:12;:14::i;:::-;-1:-1:-1::0;;11300:15:17::1;:43:::0;;-1:-1:-1;;11300:43:17::1;;::::0;::::1;-1:-1:-1::0;;;11300:43:17;::::1;::::0;;;::::1;::::0;;;11358:18:::1;::::0;15861:42:22;;;11358:18:17::1;::::0;-1:-1:-1;15849:2:22;15834:18;;-1:-1:-1;11358:18:17::1;;;;;;;11051:332:::0;:::o;14267:406::-;14320:10;-1:-1:-1;;;;;14334:23:17;14320:37;;;;;:86;;-1:-1:-1;14373:10:17;-1:-1:-1;;;;;14387:19:17;14373:33;;;14320:86;:123;;;;-1:-1:-1;1273:6:2;;-1:-1:-1;;;;;1273:6:2;14422:10:17;:21;;14320:123;:169;;;;-1:-1:-1;14459:10:17;-1:-1:-1;;;;;14473:16:17;14459:30;;;14320:169;14303:250;;;14521:21;;-1:-1:-1;;;14521:21:17;;;;;;;;;;;14303:250;14562:14;:12;:14::i;:::-;;;;;14658:8;:6;:8::i;10561:225::-;10640:17;;-1:-1:-1;;;;;10640:17:17;10626:10;:31;10622:58;;10666:14;;-1:-1:-1;;;10666:14:17;;;;;;;;;;;10622:58;10707:17;;10695:43;;;-1:-1:-1;;;;;10707:17:17;;;16126:34:22;;16196:15;;;16191:2;16176:18;;16169:43;10695::17;;16061:18:22;10695:43:17;;;;;;;10748:17;:31;;-1:-1:-1;;;;;;10748:31:17;-1:-1:-1;;;;;10748:31:17;;;;;;;;;;10561:225::o;8899:179::-;9032:20;;;;;;;;;:11;:20;-1:-1:-1;;;;;9032:20:17;;;;;-1:-1:-1;;;9032:20:17;;;;;;;;9002:7;;9032:39;;9053:7;9062:8;9032:20;:39::i;2187:337::-;2290:13;2451:31;:18;-1:-1:-1;;;;;2451:29:17;;:31::i;:::-;2489:26;:13;-1:-1:-1;;;;;2489:24:17;;:26::i;:::-;2413:103;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2399:118;;2187:337;:::o;10092:1196:16:-;10306:10;-1:-1:-1;;;;;10320:16:16;10306:30;;10302:81;;10359:13;;-1:-1:-1;;;10359:13:16;;;;;;;;;;;10302:81;10419:1;10396:24;;;10392:73;;10443:11;;-1:-1:-1;;;10443:11:16;;;;;;;;;;;10392:73;10484:14;10478:28;;;;;:::i;:::-;:33;;-1:-1:-1;10474:91:16;;10534:20;;-1:-1:-1;;;10534:20:16;;;;;;;;;;;10474:91;10595:14;:22;10612:5;;10595:14;:22;:::i;:::-;;10667:9;10662:128;10682:29;;;10662:128;;;10775:4;10732:17;:40;10750:18;;10769:1;10750:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10732:40:16;;;;;;;;;;;;-1:-1:-1;10732:40:16;:47;;-1:-1:-1;;10732:47:16;;;;;;;;;;10713:3;;;:::i;:::-;;;10662:128;;;;10837:9;10832:122;10852:27;;;10832:122;;;10939:4;10900:15;:36;10916:16;;10933:1;10916:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10900:36:16;;;;;;;;;;;;-1:-1:-1;10900:36:16;:43;;-1:-1:-1;;10900:43:16;;;;;;;;;;10881:3;;;:::i;:::-;;;10832:122;;;-1:-1:-1;11009:69:16;;-1:-1:-1;;;11009:69:16;;-1:-1:-1;;;;;11025:12:16;11009:50;;;;:69;;11060:17;;;;11009:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11119:16:16;;-1:-1:-1;11119:36:16;;-1:-1:-1;11138:17:16;;-1:-1:-1;11138:17:16;11119:16;:36;:::i;:::-;;11198:14;:12;:14::i;:::-;;;;;11260:21;:19;:21::i;:::-;;10092:1196;;;;;;;;:::o;6592:427:7:-;6685:4;719:10:13;6685:4:7;6766:25;719:10:13;6783:7:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:7;;21258:2:22;6801:85:7;;;21240:21:22;21297:2;21277:18;;;21270:30;21336:34;21316:18;;;21309:62;-1:-1:-1;;;21387:18:22;;;21380:35;21432:19;;6801:85:7;21056:401:22;6801:85:7;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:7;;6592:427;-1:-1:-1;;;;6592:427:7:o;3727:189::-;3806:4;719:10:13;3860:28:7;719:10:13;3877:2:7;3881:6;3860:9;:28::i;6806:402:17:-;6909:24;6947:25;6986:30;7060:19;7070:8;-1:-1:-1;;;;;3506:18:7;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;7060:19:17;-1:-1:-1;;;;;7109:26:17;;;;;;;:16;:26;;;;;;;;;7170:21;:31;;;;;;;7041:38;;7109:26;;7170:31;-1:-1:-1;6806:402:17;-1:-1:-1;;6806:402:17:o;28280:472:16:-;28409:23;2246:21:6;:19;:21::i;:::-;28444:14:16::1;:12;:14::i;:::-;-1:-1:-1::0;;28468:44:16::1;::::0;;;;::::1;::::0;;;28502:10:::1;28468:44:::0;-1:-1:-1;;;;;28468:44:16;;::::1;::::0;;-1:-1:-1;;;28468:44:16;;::::1;;;::::0;::::1;::::0;;-1:-1:-1;28540:36:16::1;::::0;-1:-1:-1;28468:44:16;28561:7;28468:31:::1;28540:20;:36::i;:::-;28522:54;;28586:159;28607:11;28632:27;:15;:25;:27::i;:::-;28673:19;:7;:17;:19::i;:::-;28706:9;28729:6;28586:7;:159::i;:::-;28434:318;2288:20:6::0;1701:1;2794:22;;2614:209;8464:179:17;8597:20;;;;;;;;;:11;:20;-1:-1:-1;;;;;8597:20:17;;;;;-1:-1:-1;;;8597:20:17;;;;;;;;8567:7;;8597:39;;8618:7;8627:8;8597:20;:39::i;2262:29:16:-;;;;;;;:::i;33560:208::-;2246:21:6;:19;:21::i;:::-;33681:14:16::1;:12;:14::i;:::-;;;;;33705:56;33720:10;33732:17;33751:9;33705:14;:56::i;:::-;2288:20:6::0;1701:1;2794:22;;2614:209;2288:20;33560:208:16;;:::o;35817:415::-;2246:21:6;:19;:21::i;:::-;35945:10:16::1;35971:14:::2;:12;:14::i;:::-;-1:-1:-1::0;;36094:10:16::2;36108:1;36077:28:::0;;;:16:::2;:28;::::0;;;;;:32;;-1:-1:-1;36073:84:16::2;::::0;-1:-1:-1;36073:84:16::2;36125:21;:19;:21::i;:::-;;36073:84;36166:59;36184:17;36203:9;36214:10;36166:17;:59::i;:::-;13475:16:::1;:29:::0;13453:52:::1;::::0;13464:9;;13475:29;;::::1;-1:-1:-1::0;;;;;13475:29:16::1;13453:10;:52::i;:::-;13448:284;;-1:-1:-1::0;;;;;13576:27:16;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;;;13555:20;;;;::::1;::::0;;;:11:::1;:20:::0;-1:-1:-1;;;;;13555:20:16;;::::1;::::0;;-1:-1:-1;;;13555:20:16;;::::1;;::::0;;::::1;::::0;;;;:55:::1;::::0;:20;13605:4:::1;13555:20;:55::i;:::-;-1:-1:-1::0;;;;;13628:32:16;::::1;;::::0;;;:21:::1;:32;::::0;;;;;;;13678:16:::1;:29:::0;13528:193;;-1:-1:-1;;;13528:193:16;;13678:29:::1;13528:193:::0;::::1;21664:25:22::0;;;;21705:18;;;21698:34;13678:29:16;;::::1;-1:-1:-1::0;;;;;13678:29:16::1;21748:18:22::0;;;21741:60;21637:18;;13528:193:16::1;21462:345:22::0;13448:284:16::1;2277:1:6;2288:20:::0;1701:1;2794:22;;2614:209;12011:1410:17;12122:25;1094:13:2;:11;:13::i;:::-;12212:44:17::1;::::0;;;;::::1;::::0;;12246:10:::1;12212:44:::0;-1:-1:-1;;;;;12212:44:17;;::::1;::::0;;-1:-1:-1;;;12212:44:17;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;12266:46;;;;::::1;::::0;;;12212:44:::1;12266:46:::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;12212:44;;12266:46;12375:12;::::1;12212:31;12375:12:::0;12371:61:::1;;12425:4;3480:7:7::0;3506:18;;;:9;:18;;;;;;12389:43:17::1;;12371:61;12549:35;:11:::0;-1:-1:-1;;;;;12549:35:17;::::1;12579:4;12549:20;:35::i;:::-;12529:55;;12646:24;12673:81;12707:11;12732:12;12673:20;:81::i;:::-;12646:108;;12787:17;12768:16;:36;12764:185;;;12827:111;::::0;-1:-1:-1;;;12827:111:17;;::::1;::::0;::::1;13905:25:22::0;;;13946:18;;;13939:34;;;13878:18;;12827:111:17::1;13731:248:22::0;12764:185:17::1;13021:17;12991:11;:18;;:48;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12991:48:17::1;::::0;;-1:-1:-1;13049:18:17::1;::::0;::::1;:29:::0;;13071:7;;13049:18;:29:::1;::::0;13071:7;;13049:29:::1;:::i;:::-;-1:-1:-1::0;;;;;13049:29:17;;::::1;::::0;;;13192::::1;::::0;-1:-1:-1;13206:4:17::1;::::0;13192:29;::::1;:5;:29::i;:::-;13231:24:::0;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;13231:24:17;;::::1;-1:-1:-1::0;;;13231:24:17::1;::::0;::::1;;:10;:24:::0;13290:57:::1;-1:-1:-1::0;;;;;13290:13:17::1;:26;13317:10:::0;13329:17;13290:26:::1;:57::i;:::-;13362:52;::::0;;-1:-1:-1;;;;;22032:47:22;;22014:66;;-1:-1:-1;;;;;22116:32:22;;22111:2;22096:18;;22089:60;22165:18;;;22158:34;;;13362:52:17::1;::::0;22002:2:22;21987:18;13362:52:17::1;;;;;;;12153:1268;;;12011:1410:::0;;;;:::o;3974:149:7:-;-1:-1:-1;;;;;4089:18:7;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;31609:498:16:-;31836:15;1239:19:5;:17;:19::i;:::-;2246:21:6::1;:19;:21::i;:::-;31807:10:16::2;31867:14:::3;:12;:14::i;:::-;;;;;31891:21;:19;:21::i;:::-;-1:-1:-1::0;31926:21:16;;31922:109:::3;;31963:57;31978:10;31990:17;32009:10;31963:14;:57::i;:::-;32050:50;32063:25;:13;:23;:25::i;:::-;32090:9;32050:12;:50::i;:::-;13475:16:::2;:29:::0;32040:60;;-1:-1:-1;13453:52:16::2;::::0;13464:9;;13475:29;;::::2;-1:-1:-1::0;;;;;13475:29:16::2;13453:10;:52::i;:::-;13448:284;;-1:-1:-1::0;;;;;13576:27:16;::::2;;::::0;;;:16:::2;:27;::::0;;;;;;;;;13555:20;;;;::::2;::::0;;;:11:::2;:20:::0;-1:-1:-1;;;;;13555:20:16;;::::2;::::0;;-1:-1:-1;;;13555:20:16;;::::2;;::::0;;::::2;::::0;;;;:55:::2;::::0;:20;13605:4:::2;13555:20;:55::i;2081:198:2:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;22405:2:22;2161:73:2::1;::::0;::::1;22387:21:22::0;22444:2;22424:18;;;22417:30;22483:34;22463:18;;;22456:62;-1:-1:-1;;;22534:18:22;;;22527:36;22580:19;;2161:73:2::1;22203:402:22::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2321:287:6:-;1744:1;2453:7;;:19;2445:63;;;;-1:-1:-1;;;2445:63:6;;22812:2:22;2445:63:6;;;22794:21:22;22851:2;22831:18;;;22824:30;22890:33;22870:18;;;22863:61;22941:18;;2445:63:6;22610:355:22;2445:63:6;1744:1;2583:7;:18;2321:287::o;21386:1355:16:-;21468:60;;;;;;;;;21512:16;21468:60;;;;;;;;;;;-1:-1:-1;;;;;21468:60:16;;;;;-1:-1:-1;;21468:60:16;21577:15;21542:50;;21538:134;;21631:30;;;-1:-1:-1;;;;;21615:46:16;;21386:1355;-1:-1:-1;21386:1355:16:o;21538:134::-;21707:4;21726:14;-1:-1:-1;;;;;21726:28:16;;21722:306;;21773:14;21819;-1:-1:-1;;;;;21797:70:16;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21770:99;;;;;;21898:1;21887:7;:12;21883:87;;21926:29;;-1:-1:-1;;;21926:29:16;;-1:-1:-1;;;;;21940:14:16;178:32:22;21926:29:16;;;160:51:22;133:18;;21926:29:16;14:203:22;21883:87:16;21992:25;22009:7;21992:6;:25;:::i;:::-;21983:34;;21756:272;21722:306;22042:12;-1:-1:-1;;;;;22042:26:16;;22038:300;;22087:14;22133:12;-1:-1:-1;;;;;22111:68:16;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22084:97;;;;;;22210:1;22199:7;:12;22195:85;;22238:27;;-1:-1:-1;;;22238:27:16;;-1:-1:-1;;;;;22252:12:16;178:32:22;22238:27:16;;;160:51:22;133:18;;22238:27:16;14:203:22;22195:85:16;22302:25;22319:7;22302:6;:25;:::i;:::-;22293:34;;22070:268;22038:300;22364:28;22373:19;22364:6;:28;:::i;:::-;22348:44;-1:-1:-1;;;;;;22451:33:16;;22447:61;;;22493:15;;-1:-1:-1;;;22493:15:16;;;;;;;;;;;22447:61;-1:-1:-1;;;;;22518:55:16;;:30;;;:55;;;22583:57;22624:15;22583:57;;;;22650:36;;;;;:16;:36;22701:33;;;;;;22559:13;368:25:22;;356:2;341:18;;222:177;22701:33:16;;;;;;;;21458:1283;;21386:1355;:::o;10504:370:7:-;-1:-1:-1;;;;;10635:19:7;;10627:68;;;;-1:-1:-1;;;10627:68:7;;23834:2:22;10627:68:7;;;23816:21:22;23873:2;23853:18;;;23846:30;23912:34;23892:18;;;23885:62;-1:-1:-1;;;23963:18:22;;;23956:34;24007:19;;10627:68:7;23632:400:22;10627:68:7;-1:-1:-1;;;;;10713:21:7;;10705:68;;;;-1:-1:-1;;;10705:68:7;;24239:2:22;10705:68:7;;;24221:21:22;24278:2;24258:18;;;24251:30;24317:34;24297:18;;;24290:62;-1:-1:-1;;;24368:18:22;;;24361:32;24410:19;;10705:68:7;24037:398:22;10705:68:7;-1:-1:-1;;;;;10784:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;368:25:22;;;10835:32:7;;341:18:22;10835:32:7;;;;;;;;10504:370;;;:::o;15876:4307:16:-;16133:57;;;;;;;;16175:15;16133:57;-1:-1:-1;;;;;16133:57:16;;;;;-1:-1:-1;;;16133:57:16;;;;;;;;-1:-1:-1;;;16133:57:16;;;;;;;;;;-1:-1:-1;;;16133:57:16;;;;;;;;15947:23;;;;;;;;16133:57;16238:15;16204:49;;16200:191;;16280:27;;;;-1:-1:-1;16321:59:16;;16200:191;16452:44;;;;;;;;16486:10;16452:44;-1:-1:-1;;;;;16452:44:16;;;;;-1:-1:-1;;;16452:44:16;;;;;;;;;;;;;;16506:46;;;;;;;;16452:44;16506:46;;;;;;;;;;;;;;;;;16452:44;;16506:46;16672:24;;:36;;-1:-1:-1;1662:4:5;1685:7;;;16700:8:16;16668:3509;;;1662:4:5;1685:7;;;16724:89:16;;1851:9:15;16757:27:16;;;:41;16724:89;-1:-1:-1;;;;;16866:15:16;16826:56;;:30;;;:56;;;16932:12;16896:49;;;;;17001:15;:34;;;;;;;;;;;;-1:-1:-1;;;17001:34:16;-1:-1:-1;;;;;;;;17001:34:16;;;;;;;-1:-1:-1;;;;;17001:34:16;;;;-1:-1:-1;;;17001:34:16;-1:-1:-1;;;;;;17001:34:16;;;;;;;;;;;;;;;;;;16668:3509;;;17112:18;17167:16;:30;;;-1:-1:-1;;;;;17133:64:16;:15;:64;;;;:::i;:::-;17485:18;;17446:19;;17112:85;;-1:-1:-1;17406:24:16;;-1:-1:-1;;;;;17433:70:16;;;;17434:31;;;1648:3:15;17434:31:16;:::i;:::-;17433:70;;;;:::i;:::-;17406:97;;17518:22;17571:16;:27;;;17616:10;17644:16;17693;:26;;;-1:-1:-1;;;;;17678:41:16;:12;:41;;;;:::i;:::-;17543:190;;;-1:-1:-1;;;;;24817:31:22;;;17543:190:16;;;24799:50:22;24865:18;;24858:34;;;;24908:18;;;24901:34;24951:18;;;24944:34;24771:19;;17543:190:16;;;-1:-1:-1;;17543:190:16;;;;;;;;;;-1:-1:-1;;;17758:115:16;;17543:190;-1:-1:-1;;;;;;17774:12:16;17758:40;;;;:115;;17543:190;;17843:16;;17758:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17981:27;;;;;17953:157;;;-1:-1:-1;;;;;26660:15:22;;;26642:34;;26707:2;26692:18;;26685:34;;;26735:18;;;26728:34;;;26798:15;;;26778:18;;;26771:43;;;;17747:126:16;;-1:-1:-1;17953:157:16;;26592:3:22;26577:19;17953:157:16;;;;;;;-1:-1:-1;;;;;18161:38:16;;;:27;;;:38;;;18253:15;18213:56;;:30;;;:56;18319:12;18283:49;;;;;18457:19;;18546:4;;18161:38;18424:52;;-1:-1:-1;;;;;18424:52:16;:10;:52;:::i;:::-;:102;;;;:::i;:::-;18423:127;;;;:::i;:::-;18682:19;;18389:161;;-1:-1:-1;;;;;;18705:17:16;18664:37;;;;18389:161;18664:37;:::i;:::-;:58;;:135;;;;-1:-1:-1;18760:18:16;;-1:-1:-1;;;;;18782:17:16;18742:36;;;;:15;:36;:::i;:::-;:57;;18664:135;18643:1356;;;18863:15;18832:12;:19;;:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;18832:47:16;;;-1:-1:-1;18897:46:16;;18927:15;;18897:11;;:46;;18927:15;;18897:46;:::i;:::-;-1:-1:-1;;;;;18897:46:16;;;-1:-1:-1;18965:34:16;;;;-1:-1:-1;;;;;18965:38:16;;18961:789;;1699:3:15;19084:16:16;:34;;;-1:-1:-1;;;;;19066:52:16;:15;:52;;;;:::i;:::-;19065:94;;;;:::i;:::-;19281:18;;19027:132;;-1:-1:-1;19281:32:16;;19027:132;;-1:-1:-1;;;;;19281:32:16;;:::i;:::-;19234:18;;;;19220:32;;-1:-1:-1;;;;;19220:32:16;:11;:32;:::i;:::-;19219:95;;;;:::i;:::-;19182:132;;19616:10;19586:11;:18;;:41;;;;;;;:::i;:::-;-1:-1:-1;;;;;19586:41:16;;;-1:-1:-1;19699:32:16;19713:4;19720:10;19699:5;:32::i;:::-;19842:27;;;;;19772:212;;;27083:25:22;;;-1:-1:-1;;;;;27144:31:22;;;27139:2;27124:18;;27117:59;27192:18;;27185:34;;;27235:18;;;27228:34;;;27293:3;27278:19;;27271:35;;;19772:212:16;;27070:3:22;27055:19;19772:212:16;;;;;;;18643:1356;-1:-1:-1;;20054:24:16;;;;;;;-1:-1:-1;;;;;20054:24:16;;;-1:-1:-1;;;20054:24:16;;;;;;;;;;:10;:24;20092:34;;:15;:34;;;;;;;;;;;;;;-1:-1:-1;;;;;20092:34:16;;;-1:-1:-1;;;20092:34:16;-1:-1:-1;;;;;20092:34:16;;;;;;;;;;;;-1:-1:-1;;;20092:34:16;-1:-1:-1;;;;;;20092:34:16;;;;;;;;;;;;;;;;;;;;;;;20140:26;;;;;;;;;;;;;;20054:24;20140:26;-1:-1:-1;16668:3509:16;16079:4104;;;15876:4307;;;;:::o;11155:441:7:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:7;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:7;;27519:2:22;11404:68:7;;;27501:21:22;27558:2;27538:18;;;27531:30;27597:31;27577:18;;;27570:59;27646:18;;11404:68:7;27317:353:22;11404:68:7;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:7;;7591:68;;;;-1:-1:-1;;;7591:68:7;;27877:2:22;7591:68:7;;;27859:21:22;27916:2;27896:18;;;27889:30;27955:34;27935:18;;;27928:62;-1:-1:-1;;;28006:18:22;;;27999:35;28051:19;;7591:68:7;27675:401:22;7591:68:7;-1:-1:-1;;;;;7677:16:7;;7669:64;;;;-1:-1:-1;;;7669:64:7;;28283:2:22;7669:64:7;;;28265:21:22;28322:2;28302:18;;;28295:30;28361:34;28341:18;;;28334:62;-1:-1:-1;;;28412:18:22;;;28405:33;28455:19;;7669:64:7;28081:399:22;7669:64:7;-1:-1:-1;;;;;7815:15:7;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:7;;28687:2:22;7840:72:7;;;28669:21:22;28726:2;28706:18;;;28699:30;28765:34;28745:18;;;28738:62;-1:-1:-1;;;28816:18:22;;;28809:36;28862:19;;7840:72:7;28485:402:22;7840:72:7;-1:-1:-1;;;;;7946:15:7;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;;;;;7978:6;368:25:22;;356:2;341:18;;222:177;8210:26:7;;;;;;;;8247:37;9422:659;1300:430:21;1428:14;1458:5;:12;;;-1:-1:-1;;;;;1458:17:21;1474:1;1458:17;1454:270;;-1:-1:-1;1500:6:21;1454:270;;;1572:12;;;;1556;;-1:-1:-1;;;;;1546:38:21;;;;1547:21;;;:6;:21;:::i;:::-;1546:38;;;;:::i;:::-;1537:47;;1602:7;:58;;;;;1654:6;1639:5;:12;;;-1:-1:-1;;;;;1613:38:21;1623:5;:12;;;-1:-1:-1;;;;;1614:21:21;:6;:21;;;;:::i;:::-;1613:38;;;;:::i;:::-;:47;1602:58;1598:116;;;1689:10;:6;1698:1;1689:10;:::i;:::-;1680:19;1300:430;-1:-1:-1;;;;1300:430:21:o;9088:192:14:-;9145:7;-1:-1:-1;;;;;9172:26:14;;;9164:78;;;;-1:-1:-1;;;9164:78:14;;29094:2:22;9164:78:14;;;29076:21:22;29133:2;29113:18;;;29106:30;29172:34;29152:18;;;29145:62;-1:-1:-1;;;29223:18:22;;;29216:37;29270:19;;9164:78:14;28892:403:22;9164:78:14;-1:-1:-1;9267:5:14;9088:192::o;37369:720:16:-;37620:14;37597:12;:19;;:37;;;;;;;:::i;:::-;-1:-1:-1;;;;;37597:37:16;;;-1:-1:-1;37644:19:16;;;:30;;37667:7;;37644:19;:30;;37667:7;;37644:30;:::i;:::-;-1:-1:-1;;;;;37644:30:16;;;;;;-1:-1:-1;;;;;37720:27:16;;;;;;:16;:27;;;;;:38;;;;;;-1:-1:-1;37720:27:16;:38;;;;;:::i;:::-;;;;-1:-1:-1;;37768:26:16;;;;;;-1:-1:-1;;;;;37768:26:16;;;-1:-1:-1;;;37768:26:16;;;;:11;:26;-1:-1:-1;;;;;37833:23:16;;37851:4;37833:23;37829:185;;37872:131;-1:-1:-1;;;;;37872:13:16;:30;37920:6;37952:4;-1:-1:-1;;;;;37872:131:16;;:30;:131::i;:::-;38028:54;;;-1:-1:-1;;;;;5942:15:22;;;5924:34;;5994:15;;5989:2;5974:18;;5967:43;-1:-1:-1;;;;;38028:54:16;;;;;;;;;;5844:18:22;38028:54:16;;;;;;;37369:720;;;;;:::o;1359:130:2:-;1273:6;;-1:-1:-1;;;;;1273:6:2;719:10:13;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;29826:2:22;1414:68:2;;;29808:21:22;;;29845:18;;;29838:30;29904:34;29884:18;;;29877:62;29956:18;;1414:68:2;29624:356:22;2433:117:5;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:5::1;::::0;;2521:22:::1;719:10:13::0;2530:12:5::1;2521:22;::::0;-1:-1:-1;;;;;178:32:22;;;160:51;;148:2;133:18;2521:22:5::1;;;;;;;2433:117::o:0;710:430:21:-;868:12;;838:14;;-1:-1:-1;;;;;868:17:21;;;864:270;;-1:-1:-1;910:6:21;864:270;;;982:12;;966;;;;-1:-1:-1;;;;;956:38:21;;;;957:21;;;:6;:21;:::i;:::-;956:38;;;;:::i;:::-;947:47;;1012:7;:58;;;;;1064:6;1049:5;:12;;;-1:-1:-1;;;;;1023:38:21;1033:5;:12;;;-1:-1:-1;;;;;1024:21:21;:6;:21;;;;:::i;1767:106:5:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;30187:2:22;1828:38:5;;;30169:21:22;30226:2;30206:18;;;30199:30;-1:-1:-1;;;30245:18:22;;;30238:46;30301:18;;1828:38:5;29985:340:22;23932:544:16;24147:7;24125:11;:18;;:29;;;;;;;:::i;:::-;-1:-1:-1;;;;;24125:29:16;;;-1:-1:-1;24164:18:16;;;:29;;24186:7;;24164:18;:29;;24186:7;;24164:29;:::i;:::-;-1:-1:-1;;;;;24164:29:16;;;;;;24246:25;;-1:-1:-1;24252:9:16;;24246:25;;:5;:25::i;:::-;24281:24;;;;;;-1:-1:-1;;;;;24281:24:16;;;-1:-1:-1;;;24281:24:16;;;;;;;;:10;:24;24340:66;;-1:-1:-1;;;;;24340:13:16;:30;;24371:10;;24391:4;;24340:66;;:30;:66::i;:::-;24421:48;;;-1:-1:-1;;;;;5942:15:22;;;5924:34;;5994:15;;5989:2;5974:18;;5967:43;-1:-1:-1;;;;;24421:48:16;;;24429:10;;24421:48;;5844:18:22;24421:48:16;;;;;;;23932:544;;;;:::o;2433:187:2:-;2525:6;;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;12413:619:16:-;12522:4;12546:6;12556:1;12546:11;12542:28;;-1:-1:-1;12566:4:16;12559:11;;12542:28;-1:-1:-1;;;;;12640:27:16;;12580:23;12640:27;;;:16;:27;;;;;;;;;12606:20;;;;;;;;:11;:20;-1:-1:-1;;;;;12606:20:16;;;;;-1:-1:-1;;;12606:20:16;;;;;;;;;;;:89;;12681:4;12606:20;:89::i;:::-;12580:115;;12709:15;12728:1;12709:20;12705:37;;12738:4;12731:11;;;;;12705:37;-1:-1:-1;;;;;12780:32:16;;12752:25;12780:32;;;:21;:32;;;;;;;12826:22;;;12822:40;;12857:5;12850:12;;;;;;12822:40;12873:12;12977:17;1536:3:15;1755:4;12891:31:16;12909:13;12891:15;:31;:::i;:::-;12890:66;;;;:::i;:::-;12889:84;;;;:::i;:::-;12888:106;;;;:::i;:::-;13019:6;-1:-1:-1;13011:14:16;;12413:619;-1:-1:-1;;;;;;12413:619:16:o;34781:297:14:-;34837:6;-1:-1:-1;;;;;34962:5:14;:34;;34954:87;;;;-1:-1:-1;;;34954:87:14;;30532:2:22;34954:87:14;;;30514:21:22;30571:2;30551:18;;;30544:30;30610:34;30590:18;;;30583:62;-1:-1:-1;;;30661:18:22;;;30654:38;30709:19;;34954:87:14;30330:404:22;34704:762:16;-1:-1:-1;;;;;34976:32:16;;;;;;:21;:32;;;;;:53;;35012:17;;34976:32;:53;;35012:17;;34976:53;:::i;:::-;;;;;;;;35148:17;35129:15;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;35204:26:16;;35225:4;35204:26;35200:118;;35246:61;-1:-1:-1;;;;;35246:18:16;:31;35278:9;35289:17;35246:31;:61::i;:::-;35440:9;-1:-1:-1;;;;;35332:127:16;35417:9;-1:-1:-1;;;;;35332:127:16;35362:10;-1:-1:-1;;;;;35332:127:16;;35386:17;35332:127;;;;368:25:22;;356:2;341:18;;222:177;35332:127:16;;;;;;;;34704:762;;;:::o;2186:115:5:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:5::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:13::0;;640:96;1565:235:1;1705:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1705:34:1;-1:-1:-1;;;1705:34:1;;;1679:61;;1622:13;;1644:12;;;;-1:-1:-1;;;;;1679:25:1;;;:61;;1705:34;1679:61;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1643:97;;;;1753:7;:42;;;;;;;;;;;;;;;-1:-1:-1;;;1753:42:1;;;;;;1763:24;1782:4;1763:18;:24::i;26619:1242:16:-;26815:10;-1:-1:-1;;;;;26815:20:16;;;26811:293;;26851:15;26869:29;26879:6;26887:10;26869:9;:29::i;:::-;26851:47;;-1:-1:-1;;27000:7:16;:28;26996:97;;27046:47;27055:6;27063:10;27075:17;-1:-1:-1;;;;;27075:17:16;;:7;:17;:::i;27046:47::-;26837:267;26811:293;27192:80;;;;;;;;;27251:11;27192:80;-1:-1:-1;;;;;27192:80:16;;;;;-1:-1:-1;;;27192:80:16;;;;;;;;27165:24;;27192:80;;27226:11;;27192:20;:80::i;:::-;27165:107;;27305:15;-1:-1:-1;;;;;27286:34:16;:16;:34;27282:181;;;27343:109;;-1:-1:-1;;;27343:109:16;;;;;31192:25:22;;;-1:-1:-1;;;;;31253:47:22;;31233:18;;;31226:75;31165:18;;27343:109:16;31018:289:22;27282:181:16;27527:15;27505:11;:18;;:37;;;;;;;:::i;:::-;-1:-1:-1;;;;;27505:37:16;;;-1:-1:-1;27552:18:16;;;:29;;27574:7;;27552:18;:29;;27574:7;;27552:29;:::i;:::-;-1:-1:-1;;;;;27552:29:16;;;;;;27629:24;;;;;;;;-1:-1:-1;;;27629:24:16;;;;;:10;:24;27663:22;;-1:-1:-1;27669:6:16;;27663:22;;:5;:22::i;:::-;27720:54;-1:-1:-1;;;;;27720:13:16;:26;27747:9;-1:-1:-1;;;;;27720:54:16;;:26;:54::i;:::-;27789:65;;;-1:-1:-1;;;;;5942:15:22;;;5924:34;;5994:15;;5989:2;5974:18;;5967:43;-1:-1:-1;;;;;27789:65:16;;;;;;;;27798:10;;27789:65;;5844:18:22;27789:65:16;;;;;;;26801:1060;26619:1242;;;;;:::o;32612:573::-;-1:-1:-1;;;;;32783:32:16;;;;;;:21;:32;;;;;:53;;32819:17;;32783:32;:53;;32819:17;;32783:53;:::i;:::-;;;;;;;;32865:17;32846:15;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;32921:24:16;;32940:4;32921:24;32917:195;;32961:140;-1:-1:-1;;;;;32961:18:16;:35;33014:7;33047:4;33070:17;32961:35;:140::i;:::-;33149:9;-1:-1:-1;;;;;33126:52:16;33140:7;-1:-1:-1;;;;;33126:52:16;;33160:17;33126:52;;;;368:25:22;;356:2;341:18;;222:177;11886:215:16;12075:19;;12054:18;;12028:7;;12054:40;;;:::i;:::-;-1:-1:-1;;;;;12047:47:16;;11886:215;-1:-1:-1;;;11886:215:16:o;9422:659:7:-;-1:-1:-1;;;;;9505:21:7;;9497:67;;;;-1:-1:-1;;;9497:67:7;;31514:2:22;9497:67:7;;;31496:21:22;31553:2;31533:18;;;31526:30;31592:34;31572:18;;;31565:62;-1:-1:-1;;;31643:18:22;;;31636:31;31684:19;;9497:67:7;31312:397:22;9497:67:7;-1:-1:-1;;;;;9660:18:7;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:7;;31916:2:22;9688:71:7;;;31898:21:22;31955:2;31935:18;;;31928:30;31994:34;31974:18;;;31967:62;-1:-1:-1;;;32045:18:22;;;32038:32;32087:19;;9688:71:7;31714:398:22;9688:71:7;-1:-1:-1;;;;;9793:18:7;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;368:25:22;;;9793:18:7;;;9978:37;;341:18:22;9978:37:7;222:177:22;10026:48:7;9487:594;9422:659;;:::o;2668:141:1:-;2762:42;2787:5;2794:2;2798:5;2762:24;:42::i;29859:1244:16:-;29993:46;;;;;;;;30028:11;29993:46;-1:-1:-1;;;;;29993:46:16;;;;;-1:-1:-1;;;29993:46:16;;;;;;;;;;;;;;30112:80;;;;;;;;30146:10;30112:80;;;;;;;;;;;;;;;29957:20;;;;30112:80;;29993:46;30112:20;:80::i;:::-;30085:107;;30225:13;-1:-1:-1;;;;;30206:32:16;:16;:32;30202:177;;;30261:107;;-1:-1:-1;;;30261:107:16;;;;;31192:25:22;;;-1:-1:-1;;;;;31253:47:22;;31233:18;;;31226:75;31165:18;;30261:107:16;31018:289:22;30202:177:16;30487:42;:12;-1:-1:-1;;;;;30487:42:16;;30524:4;30487:21;:42::i;:::-;30472:57;;30562:13;30539:12;:19;;:36;;;;;;;:::i;:::-;-1:-1:-1;;;;;30539:36:16;;;-1:-1:-1;30585:19:16;;;:44;;30616:12;;30585:19;:44;;30616:12;;30585:44;:::i;:::-;-1:-1:-1;;;;;30585:44:16;;;;;;30795:26;;;;;;;;;-1:-1:-1;;;30795:26:16;;;;;;:11;:26;30848:10;30795:26;30831:28;;;:16;:28;;;;;;:44;;30863:12;;-1:-1:-1;30831:28:16;;30795:26;30831:44;;30863:12;;30831:44;:::i;:::-;;;;-1:-1:-1;;;;;;;30914:26:16;;30935:4;30914:26;30910:109;;30956:52;-1:-1:-1;;;;;30956:13:16;:26;30983:9;-1:-1:-1;;;;;30956:52:16;;:26;:52::i;:::-;31033:63;;;-1:-1:-1;;;;;32309:47:22;;32291:66;;32388:2;32373:18;;32366:34;;;-1:-1:-1;;;;;31033:63:16;;;31045:10;;31033:63;;32264:18:22;31033:63:16;;;;;;;29983:1120;;29859:1244;;;;:::o;8567:535:7:-;-1:-1:-1;;;;;8650:21:7;;8642:65;;;;-1:-1:-1;;;8642:65:7;;32613:2:22;8642:65:7;;;32595:21:22;32652:2;32632:18;;;32625:30;32691:33;32671:18;;;32664:61;32742:18;;8642:65:7;32411:355:22;8642:65:7;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:7;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;368:25:22;;;8999:37:7;;341:18:22;8999:37:7;;;;;;;33560:208:16;;:::o;2813:173:1:-;2929:52;2958:5;2965:4;2971:2;2975:5;2929:28;:52::i;1945:106:5:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:5;;32973:2:22;2003:41:5;;;32955:21:22;33012:2;32992:18;;;32985:30;-1:-1:-1;;;33031:18:22;;;33024:50;33091:18;;2003:41:5;32771:344:22;889:483:1;959:13;999:2;984:4;:11;:17;980:388;;1029:4;1018:26;;;;;;;;;;;;:::i;980:388::-;1061:4;:11;1076:2;1061:17;1057:311;;1088:7;1107:53;1118:2;1114:1;:6;;;:22;;;;;1124:4;1129:1;1124:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1124:7:1;:12;;1114:22;1107:53;;;1148:3;;;;:::i;:::-;;;;1107:53;;;1167:23;1203:1;1193:12;;-1:-1:-1;;;;;1193:12:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1193:12:1;;1167:38;;1222:1;1218:5;;1213:83;1229:2;1225:1;:6;;;:22;;;;;1235:4;1240:1;1235:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1235:7:1;:12;;1225:22;1213:83;;;1280:4;1285:1;1280:7;;;;;;;;;;:::i;:::-;;;;;;;;;1264:10;1275:1;1264:13;;;;;;;;;;:::i;:::-;;;;:23;-1:-1:-1;;;;;1264:23:1;;;;;;;;-1:-1:-1;1249:3:1;;;;:::i;:::-;;;;1213:83;;1057:311;-1:-1:-1;;1349:12:1;;;;;;;;;;;;-1:-1:-1;;;1349:12:1;;;;;889:483::o;1057:311::-;889:483;;;:::o;763:205:11:-;902:58;;-1:-1:-1;;;;;34381:32:22;;902:58:11;;;34363:51:22;34430:18;;;34423:34;;;875:86:11;;895:5;;-1:-1:-1;;;925:23:11;34336:18:22;;902:58:11;;;;-1:-1:-1;;902:58:11;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:11;-1:-1:-1;;;;;;902:58:11;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;34726:15:22;;;1139:68:11;;;34708:34:22;34778:15;;34758:18;;;34751:43;34810:18;;;34803:34;;;1112:96:11;;1132:5;;-1:-1:-1;;;1162:27:11;34643:18:22;;1139:68:11;34468:375:22;3747:706:11;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:11;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:11;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:11;;35300:2:22;4351:85:11;;;35282:21:22;35339:2;35319:18;;;35312:30;35378:34;35358:18;;;35351:62;-1:-1:-1;;;35429:18:22;;;35422:40;35479:19;;4351:85:11;35098:406:22;3872:223:12;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;5240;5254:23;5281:6;-1:-1:-1;;;;;5281:11:12;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:12:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;-1:-1:-1;;;;;1465:19:12;;;7907:60;;;;-1:-1:-1;;;7907:60:12;;36118:2:22;7907:60:12;;;36100:21:22;36157:2;36137:18;;;36130:30;36196:31;36176:18;;;36169:59;36245:18;;7907:60:12;35916:353:22;7907:60:12;-1:-1:-1;8002:10:12;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:12;;;;;;;;:::i;404:258:22:-;476:1;486:113;500:6;497:1;494:13;486:113;;;576:11;;;570:18;557:11;;;550:39;522:2;515:10;486:113;;;617:6;614:1;611:13;608:48;;;-1:-1:-1;;652:1:22;634:16;;627:27;404:258::o;667:::-;709:3;747:5;741:12;774:6;769:3;762:19;790:63;846:6;839:4;834:3;830:14;823:4;816:5;812:16;790:63;:::i;:::-;907:2;886:15;-1:-1:-1;;882:29:22;873:39;;;;914:4;869:50;;667:258;-1:-1:-1;;667:258:22:o;930:220::-;1079:2;1068:9;1061:21;1042:4;1099:45;1140:2;1129:9;1125:18;1117:6;1099:45;:::i;1155:173::-;1223:20;;-1:-1:-1;;;;;1272:31:22;;1262:42;;1252:70;;1318:1;1315;1308:12;1333:254;1401:6;1409;1462:2;1450:9;1441:7;1437:23;1433:32;1430:52;;;1478:1;1475;1468:12;1430:52;1501:29;1520:9;1501:29;:::i;:::-;1491:39;1577:2;1562:18;;;;1549:32;;-1:-1:-1;;;1333:254:22:o;2203:328::-;2280:6;2288;2296;2349:2;2337:9;2328:7;2324:23;2320:32;2317:52;;;2365:1;2362;2355:12;2317:52;2388:29;2407:9;2388:29;:::i;:::-;2378:39;;2436:38;2470:2;2459:9;2455:18;2436:38;:::i;:::-;2426:48;;2521:2;2510:9;2506:18;2493:32;2483:42;;2203:328;;;;;:::o;3683:254::-;3751:6;3759;3812:2;3800:9;3791:7;3787:23;3783:32;3780:52;;;3828:1;3825;3818:12;3780:52;3864:9;3851:23;3841:33;;3893:38;3927:2;3916:9;3912:18;3893:38;:::i;:::-;3883:48;;3683:254;;;;;:::o;3942:118::-;4028:5;4021:13;4014:21;4007:5;4004:32;3994:60;;4050:1;4047;4040:12;4065:315;4130:6;4138;4191:2;4179:9;4170:7;4166:23;4162:32;4159:52;;;4207:1;4204;4197:12;4159:52;4230:29;4249:9;4230:29;:::i;:::-;4220:39;;4309:2;4298:9;4294:18;4281:32;4322:28;4344:5;4322:28;:::i;:::-;4369:5;4359:15;;;4065:315;;;;;:::o;4385:309::-;4450:6;4458;4511:2;4499:9;4490:7;4486:23;4482:32;4479:52;;;4527:1;4524;4517:12;4479:52;4563:9;4550:23;4540:33;;4623:2;4612:9;4608:18;4595:32;4636:28;4658:5;4636:28;:::i;4699:186::-;4758:6;4811:2;4799:9;4790:7;4786:23;4782:32;4779:52;;;4827:1;4824;4817:12;4779:52;4850:29;4869:9;4850:29;:::i;4890:188::-;4958:20;;-1:-1:-1;;;;;5007:46:22;;4997:57;;4987:85;;5068:1;5065;5058:12;5083:328;5160:6;5168;5176;5229:2;5217:9;5208:7;5204:23;5200:32;5197:52;;;5245:1;5242;5235:12;5197:52;5268:29;5287:9;5268:29;:::i;:::-;5258:39;;5344:2;5333:9;5329:18;5316:32;5306:42;;5367:38;5401:2;5390:9;5386:18;5367:38;:::i;:::-;5357:48;;5083:328;;;;;:::o;5416:276::-;5474:6;5527:2;5515:9;5506:7;5502:23;5498:32;5495:52;;;5543:1;5540;5533:12;5495:52;5582:9;5569:23;5632:10;5625:5;5621:22;5614:5;5611:33;5601:61;;5658:1;5655;5648:12;6482:348;6534:8;6544:6;6598:3;6591:4;6583:6;6579:17;6575:27;6565:55;;6616:1;6613;6606:12;6565:55;-1:-1:-1;6639:20:22;;-1:-1:-1;;;;;6671:30:22;;6668:50;;;6714:1;6711;6704:12;6668:50;6751:4;6743:6;6739:17;6727:29;;6803:3;6796:4;6787:6;6779;6775:19;6771:30;6768:39;6765:59;;;6820:1;6817;6810:12;6765:59;6482:348;;;;;:::o;6835:367::-;6898:8;6908:6;6962:3;6955:4;6947:6;6943:17;6939:27;6929:55;;6980:1;6977;6970:12;6929:55;-1:-1:-1;7003:20:22;;-1:-1:-1;;;;;7035:30:22;;7032:50;;;7078:1;7075;7068:12;7032:50;7115:4;7107:6;7103:17;7091:29;;7175:3;7168:4;7158:6;7155:1;7151:14;7143:6;7139:27;7135:38;7132:47;7129:67;;;7192:1;7189;7182:12;7207:1351;7370:6;7378;7386;7394;7402;7410;7418;7426;7479:3;7467:9;7458:7;7454:23;7450:33;7447:53;;;7496:1;7493;7486:12;7447:53;7536:9;7523:23;-1:-1:-1;;;;;7606:2:22;7598:6;7595:14;7592:34;;;7622:1;7619;7612:12;7592:34;7661:59;7712:7;7703:6;7692:9;7688:22;7661:59;:::i;:::-;7739:8;;-1:-1:-1;7635:85:22;-1:-1:-1;7827:2:22;7812:18;;7799:32;;-1:-1:-1;7843:16:22;;;7840:36;;;7872:1;7869;7862:12;7840:36;7911:72;7975:7;7964:8;7953:9;7949:24;7911:72;:::i;:::-;8002:8;;-1:-1:-1;7885:98:22;-1:-1:-1;8090:2:22;8075:18;;8062:32;;-1:-1:-1;8106:16:22;;;8103:36;;;8135:1;8132;8125:12;8103:36;8174:72;8238:7;8227:8;8216:9;8212:24;8174:72;:::i;:::-;8265:8;;-1:-1:-1;8148:98:22;-1:-1:-1;8353:2:22;8338:18;;8325:32;;-1:-1:-1;8369:16:22;;;8366:36;;;8398:1;8395;8388:12;8366:36;;8437:61;8490:7;8479:8;8468:9;8464:24;8437:61;:::i;:::-;7207:1351;;;;-1:-1:-1;7207:1351:22;;-1:-1:-1;7207:1351:22;;;;;;8517:8;-1:-1:-1;;;7207:1351:22:o;9605:328::-;9682:6;9690;9698;9751:2;9739:9;9730:7;9726:23;9722:32;9719:52;;;9767:1;9764;9757:12;9719:52;9803:9;9790:23;9780:33;;9832:38;9866:2;9855:9;9851:18;9832:38;:::i;:::-;9822:48;;9889:38;9923:2;9912:9;9908:18;9889:38;:::i;10941:260::-;11009:6;11017;11070:2;11058:9;11049:7;11045:23;11041:32;11038:52;;;11086:1;11083;11076:12;11038:52;11109:29;11128:9;11109:29;:::i;:::-;11099:39;;11157:38;11191:2;11180:9;11176:18;11157:38;:::i;11206:260::-;11274:6;11282;11335:2;11323:9;11314:7;11310:23;11306:32;11303:52;;;11351:1;11348;11341:12;11303:52;11374:29;11393:9;11374:29;:::i;11471:322::-;11548:6;11556;11564;11617:2;11605:9;11596:7;11592:23;11588:32;11585:52;;;11633:1;11630;11623:12;11585:52;11669:9;11656:23;11646:33;;11726:2;11715:9;11711:18;11698:32;11688:42;;11749:38;11783:2;11772:9;11768:18;11749:38;:::i;12792:380::-;12871:1;12867:12;;;;12914;;;12935:61;;12989:4;12981:6;12977:17;12967:27;;12935:61;13042:2;13034:6;13031:14;13011:18;13008:38;13005:161;;13088:10;13083:3;13079:20;13076:1;13069:31;13123:4;13120:1;13113:15;13151:4;13148:1;13141:15;13005:161;;12792:380;;;:::o;13177:127::-;13238:10;13233:3;13229:20;13226:1;13219:31;13269:4;13266:1;13259:15;13293:4;13290:1;13283:15;13309:128;13349:3;13380:1;13376:6;13373:1;13370:13;13367:39;;;13386:18;;:::i;:::-;-1:-1:-1;13422:9:22;;13309:128::o;13984:168::-;14024:7;14090:1;14086;14082:6;14078:14;14075:1;14072:21;14067:1;14060:9;14053:17;14049:45;14046:71;;;14097:18;;:::i;:::-;-1:-1:-1;14137:9:22;;13984:168::o;14157:217::-;14197:1;14223;14213:132;;14267:10;14262:3;14258:20;14255:1;14248:31;14302:4;14299:1;14292:15;14330:4;14327:1;14320:15;14213:132;-1:-1:-1;14359:9:22;;14157:217::o;14379:267::-;14418:4;14447:9;;;14472:10;;-1:-1:-1;;;14491:19:22;;14484:27;;14468:44;14465:70;;;14515:18;;:::i;:::-;-1:-1:-1;;;;;14562:27:22;;14555:35;;14547:44;;14544:70;;;14594:18;;:::i;:::-;-1:-1:-1;;14631:9:22;;14379:267::o;14651:246::-;14691:4;-1:-1:-1;;;;;14804:10:22;;;;14774;;14826:12;;;14823:38;;;14841:18;;:::i;:::-;14878:13;;14651:246;-1:-1:-1;;;14651:246:22:o;15459:253::-;15499:3;-1:-1:-1;;;;;15588:2:22;15585:1;15581:10;15618:2;15615:1;15611:10;15649:3;15645:2;15641:12;15636:3;15633:21;15630:47;;;15657:18;;:::i;:::-;15693:13;;15459:253;-1:-1:-1;;;;15459:253:22:o;16223:764::-;-1:-1:-1;;;16629:3:22;16622:32;16604:3;16683:6;16677:13;16699:62;16754:6;16749:2;16744:3;16740:12;16733:4;16725:6;16721:17;16699:62;:::i;:::-;-1:-1:-1;;;16820:2:22;16780:16;;;16812:11;;;16805:24;16854:13;;16876:63;16854:13;16925:2;16917:11;;16910:4;16898:17;;16876:63;:::i;:::-;16959:17;16978:2;16955:26;;16223:764;-1:-1:-1;;;;16223:764:22:o;16992:127::-;17053:10;17048:3;17044:20;17041:1;17034:31;17084:4;17081:1;17074:15;17108:4;17105:1;17098:15;17250:545;17352:2;17347:3;17344:11;17341:448;;;17388:1;17413:5;17409:2;17402:17;17458:4;17454:2;17444:19;17528:2;17516:10;17512:19;17509:1;17505:27;17499:4;17495:38;17564:4;17552:10;17549:20;17546:47;;;-1:-1:-1;17587:4:22;17546:47;17642:2;17637:3;17633:12;17630:1;17626:20;17620:4;17616:31;17606:41;;17697:82;17715:2;17708:5;17705:13;17697:82;;;17760:17;;;17741:1;17730:13;17697:82;;;17701:3;;;17250:545;;;:::o;17971:1206::-;-1:-1:-1;;;;;18090:3:22;18087:27;18084:53;;;18117:18;;:::i;:::-;18146:94;18236:3;18196:38;18228:4;18222:11;18196:38;:::i;:::-;18190:4;18146:94;:::i;:::-;18266:1;18291:2;18286:3;18283:11;18308:1;18303:616;;;;18963:1;18980:3;18977:93;;;-1:-1:-1;19036:19:22;;;19023:33;18977:93;-1:-1:-1;;17928:1:22;17924:11;;;17920:24;17916:29;17906:40;17952:1;17948:11;;;17903:57;19083:78;;18276:895;;18303:616;17197:1;17190:14;;;17234:4;17221:18;;-1:-1:-1;;18339:17:22;;;18440:9;18462:229;18476:7;18473:1;18470:14;18462:229;;;18565:19;;;18552:33;18537:49;;18672:4;18657:20;;;;18625:1;18613:14;;;;18492:12;18462:229;;;18466:3;18719;18710:7;18707:16;18704:159;;;18843:1;18839:6;18833:3;18827;18824:1;18820:11;18816:21;18812:34;18808:39;18795:9;18790:3;18786:19;18773:33;18769:79;18761:6;18754:95;18704:159;;;18906:1;18900:3;18897:1;18893:11;18889:19;18883:4;18876:33;18276:895;;;17971:1206;;;:::o;19182:127::-;19243:10;19238:3;19234:20;19231:1;19224:31;19274:4;19271:1;19264:15;19298:4;19295:1;19288:15;19314:135;19353:3;19374:17;;;19371:43;;19394:18;;:::i;:::-;-1:-1:-1;19441:1:22;19430:13;;19314:135::o;19454:388::-;19611:2;19600:9;19593:21;19650:6;19645:2;19634:9;19630:18;19623:34;19707:6;19699;19694:2;19683:9;19679:18;19666:48;19763:1;19734:22;;;19758:2;19730:31;;;19723:42;;;;19826:2;19805:15;;;-1:-1:-1;;19801:29:22;19786:45;19782:54;;19454:388;-1:-1:-1;19454:388:22:o;22970:179::-;23048:13;;23101:22;23090:34;;23080:45;;23070:73;;23139:1;23136;23129:12;23154:473;23257:6;23265;23273;23281;23289;23342:3;23330:9;23321:7;23317:23;23313:33;23310:53;;;23359:1;23356;23349:12;23310:53;23382:39;23411:9;23382:39;:::i;:::-;23372:49;;23461:2;23450:9;23446:18;23440:25;23430:35;;23505:2;23494:9;23490:18;23484:25;23474:35;;23549:2;23538:9;23534:18;23528:25;23518:35;;23572:49;23616:3;23605:9;23601:19;23572:49;:::i;:::-;23562:59;;23154:473;;;;;;;;:::o;24440:125::-;24480:4;24508:1;24505;24502:8;24499:34;;;24513:18;;:::i;:::-;-1:-1:-1;24550:9:22;;24440:125::o;24989:1089::-;25179:2;25168:9;25161:21;25142:4;25205:45;25246:2;25235:9;25231:18;25223:6;25205:45;:::i;:::-;25269:2;25319:9;25311:6;25307:22;25302:2;25291:9;25287:18;25280:50;25350:1;25383:6;25377:13;25413:36;25439:9;25413:36;:::i;:::-;25458:22;;;25499:1;25516:18;;;25543:152;;;;25709:1;25704:348;;;;25509:543;;25543:152;-1:-1:-1;;25588:24:22;;25571:15;;;25564:49;25663:14;;25656:22;25653:1;25649:30;25637:43;;25633:52;;;-1:-1:-1;25543:152:22;;25704:348;25735:6;25732:1;25725:17;25783:2;25780:1;25770:16;25808:1;25822:177;25836:6;25833:1;25830:13;25822:177;;;25926:14;;25905;;;25901:23;;25894:47;25969:16;;;;25851:10;;25822:177;;;26023:14;;26019:23;;;-1:-1:-1;;25509:543:22;-1:-1:-1;26069:3:22;;24989:1089;-1:-1:-1;;;;;;;;;24989:1089:22:o;26083:288::-;26152:6;26205:2;26193:9;26184:7;26180:23;26176:32;26173:52;;;26221:1;26218;26211:12;26173:52;26253:9;26247:16;-1:-1:-1;;;;;26296:5:22;26292:30;26285:5;26282:41;26272:69;;26337:1;26334;26327:12;30739:274;30868:3;30906:6;30900:13;30922:53;30968:6;30963:3;30956:4;30948:6;30944:17;30922:53;:::i;:::-;30991:16;;;;;30739:274;-1:-1:-1;;30739:274:22:o;33120:884::-;33200:6;33253:2;33241:9;33232:7;33228:23;33224:32;33221:52;;;33269:1;33266;33259:12;33221:52;33302:9;33296:16;-1:-1:-1;;;;;33372:2:22;33364:6;33361:14;33358:34;;;33388:1;33385;33378:12;33358:34;33426:6;33415:9;33411:22;33401:32;;33471:7;33464:4;33460:2;33456:13;33452:27;33442:55;;33493:1;33490;33483:12;33442:55;33522:2;33516:9;33544:2;33540;33537:10;33534:36;;;33550:18;;:::i;:::-;33625:2;33619:9;33593:2;33679:13;;-1:-1:-1;;33675:22:22;;;33699:2;33671:31;33667:40;33655:53;;;33723:18;;;33743:22;;;33720:46;33717:72;;;33769:18;;:::i;:::-;33809:10;33805:2;33798:22;33844:2;33836:6;33829:18;33884:7;33879:2;33874;33870;33866:11;33862:20;33859:33;33856:53;;;33905:1;33902;33895:12;33856:53;33918:55;33970:2;33965;33957:6;33953:15;33948:2;33944;33940:11;33918:55;:::i;34009:175::-;34046:3;34090:4;34083:5;34079:16;34119:4;34110:7;34107:17;34104:43;;34127:18;;:::i;:::-;34176:1;34163:15;;34009:175;-1:-1:-1;;34009:175:22:o;34848:245::-;34915:6;34968:2;34956:9;34947:7;34943:23;34939:32;34936:52;;;34984:1;34981;34974:12;34936:52;35016:9;35010:16;35035:28;35057:5;35035:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "3791": [
        {
          "start": 1391,
          "length": 32
        },
        {
          "start": 1803,
          "length": 32
        },
        {
          "start": 6298,
          "length": 32
        },
        {
          "start": 7998,
          "length": 32
        },
        {
          "start": 12034,
          "length": 32
        },
        {
          "start": 12658,
          "length": 32
        },
        {
          "start": 14042,
          "length": 32
        },
        {
          "start": 15065,
          "length": 32
        }
      ],
      "3794": [
        {
          "start": 1428,
          "length": 32
        },
        {
          "start": 2886,
          "length": 32
        },
        {
          "start": 6248,
          "length": 32
        },
        {
          "start": 13369,
          "length": 32
        },
        {
          "start": 14282,
          "length": 32
        }
      ],
      "3796": [
        {
          "start": 1468,
          "length": 32
        },
        {
          "start": 2580,
          "length": 32
        },
        {
          "start": 8668,
          "length": 32
        },
        {
          "start": 8717,
          "length": 32
        },
        {
          "start": 8882,
          "length": 32
        }
      ],
      "3798": [
        {
          "start": 1051,
          "length": 32
        },
        {
          "start": 1510,
          "length": 32
        },
        {
          "start": 8943,
          "length": 32
        },
        {
          "start": 8992,
          "length": 32
        },
        {
          "start": 9157,
          "length": 32
        }
      ],
      "3800": [
        {
          "start": 2828,
          "length": 32
        },
        {
          "start": 3567,
          "length": 32
        },
        {
          "start": 9221,
          "length": 32
        }
      ],
      "3802": [
        {
          "start": 3387,
          "length": 32
        },
        {
          "start": 3602,
          "length": 32
        },
        {
          "start": 12874,
          "length": 32
        },
        {
          "start": 13121,
          "length": 32
        }
      ],
      "3804": [
        {
          "start": 1246,
          "length": 32
        },
        {
          "start": 3640,
          "length": 32
        },
        {
          "start": 5094,
          "length": 32
        }
      ],
      "3806": [
        {
          "start": 1930,
          "length": 32
        },
        {
          "start": 5201,
          "length": 32
        }
      ],
      "3809": [
        {
          "start": 1550,
          "length": 32
        },
        {
          "start": 3290,
          "length": 32
        },
        {
          "start": 6794,
          "length": 32
        },
        {
          "start": 10211,
          "length": 32
        }
      ],
      "3817": [
        {
          "start": 1590,
          "length": 32
        },
        {
          "start": 3097,
          "length": 32
        },
        {
          "start": 5954,
          "length": 32
        },
        {
          "start": 6391,
          "length": 32
        }
      ],
      "3819": [
        {
          "start": 2657,
          "length": 32
        },
        {
          "start": 5826,
          "length": 32
        }
      ],
      "3821": [
        {
          "start": 1630,
          "length": 32
        },
        {
          "start": 3456,
          "length": 32
        },
        {
          "start": 4318,
          "length": 32
        },
        {
          "start": 5878,
          "length": 32
        }
      ],
      "3825": [
        {
          "start": 1670,
          "length": 32
        },
        {
          "start": 3329,
          "length": 32
        }
      ],
      "3829": [
        {
          "start": 3155,
          "length": 32
        },
        {
          "start": 3680,
          "length": 32
        }
      ],
      "3831": [
        {
          "start": 3194,
          "length": 32
        },
        {
          "start": 3718,
          "length": 32
        }
      ],
      "3873": [
        {
          "start": 1309,
          "length": 32
        },
        {
          "start": 1712,
          "length": 32
        }
      ],
      "3879": [
        {
          "start": 1753,
          "length": 32
        },
        {
          "start": 1969,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CIRCUIT_BREAKER_ADDRESS()": "ad0c3bb5",
    "COMPTROLLER_ADDRESS()": "fbaa8b85",
    "DEPLOYER_ADDRESS()": "d2a156e0",
    "FRAXLEND_WHITELIST_ADDRESS()": "ef14900d",
    "TIME_LOCK_ADDRESS()": "657a409c",
    "addCollateral(uint256,address)": "cadac479",
    "addInterest()": "0d09365c",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approvedBorrowers(address)": "c936c624",
    "approvedLenders(address)": "afa85de6",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "borrowAsset(uint256,uint256,address)": "e5f13b16",
    "borrowerWhitelistActive()": "2165d72f",
    "changeFee(uint32)": "8142dd53",
    "cleanLiquidationFee()": "11a2e4bc",
    "collateralContract()": "c6e1c7c9",
    "currentRateInfo()": "95d14ca8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "dirtyLiquidationFee()": "4732428c",
    "exchangeRateInfo()": "fbbbf94c",
    "getConstants()": "9a295e73",
    "getImmutableAddressBool()": "36fad62d",
    "getImmutableUint256()": "fea10d5d",
    "getPairAccounting()": "cdd72d52",
    "getUserSnapshot(address)": "b68d0a09",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,address[],address[],bytes)": "99024fc1",
    "lenderWhitelistActive()": "4962e494",
    "liquidate(uint128,uint256,address)": "721b0a47",
    "maturityDate()": "d59624b4",
    "maxLTV()": "f384bd05",
    "name()": "06fdde03",
    "oracleDivide()": "0053f733",
    "oracleMultiply()": "9bdff2e6",
    "oracleNormalization()": "c10c92a1",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "penaltyRate()": "d6b7494f",
    "rateContract()": "eee24219",
    "rateInitCallData()": "c7be9786",
    "redeem(uint256,address,address)": "ba087652",
    "removeCollateral(uint256,address)": "d41ddc96",
    "renounceOwnership()": "715018a6",
    "repayAsset(uint256,address)": "3d417d2d",
    "setSwapper(address,bool)": "3f2617cb",
    "setTimeLock(address)": "891682d2",
    "swappers(address)": "8cad7fbe",
    "symbol()": "95d89b41",
    "toAssetAmount(uint256,bool)": "404ffa7a",
    "toAssetShares(uint256,bool)": "56968f97",
    "toBorrowAmount(uint256,bool)": "94e301e0",
    "toBorrowShares(uint256,bool)": "c270a544",
    "totalAsset()": "f9557ccb",
    "totalBorrow()": "8285ef40",
    "totalCollateral()": "4ac8eb5f",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "updateExchangeRate()": "02ce728f",
    "userBorrowShares(address)": "4fd422df",
    "userCollateralBalance(address)": "b5af3062",
    "version()": "54fd4d50",
    "withdrawFees(uint128,address)": "daf33f2a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_configData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_immutables\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_maxLTV\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBorrowerWhitelistActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isLenderWhitelistActive\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadProtocolFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadSwapper\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowerSolvent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowerWhitelistRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"Insolvent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_request\",\"type\":\"uint256\"}],\"name\":\"InsufficientAssetsInContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_actual\",\"type\":\"address\"}],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDeployer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NotOnWhitelist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyApprovedBorrowers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyApprovedLenders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTimeLock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleLTEZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"PastDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PastMaturity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolOrOwnerOnly\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_actual\",\"type\":\"uint256\"}],\"name\":\"SlippageTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"AddCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interestEarned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deltaTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feesShare\",\"type\":\"uint256\"}],\"name\":\"AddInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesAdded\",\"type\":\"uint256\"}],\"name\":\"BorrowAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_newFee\",\"type\":\"uint32\"}],\"name\":\"ChangeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralForLiquidator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesToLiquidate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLiquidatorToRepay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sharesToAdjust\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToAdjust\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"RemoveCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToRepay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"RepayAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"SetApprovedLender\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"SetSwapper\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"SetTimeLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"UpdateExchangeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ratePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deltaTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_utilizationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRatePerSec\",\"type\":\"uint256\"}],\"name\":\"UpdateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_shares\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToTransfer\",\"type\":\"uint256\"}],\"name\":\"WithdrawFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CIRCUIT_BREAKER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPTROLLER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPLOYER_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FRAXLEND_WHITELIST_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_LOCK_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesShare\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_newRate\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedBorrowers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedLenders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"borrowAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerWhitelistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newFee\",\"type\":\"uint32\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanLiquidationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRateInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"lastBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ratePerSec\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dirtyLiquidationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateInfo\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"exchangeRate\",\"type\":\"uint224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConstants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_LTV_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_LIQ_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_UTIL_PREC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_FEE_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_EXCHANGE_PRECISION\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_DEFAULT_INT\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_DEFAULT_PROTOCOL_FEE\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_MAX_PROTOCOL_FEE\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImmutableAddressBool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_assetContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleMultiply\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleDivide\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rateContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DEPLOYER_CONTRACT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_COMPTROLLER_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_MugenLending_WHITELIST\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_borrowerWhitelistActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_lenderWhitelistActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImmutableUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleNormalization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLTV\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cleanLiquidationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPairAccounting\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_totalAssetAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalAssetShares\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalBorrowAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalBorrowShares\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_totalCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUserSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_userAssetShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCollateralBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_approvedBorrowers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_approvedLenders\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_rateInitCallData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderWhitelistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_sharesToLiquidate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralForLiquidator\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDivide\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleMultiply\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleNormalization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateContract\",\"outputs\":[{\"internalType\":\"contract IRateCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInitCallData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"repayAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToRepay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approval\",\"type\":\"bool\"}],\"name\":\"setSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setTimeLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swappers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toAssetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toAssetShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toBorrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_roundUp\",\"type\":\"bool\"}],\"name\":\"toBorrowShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAsset\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shares\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrow\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shares\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBorrowShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_shares\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToTransfer\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ChangeFee(uint32)\":{\"params\":{\"_newFee\":\"The new fee\"}},\"SetApprovedLender(address,bool)\":{\"params\":{\"_address\":\"The address\",\"_approval\":\"The approval\"}},\"SetSwapper(address,bool)\":{\"params\":{\"_approval\":\"The approval\",\"_swapper\":\"The swapper address\"}},\"SetTimeLock(address,address)\":{\"params\":{\"_newAddress\":\"The new address\",\"_oldAddress\":\"The original address\"}},\"WithdrawFees(uint128,address,uint256)\":{\"params\":{\"_amountToTransfer\":\"The amount of fees redeemed\",\"_recipient\":\"To whom the assets were sent\",\"_shares\":\"Number of _shares (fTokens) redeemed\"}}},\"kind\":\"dev\",\"methods\":{\"addCollateral(uint256,address)\":{\"details\":\"msg.sender must call ERC20.approve() on the Collateral Token contract prior to invocation\",\"params\":{\"_borrower\":\"The account to be credited\",\"_collateralAmount\":\"The amount of Collateral Token to be added to borrower's position\"}},\"addInterest()\":{\"returns\":{\"_interestEarned\":\"The amount of interest accrued by all borrowers\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"borrowAsset(uint256,uint256,address)\":{\"details\":\"Borrower must call ```ERC20.approve``` on the Collateral Token contract if applicable\",\"params\":{\"_borrowAmount\":\"The amount of Asset Token to borrow\",\"_collateralAmount\":\"The amount of Collateral Token to transfer to Pair\",\"_receiver\":\"The address which will receive the Asset Tokens\"},\"returns\":{\"_shares\":\"The number of borrow Shares the msg.sender will be debited\"}},\"changeFee(uint32)\":{\"params\":{\"_newFee\":\"The new fee\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling function\",\"params\":{\"_amount\":\"The amount of Asset Token to transfer to Pair\",\"_receiver\":\"The address to receive the Asset Shares (fTokens)\"},\"returns\":{\"_sharesReceived\":\"The number of fTokens received for the deposit\"}},\"getImmutableAddressBool()\":{\"returns\":{\"_COMPTROLLER_ADDRESS\":\"Address of comptroller\",\"_DEPLOYER_CONTRACT\":\"Address of deployer contract\",\"_MugenLending_WHITELIST\":\"Address of whitelist\",\"_assetContract\":\"Address of asset\",\"_borrowerWhitelistActive\":\"Boolean is borrower whitelist active\",\"_collateralContract\":\"Address of collateral\",\"_lenderWhitelistActive\":\"Boolean is lender whitelist active\",\"_oracleDivide\":\"Address of oracle denominator\",\"_oracleMultiply\":\"Address of oracle numerator\",\"_rateContract\":\"Address of rate contract\"}},\"getImmutableUint256()\":{\"returns\":{\"_cleanLiquidationFee\":\"Clean Liquidation Fee\",\"_maturityDate\":\"Maturity Date\",\"_maxLTV\":\"Maximum LTV\",\"_oracleNormalization\":\"Oracle normalization factor\",\"_penaltyRate\":\"Penalty Rate\"}},\"getPairAccounting()\":{\"returns\":{\"_totalAssetAmount\":\"Total assets deposited and interest accrued, total claims\",\"_totalAssetShares\":\"Total fTokens\",\"_totalBorrowAmount\":\"Total borrows\",\"_totalBorrowShares\":\"Total borrow shares\",\"_totalCollateral\":\"Total collateral\"}},\"getUserSnapshot(address)\":{\"params\":{\"_address\":\"The user address\"},\"returns\":{\"_userAssetShares\":\"The user fToken balance\",\"_userBorrowShares\":\"The user borrow shares\",\"_userCollateralBalance\":\"The user collateral balance\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,address[],address[],bytes)\":{\"details\":\"This function can only be called by the deployer\",\"params\":{\"_approvedBorrowers\":\"An array of approved borrower addresses\",\"_approvedLenders\":\"An array of approved lender addresses\",\"_name\":\"The name of the contract\",\"_rateInitCallData\":\"The configuration data for the Rate Calculator contract\"}},\"liquidate(uint128,uint256,address)\":{\"details\":\"Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling ```Liquidate()```\",\"params\":{\"_borrower\":\"The account for which the repayment is credited and from whom collateral will be taken\",\"_deadline\":\"The timestamp after which tx will revert\",\"_sharesToLiquidate\":\"The number of Borrow Shares repaid by the liquidator\"},\"returns\":{\"_collateralForLiquidator\":\"The amount of Collateral Token transferred to the liquidator\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"redeem(uint256,address,address)\":{\"params\":{\"_owner\":\"The owner of the Asset Shares (fTokens)\",\"_receiver\":\"The address to which the Asset Tokens will be transferred\",\"_shares\":\"The number of Asset Shares (fTokens) to burn for Asset Tokens\"},\"returns\":{\"_amountToReturn\":\"The amount of Asset Tokens to be transferred\"}},\"removeCollateral(uint256,address)\":{\"details\":\"msg.sender must be solvent after invocation or transaction will revert\",\"params\":{\"_collateralAmount\":\"The amount of Collateral Token to transfer\",\"_receiver\":\"The address to receive the transferred funds\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repayAsset(uint256,address)\":{\"details\":\"Caller must first invoke ```ERC20.approve()``` for the Asset Token contract\",\"params\":{\"_borrower\":\"The account for which the debt will be reduced\",\"_shares\":\"The number of Borrow Shares which will be repaid by the call\"},\"returns\":{\"_amountToRepay\":\"The amount of Asset Tokens which were transferred in order to repay the Borrow Shares\"}},\"setSwapper(address,bool)\":{\"details\":\"@param _swapper The swapper address\",\"params\":{\"_approval\":\"The approval\"}},\"setTimeLock(address)\":{\"params\":{\"_newAddress\":\"the new time lock address\"}},\"toAssetAmount(uint256,bool)\":{\"params\":{\"_roundUp\":\"Whether to round up after division\",\"_shares\":\"Shares of asset (fToken)\"},\"returns\":{\"_0\":\"The amount of asset\"}},\"toAssetShares(uint256,bool)\":{\"params\":{\"_amount\":\"The amount of asset\",\"_roundUp\":\"Whether to round up after division\"},\"returns\":{\"_0\":\"The number of shares (fTokens)\"}},\"toBorrowAmount(uint256,bool)\":{\"params\":{\"_roundUp\":\"Whether to roundup during division\",\"_shares\":\"Shares of borrow\"},\"returns\":{\"_0\":\"The amount of asset\"}},\"toBorrowShares(uint256,bool)\":{\"params\":{\"_amount\":\"Amount of borrow\",\"_roundUp\":\"Whether to roundup during division\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateExchangeRate()\":{\"details\":\"This function is invoked at most once per block as these queries can be expensive\",\"returns\":{\"_exchangeRate\":\"The new exchange rate\"}},\"withdrawFees(uint128,address)\":{\"params\":{\"_recipient\":\"Address to send the assets\",\"_shares\":\"Number of fTokens to redeem\"},\"returns\":{\"_amountToTransfer\":\"Amount of assets sent to recipient\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AddInterest(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```AddInterest``` event is emitted when interest is accrued by borrowers\"},\"BorrowAsset(address,address,uint256,uint256)\":{\"notice\":\"The ```BorrowAsset``` event is emitted when a borrower increases their position\"},\"ChangeFee(uint32)\":{\"notice\":\"The ```ChangeFee``` event first when the fee is changed\"},\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"The ```Deposit``` event fires when a user deposits assets to the pair\"},\"Liquidate(address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```Liquidate``` event is emitted when a liquidation occurs\"},\"RemoveCollateral(address,uint256,address,address)\":{\"notice\":\"The ```RemoveCollateral``` event is emitted when collateral is removed from a borrower's position\"},\"RepayAsset(address,address,uint256,uint256)\":{\"notice\":\"The ```RepayAsset``` event is emitted whenever a debt position is repaid\"},\"SetApprovedLender(address,bool)\":{\"notice\":\"The ```SetApprovedLender``` event fires when a lender is black or whitelisted\"},\"SetSwapper(address,bool)\":{\"notice\":\"The ```SetSwapper``` event fires whenever a swapper is black or whitelisted\"},\"SetTimeLock(address,address)\":{\"notice\":\"The ```SetTimeLock``` event fires when the TIME_LOCK_ADDRESS is set\"},\"UpdateExchangeRate(uint256)\":{\"notice\":\"The ```UpdateExchangeRate``` event is emitted when the Collateral:Asset exchange rate is updated\"},\"UpdateRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"The ```UpdateRate``` event is emitted when the interest rate is updated\"},\"Withdraw(address,address,address,uint256,uint256)\":{\"notice\":\"The ```Withdraw``` event fires when a user redeems their fTokens for the underlying asset\"},\"WithdrawFees(uint128,address,uint256)\":{\"notice\":\"The ```WithdrawFees``` event fires when the fees are withdrawn\"}},\"kind\":\"user\",\"methods\":{\"addCollateral(uint256,address)\":{\"notice\":\"The ```addCollateral``` function allows the caller to add Collateral Token to a borrowers position\"},\"addInterest()\":{\"notice\":\"The ```addInterest``` function is a public implementation of _addInterest and allows 3rd parties to trigger interest accrual\"},\"borrowAsset(uint256,uint256,address)\":{\"notice\":\"The ```borrowAsset``` function allows a user to open/increase a borrow position\"},\"changeFee(uint32)\":{\"notice\":\"The ```changeFee``` function changes the protocol fee, max 50%\"},\"currentRateInfo()\":{\"notice\":\"Stores information about the current interest rate\"},\"deposit(uint256,address)\":{\"notice\":\"The ```deposit``` function allows a user to Lend Assets by specifying the amount of Asset Tokens to lend\"},\"exchangeRateInfo()\":{\"notice\":\"Stores information about the current exchange rate. Collateral:Asset ratio\"},\"getImmutableAddressBool()\":{\"notice\":\"The ```getImmutableAddressBool``` function gets all the address and bool configs\"},\"getImmutableUint256()\":{\"notice\":\"The ```getImmutableUint256``` function gets all uint256 config values\"},\"getPairAccounting()\":{\"notice\":\"The ```getPairAccounting``` function gets all pair level accounting numbers\"},\"getUserSnapshot(address)\":{\"notice\":\"The ```getUserSnapshot``` function gets user level accounting data\"},\"initialize(string,address[],address[],bytes)\":{\"notice\":\"The ```initialize``` function is called immediately after deployment\"},\"liquidate(uint128,uint256,address)\":{\"notice\":\"The ```liquidate``` function allows a third party to repay a borrower's debt if they have become insolvent\"},\"redeem(uint256,address,address)\":{\"notice\":\"The ```redeem``` function allows the caller to redeem their Asset Shares for Asset Tokens\"},\"removeCollateral(uint256,address)\":{\"notice\":\"The ```removeCollateral``` function is used to remove collateral from msg.sender's borrow position\"},\"repayAsset(uint256,address)\":{\"notice\":\"The ```repayAsset``` function allows the caller to pay down the debt for a given borrower.\"},\"setSwapper(address,bool)\":{\"notice\":\"The ```setSwapper``` function is called to black or whitelist a given swapper address\"},\"setTimeLock(address)\":{\"notice\":\"The ```setTimeLock``` function sets the TIME_LOCK address\"},\"toAssetAmount(uint256,bool)\":{\"notice\":\"The ```toAssetAmount``` function converts a given number of shares to an asset amount\"},\"toAssetShares(uint256,bool)\":{\"notice\":\"The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)\"},\"toBorrowAmount(uint256,bool)\":{\"notice\":\"The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares\"},\"toBorrowShares(uint256,bool)\":{\"notice\":\"The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares\"},\"updateExchangeRate()\":{\"notice\":\"The ```updateExchangeRate``` function is the external implementation of _updateExchangeRate.\"},\"userBorrowShares(address)\":{\"notice\":\"Stores the balance of borrow shares for each user\"},\"userCollateralBalance(address)\":{\"notice\":\"Stores the balance of collateral for each user\"},\"withdrawFees(uint128,address)\":{\"notice\":\"The ```withdrawFees``` function withdraws fees accumulated\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NonTreasuryVaults/Lending/MugenLendingPair.sol\":\"MugenLendingPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-core/=lib/joe-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-core/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/fraxlend/src/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0x71ec772cc0d90cc6fd5bad99da9794af7dbff5959e1e77eb0577aa4011664c2f\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://c81750c8352aab0f4624be95bd6e3a6ae262636cf342788ee82aa67975332f5a\",\"dweb:/ipfs/QmZq8VrJu17c4ishgq3PeB2CLVLAXzEEycip5Kn2NLyoyx\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b\",\"dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c\",\"dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"src/NonTreasuryVaults/Lending/MugenLendingConstants.sol\":{\"keccak256\":\"0xa2f1ebb57cc20663a65fd71f160fbda20fa765aadcde7043cef5f678f075fbda\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://f0df07127338966d58610a42bf2d04479ff30efd3cdd4ec53fb3015149b5eef0\",\"dweb:/ipfs/QmTHpPC2FhnoH6saoiz5cQH7hksZCpdAFcs34fAuYTMCtr\"]},\"src/NonTreasuryVaults/Lending/MugenLendingCore.sol\":{\"keccak256\":\"0xd9c3b323742b5e36639073e96cef596e0a4dfdd58a4afba92bc4537405b819aa\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://9df1e06dc3ee9288cba6d5029f8472e03ab7d0af6144a99f6d1a96ed66bf044f\",\"dweb:/ipfs/Qma81bPkaGHijZAhmd8RGgRHpztvMSh3cAsMwmhdDisVuL\"]},\"src/NonTreasuryVaults/Lending/MugenLendingPair.sol\":{\"keccak256\":\"0x65c8d9da5745cf1c0815fd55bc0ec66a24c582c004051987865e4a6fc0488e97\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://a6732386dfe08466725d689b43ed7872af6c5aa5d8698589a015ec0603dec500\",\"dweb:/ipfs/QmNn2e5YzA9gui1qGUwgUcCwAbW1BjSRY1qxDRPZd5phYG\"]},\"src/NonTreasuryVaults/Lending/interfaces/IMugenLendingWhitelist.sol\":{\"keccak256\":\"0x1ae235dafe62871cd30592acea3ab76f135da11123636967d07f0bee6e6c1902\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://9bab9270769dcedadc811f51810acdd4fa3841f72cb13cb62c7605d37ad8bc42\",\"dweb:/ipfs/QmazghLZQA5ddvXM9mnYdTi4bmcY3HdqMJzYJzwwURcSXg\"]},\"src/NonTreasuryVaults/Lending/interfaces/IRateCalculator.sol\":{\"keccak256\":\"0x67291853c933e9e5a40816bc05efa7536f5d53d96eda3264b728253ab6f121ca\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://4cecce6f7267835977c91d9953e8e079d1f82c2c2fa1bce753d53f4a27fac7d8\",\"dweb:/ipfs/QmdUrDgyyeZsUosDYdkEpVQ4zYMQxK3uTfSKkjypF21AF3\"]},\"src/NonTreasuryVaults/Lending/interfaces/ISwapper.sol\":{\"keccak256\":\"0x3536f33c853e4f50e340cdcee457c63a30e5ebd09702fe50d10baf05bbf4eb91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e42a486d22d39457c1a6f4b1d518fa4fca5b0f13c118b5b0e7a58e4a9b3e\",\"dweb:/ipfs/QmduDvxws9Z3pynGZdth3r8wk3qZ2Sbsyu71bsRZpMwibS\"]},\"src/NonTreasuryVaults/Lending/libraries/VaultAccountingLibrary.sol\":{\"keccak256\":\"0x6cd98fee668e5701644608d06070bdd2eaedf9ca44fa160eb659ef78590a6e31\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://b4b601a07cd5567159d5fe1427b4d423b12abc8772e796a7504bc42584fe0523\",\"dweb:/ipfs/QmbYeVCHfXiT1jD6m9HiqhngdyjUAMQJ8RzKRtWfN3gG5J\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_configData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_immutables",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_maxLTV",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_liquidationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_penaltyRate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isBorrowerWhitelistActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_isLenderWhitelistActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadProtocolFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadSwapper"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowerSolvent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowerWhitelistRequired"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_borrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_exchangeRate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Insolvent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_request",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientAssetsInContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_expected",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_actual",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidPath"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NameEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotDeployer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotOnWhitelist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyApprovedBorrowers"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyApprovedLenders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyTimeLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OracleLTEZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_blockTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PastDeadline"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PastMaturity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PriceTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolOrOwnerOnly"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_minOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SlippageTooHigh"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_interestEarned",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_deltaTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_feesAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_feesShare",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddInterest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesAdded",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BorrowAsset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFee",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangeFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralForLiquidator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesToLiquidate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountLiquidatorToRepay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_sharesToAdjust",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountToAdjust",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Liquidate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountToRepay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RepayAsset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetApprovedLender",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapper",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapper",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oldAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetTimeLock",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateExchangeRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_ratePerSec",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_deltaTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_utilizationRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newRatePerSec",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateRate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_shares",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountToTransfer",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawFees",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CIRCUIT_BREAKER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COMPTROLLER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPLOYER_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FRAXLEND_WHITELIST_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TIME_LOCK_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addInterest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_interestEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_feesAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_feesShare",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_newRate",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedBorrowers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedLenders",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_borrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrowAsset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowerWhitelistActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_newFee",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeFee"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cleanLiquidationFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralContract",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRateInfo",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "lastBlock",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "feeToProtocolRate",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "lastTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "ratePerSec",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_sharesReceived",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dirtyLiquidationFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "exchangeRateInfo",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "lastTimestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "exchangeRate",
              "type": "uint224"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getConstants",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_LTV_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_LIQ_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_UTIL_PREC",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_FEE_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_EXCHANGE_PRECISION",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_DEFAULT_INT",
              "type": "uint64"
            },
            {
              "internalType": "uint16",
              "name": "_DEFAULT_PROTOCOL_FEE",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_MAX_PROTOCOL_FEE",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getImmutableAddressBool",
          "outputs": [
            {
              "internalType": "address",
              "name": "_assetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_collateralContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oracleMultiply",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oracleDivide",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rateContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_DEPLOYER_CONTRACT",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_COMPTROLLER_ADDRESS",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_MugenLending_WHITELIST",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_borrowerWhitelistActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_lenderWhitelistActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getImmutableUint256",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_oracleNormalization",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxLTV",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_cleanLiquidationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_penaltyRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPairAccounting",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "_totalAssetAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalAssetShares",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalBorrowAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_totalBorrowShares",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "_totalCollateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserSnapshot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_userAssetShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_userBorrowShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_userCollateralBalance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_approvedBorrowers",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_approvedLenders",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_rateInitCallData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lenderWhitelistActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_sharesToLiquidate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_collateralForLiquidator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maturityDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxLTV",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleDivide",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleMultiply",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracleNormalization",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "penaltyRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateContract",
          "outputs": [
            {
              "internalType": "contract IRateCalculator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateInitCallData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToReturn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAsset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToRepay",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapper",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapper"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swappers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toAssetAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toAssetShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toBorrowAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_roundUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toBorrowShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAsset",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shares",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBorrow",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "shares",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userBorrowShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userCollateralBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_shares",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountToTransfer",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addCollateral(uint256,address)": {
            "details": "msg.sender must call ERC20.approve() on the Collateral Token contract prior to invocation",
            "params": {
              "_borrower": "The account to be credited",
              "_collateralAmount": "The amount of Collateral Token to be added to borrower's position"
            }
          },
          "addInterest()": {
            "returns": {
              "_interestEarned": "The amount of interest accrued by all borrowers"
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "borrowAsset(uint256,uint256,address)": {
            "details": "Borrower must call ```ERC20.approve``` on the Collateral Token contract if applicable",
            "params": {
              "_borrowAmount": "The amount of Asset Token to borrow",
              "_collateralAmount": "The amount of Collateral Token to transfer to Pair",
              "_receiver": "The address which will receive the Asset Tokens"
            },
            "returns": {
              "_shares": "The number of borrow Shares the msg.sender will be debited"
            }
          },
          "changeFee(uint32)": {
            "params": {
              "_newFee": "The new fee"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling function",
            "params": {
              "_amount": "The amount of Asset Token to transfer to Pair",
              "_receiver": "The address to receive the Asset Shares (fTokens)"
            },
            "returns": {
              "_sharesReceived": "The number of fTokens received for the deposit"
            }
          },
          "getImmutableAddressBool()": {
            "returns": {
              "_COMPTROLLER_ADDRESS": "Address of comptroller",
              "_DEPLOYER_CONTRACT": "Address of deployer contract",
              "_MugenLending_WHITELIST": "Address of whitelist",
              "_assetContract": "Address of asset",
              "_borrowerWhitelistActive": "Boolean is borrower whitelist active",
              "_collateralContract": "Address of collateral",
              "_lenderWhitelistActive": "Boolean is lender whitelist active",
              "_oracleDivide": "Address of oracle denominator",
              "_oracleMultiply": "Address of oracle numerator",
              "_rateContract": "Address of rate contract"
            }
          },
          "getImmutableUint256()": {
            "returns": {
              "_cleanLiquidationFee": "Clean Liquidation Fee",
              "_maturityDate": "Maturity Date",
              "_maxLTV": "Maximum LTV",
              "_oracleNormalization": "Oracle normalization factor",
              "_penaltyRate": "Penalty Rate"
            }
          },
          "getPairAccounting()": {
            "returns": {
              "_totalAssetAmount": "Total assets deposited and interest accrued, total claims",
              "_totalAssetShares": "Total fTokens",
              "_totalBorrowAmount": "Total borrows",
              "_totalBorrowShares": "Total borrow shares",
              "_totalCollateral": "Total collateral"
            }
          },
          "getUserSnapshot(address)": {
            "params": {
              "_address": "The user address"
            },
            "returns": {
              "_userAssetShares": "The user fToken balance",
              "_userBorrowShares": "The user borrow shares",
              "_userCollateralBalance": "The user collateral balance"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(string,address[],address[],bytes)": {
            "details": "This function can only be called by the deployer",
            "params": {
              "_approvedBorrowers": "An array of approved borrower addresses",
              "_approvedLenders": "An array of approved lender addresses",
              "_name": "The name of the contract",
              "_rateInitCallData": "The configuration data for the Rate Calculator contract"
            }
          },
          "liquidate(uint128,uint256,address)": {
            "details": "Caller must invoke ```ERC20.approve``` on the Asset Token contract prior to calling ```Liquidate()```",
            "params": {
              "_borrower": "The account for which the repayment is credited and from whom collateral will be taken",
              "_deadline": "The timestamp after which tx will revert",
              "_sharesToLiquidate": "The number of Borrow Shares repaid by the liquidator"
            },
            "returns": {
              "_collateralForLiquidator": "The amount of Collateral Token transferred to the liquidator"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "redeem(uint256,address,address)": {
            "params": {
              "_owner": "The owner of the Asset Shares (fTokens)",
              "_receiver": "The address to which the Asset Tokens will be transferred",
              "_shares": "The number of Asset Shares (fTokens) to burn for Asset Tokens"
            },
            "returns": {
              "_amountToReturn": "The amount of Asset Tokens to be transferred"
            }
          },
          "removeCollateral(uint256,address)": {
            "details": "msg.sender must be solvent after invocation or transaction will revert",
            "params": {
              "_collateralAmount": "The amount of Collateral Token to transfer",
              "_receiver": "The address to receive the transferred funds"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "repayAsset(uint256,address)": {
            "details": "Caller must first invoke ```ERC20.approve()``` for the Asset Token contract",
            "params": {
              "_borrower": "The account for which the debt will be reduced",
              "_shares": "The number of Borrow Shares which will be repaid by the call"
            },
            "returns": {
              "_amountToRepay": "The amount of Asset Tokens which were transferred in order to repay the Borrow Shares"
            }
          },
          "setSwapper(address,bool)": {
            "details": "@param _swapper The swapper address",
            "params": {
              "_approval": "The approval"
            }
          },
          "setTimeLock(address)": {
            "params": {
              "_newAddress": "the new time lock address"
            }
          },
          "toAssetAmount(uint256,bool)": {
            "params": {
              "_roundUp": "Whether to round up after division",
              "_shares": "Shares of asset (fToken)"
            },
            "returns": {
              "_0": "The amount of asset"
            }
          },
          "toAssetShares(uint256,bool)": {
            "params": {
              "_amount": "The amount of asset",
              "_roundUp": "Whether to round up after division"
            },
            "returns": {
              "_0": "The number of shares (fTokens)"
            }
          },
          "toBorrowAmount(uint256,bool)": {
            "params": {
              "_roundUp": "Whether to roundup during division",
              "_shares": "Shares of borrow"
            },
            "returns": {
              "_0": "The amount of asset"
            }
          },
          "toBorrowShares(uint256,bool)": {
            "params": {
              "_amount": "Amount of borrow",
              "_roundUp": "Whether to roundup during division"
            }
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateExchangeRate()": {
            "details": "This function is invoked at most once per block as these queries can be expensive",
            "returns": {
              "_exchangeRate": "The new exchange rate"
            }
          },
          "withdrawFees(uint128,address)": {
            "params": {
              "_recipient": "Address to send the assets",
              "_shares": "Number of fTokens to redeem"
            },
            "returns": {
              "_amountToTransfer": "Amount of assets sent to recipient"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addCollateral(uint256,address)": {
            "notice": "The ```addCollateral``` function allows the caller to add Collateral Token to a borrowers position"
          },
          "addInterest()": {
            "notice": "The ```addInterest``` function is a public implementation of _addInterest and allows 3rd parties to trigger interest accrual"
          },
          "borrowAsset(uint256,uint256,address)": {
            "notice": "The ```borrowAsset``` function allows a user to open/increase a borrow position"
          },
          "changeFee(uint32)": {
            "notice": "The ```changeFee``` function changes the protocol fee, max 50%"
          },
          "currentRateInfo()": {
            "notice": "Stores information about the current interest rate"
          },
          "deposit(uint256,address)": {
            "notice": "The ```deposit``` function allows a user to Lend Assets by specifying the amount of Asset Tokens to lend"
          },
          "exchangeRateInfo()": {
            "notice": "Stores information about the current exchange rate. Collateral:Asset ratio"
          },
          "getImmutableAddressBool()": {
            "notice": "The ```getImmutableAddressBool``` function gets all the address and bool configs"
          },
          "getImmutableUint256()": {
            "notice": "The ```getImmutableUint256``` function gets all uint256 config values"
          },
          "getPairAccounting()": {
            "notice": "The ```getPairAccounting``` function gets all pair level accounting numbers"
          },
          "getUserSnapshot(address)": {
            "notice": "The ```getUserSnapshot``` function gets user level accounting data"
          },
          "initialize(string,address[],address[],bytes)": {
            "notice": "The ```initialize``` function is called immediately after deployment"
          },
          "liquidate(uint128,uint256,address)": {
            "notice": "The ```liquidate``` function allows a third party to repay a borrower's debt if they have become insolvent"
          },
          "redeem(uint256,address,address)": {
            "notice": "The ```redeem``` function allows the caller to redeem their Asset Shares for Asset Tokens"
          },
          "removeCollateral(uint256,address)": {
            "notice": "The ```removeCollateral``` function is used to remove collateral from msg.sender's borrow position"
          },
          "repayAsset(uint256,address)": {
            "notice": "The ```repayAsset``` function allows the caller to pay down the debt for a given borrower."
          },
          "setSwapper(address,bool)": {
            "notice": "The ```setSwapper``` function is called to black or whitelist a given swapper address"
          },
          "setTimeLock(address)": {
            "notice": "The ```setTimeLock``` function sets the TIME_LOCK address"
          },
          "toAssetAmount(uint256,bool)": {
            "notice": "The ```toAssetAmount``` function converts a given number of shares to an asset amount"
          },
          "toAssetShares(uint256,bool)": {
            "notice": "The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)"
          },
          "toBorrowAmount(uint256,bool)": {
            "notice": "The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares"
          },
          "toBorrowShares(uint256,bool)": {
            "notice": "The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares"
          },
          "updateExchangeRate()": {
            "notice": "The ```updateExchangeRate``` function is the external implementation of _updateExchangeRate."
          },
          "userBorrowShares(address)": {
            "notice": "Stores the balance of borrow shares for each user"
          },
          "userCollateralBalance(address)": {
            "notice": "Stores the balance of collateral for each user"
          },
          "withdrawFees(uint128,address)": {
            "notice": "The ```withdrawFees``` function withdraws fees accumulated"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-core/=lib/joe-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-core/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/NonTreasuryVaults/Lending/MugenLendingPair.sol": "MugenLendingPair"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/fraxlend/src/contracts/libraries/SafeERC20.sol": {
        "keccak256": "0x71ec772cc0d90cc6fd5bad99da9794af7dbff5959e1e77eb0577aa4011664c2f",
        "urls": [
          "bzz-raw://c81750c8352aab0f4624be95bd6e3a6ae262636cf342788ee82aa67975332f5a",
          "dweb:/ipfs/QmZq8VrJu17c4ishgq3PeB2CLVLAXzEEycip5Kn2NLyoyx"
        ],
        "license": "ISC"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a",
        "urls": [
          "bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b",
          "dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414",
        "urls": [
          "bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c",
          "dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "src/NonTreasuryVaults/Lending/MugenLendingConstants.sol": {
        "keccak256": "0xa2f1ebb57cc20663a65fd71f160fbda20fa765aadcde7043cef5f678f075fbda",
        "urls": [
          "bzz-raw://f0df07127338966d58610a42bf2d04479ff30efd3cdd4ec53fb3015149b5eef0",
          "dweb:/ipfs/QmTHpPC2FhnoH6saoiz5cQH7hksZCpdAFcs34fAuYTMCtr"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/Lending/MugenLendingCore.sol": {
        "keccak256": "0xd9c3b323742b5e36639073e96cef596e0a4dfdd58a4afba92bc4537405b819aa",
        "urls": [
          "bzz-raw://9df1e06dc3ee9288cba6d5029f8472e03ab7d0af6144a99f6d1a96ed66bf044f",
          "dweb:/ipfs/Qma81bPkaGHijZAhmd8RGgRHpztvMSh3cAsMwmhdDisVuL"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/Lending/MugenLendingPair.sol": {
        "keccak256": "0x65c8d9da5745cf1c0815fd55bc0ec66a24c582c004051987865e4a6fc0488e97",
        "urls": [
          "bzz-raw://a6732386dfe08466725d689b43ed7872af6c5aa5d8698589a015ec0603dec500",
          "dweb:/ipfs/QmNn2e5YzA9gui1qGUwgUcCwAbW1BjSRY1qxDRPZd5phYG"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/Lending/interfaces/IMugenLendingWhitelist.sol": {
        "keccak256": "0x1ae235dafe62871cd30592acea3ab76f135da11123636967d07f0bee6e6c1902",
        "urls": [
          "bzz-raw://9bab9270769dcedadc811f51810acdd4fa3841f72cb13cb62c7605d37ad8bc42",
          "dweb:/ipfs/QmazghLZQA5ddvXM9mnYdTi4bmcY3HdqMJzYJzwwURcSXg"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/Lending/interfaces/IRateCalculator.sol": {
        "keccak256": "0x67291853c933e9e5a40816bc05efa7536f5d53d96eda3264b728253ab6f121ca",
        "urls": [
          "bzz-raw://4cecce6f7267835977c91d9953e8e079d1f82c2c2fa1bce753d53f4a27fac7d8",
          "dweb:/ipfs/QmdUrDgyyeZsUosDYdkEpVQ4zYMQxK3uTfSKkjypF21AF3"
        ],
        "license": "ISC"
      },
      "src/NonTreasuryVaults/Lending/interfaces/ISwapper.sol": {
        "keccak256": "0x3536f33c853e4f50e340cdcee457c63a30e5ebd09702fe50d10baf05bbf4eb91",
        "urls": [
          "bzz-raw://2db8e42a486d22d39457c1a6f4b1d518fa4fca5b0f13c118b5b0e7a58e4a9b3e",
          "dweb:/ipfs/QmduDvxws9Z3pynGZdth3r8wk3qZ2Sbsyu71bsRZpMwibS"
        ],
        "license": "MIT"
      },
      "src/NonTreasuryVaults/Lending/libraries/VaultAccountingLibrary.sol": {
        "keccak256": "0x6cd98fee668e5701644608d06070bdd2eaedf9ca44fa160eb659ef78590a6e31",
        "urls": [
          "bzz-raw://b4b601a07cd5567159d5fe1427b4d423b12abc8772e796a7504bc42584fe0523",
          "dweb:/ipfs/QmbYeVCHfXiT1jD6m9HiqhngdyjUAMQJ8RzKRtWfN3gG5J"
        ],
        "license": "ISC"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/NonTreasuryVaults/Lending/MugenLendingPair.sol",
    "id": 6493,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "ERC20": [
        1327
      ],
      "IERC20": [
        1405
      ],
      "IERC20Metadata": [
        1430
      ],
      "IERC4626": [
        578
      ],
      "IMugenLendingWhitelist": [
        6553
      ],
      "IRateCalculator": [
        6580
      ],
      "ISwapper": [
        6600
      ],
      "MugenLendingConstants": [
        3733
      ],
      "MugenLendingCore": [
        5754
      ],
      "MugenLendingPair": [
        6492
      ],
      "Ownable": [
        407
      ],
      "Pausable": [
        686
      ],
      "ReentrancyGuard": [
        740
      ],
      "SafeCast": [
        3640
      ],
      "SafeERC20": [
        294
      ],
      "VaultAccount": [
        6607
      ],
      "VaultAccountingLibrary": [
        6721
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:14958:17",
    "nodes": [
      {
        "id": 5756,
        "nodeType": "PragmaDirective",
        "src": "32:23:17",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 5758,
        "nodeType": "ImportDirective",
        "src": "130:69:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 1406,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5757,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1405,
              "src": "138:6:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5760,
        "nodeType": "ImportDirective",
        "src": "200:96:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 1431,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5759,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1430,
              "src": "208:14:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5762,
        "nodeType": "ImportDirective",
        "src": "297:84:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 741,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5761,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 740,
              "src": "305:15:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5764,
        "nodeType": "ImportDirective",
        "src": "382:104:17",
        "absolutePath": "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 46,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5763,
              "name": "AggregatorV3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45,
              "src": "390:21:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5766,
        "nodeType": "ImportDirective",
        "src": "487:66:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/MugenLendingConstants.sol",
        "file": "./MugenLendingConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 3734,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5765,
              "name": "MugenLendingConstants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3733,
              "src": "495:21:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5769,
        "nodeType": "ImportDirective",
        "src": "554:92:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/libraries/VaultAccountingLibrary.sol",
        "file": "./libraries/VaultAccountingLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 6722,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5767,
              "name": "VaultAccountingLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6721,
              "src": "562:22:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5768,
              "name": "VaultAccount",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6607,
              "src": "586:12:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5771,
        "nodeType": "ImportDirective",
        "src": "647:73:17",
        "absolutePath": "lib/fraxlend/src/contracts/libraries/SafeERC20.sol",
        "file": "fraxlend/src/contracts/libraries/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5770,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 294,
              "src": "655:9:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5773,
        "nodeType": "ImportDirective",
        "src": "721:72:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol",
        "file": "openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5772,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 578,
              "src": "729:8:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5775,
        "nodeType": "ImportDirective",
        "src": "794:79:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/interfaces/IMugenLendingWhitelist.sol",
        "file": "./interfaces/IMugenLendingWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 6554,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5774,
              "name": "IMugenLendingWhitelist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6553,
              "src": "802:22:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5777,
        "nodeType": "ImportDirective",
        "src": "874:65:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/interfaces/IRateCalculator.sol",
        "file": "./interfaces/IRateCalculator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 6581,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5776,
              "name": "IRateCalculator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6580,
              "src": "882:15:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5779,
        "nodeType": "ImportDirective",
        "src": "940:51:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/interfaces/ISwapper.sol",
        "file": "./interfaces/ISwapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 6601,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5778,
              "name": "ISwapper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6600,
              "src": "948:8:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5780,
        "nodeType": "ImportDirective",
        "src": "992:32:17",
        "absolutePath": "src/NonTreasuryVaults/Lending/MugenLendingCore.sol",
        "file": "./MugenLendingCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6493,
        "sourceUnit": 5755,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6492,
        "nodeType": "ContractDefinition",
        "src": "1026:13963:17",
        "nodes": [
          {
            "id": 5788,
            "nodeType": "UsingForDirective",
            "src": "1094:46:17",
            "global": false,
            "libraryName": {
              "id": 5785,
              "name": "VaultAccountingLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6721,
              "src": "1100:22:17"
            },
            "typeName": {
              "id": 5787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5786,
                "name": "VaultAccount",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6607,
                "src": "1127:12:17"
              },
              "referencedDeclaration": 6607,
              "src": "1127:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_VaultAccount_$6607_storage_ptr",
                "typeString": "struct VaultAccount"
              }
            }
          },
          {
            "id": 5792,
            "nodeType": "UsingForDirective",
            "src": "1145:27:17",
            "global": false,
            "libraryName": {
              "id": 5789,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 294,
              "src": "1151:9:17"
            },
            "typeName": {
              "id": 5791,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5790,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1405,
                "src": "1165:6:17"
              },
              "referencedDeclaration": 1405,
              "src": "1165:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1405",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5830,
            "nodeType": "FunctionDefinition",
            "src": "1178:616:17",
            "body": {
              "id": 5829,
              "nodeType": "Block",
              "src": "1792:2:17",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5811,
                    "name": "_configData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5794,
                    "src": "1501:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "id": 5812,
                    "name": "_immutables",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5796,
                    "src": "1526:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "id": 5813,
                    "name": "_maxLTV",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5798,
                    "src": "1551:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5814,
                    "name": "_liquidationFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5800,
                    "src": "1572:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5815,
                    "name": "_maturityDate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5802,
                    "src": "1601:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5816,
                    "name": "_penaltyRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5804,
                    "src": "1628:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 5817,
                    "name": "_isBorrowerWhitelistActive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5806,
                    "src": "1654:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "id": 5818,
                    "name": "_isLenderWhitelistActive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5808,
                    "src": "1694:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 5819,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5810,
                  "name": "MugenLendingCore",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5754,
                  "src": "1471:16:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:257:17"
              },
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 5821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1743:2:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  {
                    "hexValue": "",
                    "id": 5822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1747:2:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 5823,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5820,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1327,
                  "src": "1737:5:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:13:17"
              },
              {
                "arguments": [],
                "id": 5825,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5824,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 407,
                  "src": "1759:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1759:9:17"
              },
              {
                "arguments": [],
                "id": 5827,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5826,
                  "name": "Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 686,
                  "src": "1777:8:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:10:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5794,
                  "mutability": "mutable",
                  "name": "_configData",
                  "nameLocation": "1212:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1199:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5793,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5796,
                  "mutability": "mutable",
                  "name": "_immutables",
                  "nameLocation": "1246:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1233:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5795,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5798,
                  "mutability": "mutable",
                  "name": "_maxLTV",
                  "nameLocation": "1275:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1267:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5800,
                  "mutability": "mutable",
                  "name": "_liquidationFee",
                  "nameLocation": "1300:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1292:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5802,
                  "mutability": "mutable",
                  "name": "_maturityDate",
                  "nameLocation": "1333:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1325:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5804,
                  "mutability": "mutable",
                  "name": "_penaltyRate",
                  "nameLocation": "1364:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1356:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5806,
                  "mutability": "mutable",
                  "name": "_isBorrowerWhitelistActive",
                  "nameLocation": "1391:26:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1386:31:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5808,
                  "mutability": "mutable",
                  "name": "_isLenderWhitelistActive",
                  "nameLocation": "1432:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5830,
                  "src": "1427:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:273:17"
            },
            "returnParameters": {
              "id": 5828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5841,
            "nodeType": "FunctionDefinition",
            "src": "2023:158:17",
            "body": {
              "id": 5840,
              "nodeType": "Block",
              "src": "2143:38:17",
              "statements": [
                {
                  "expression": {
                    "id": 5838,
                    "name": "nameOfContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3827,
                    "src": "2160:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5837,
                  "id": 5839,
                  "nodeType": "Return",
                  "src": "2153:21:17"
                }
              ]
            },
            "baseFunctions": [
              795,
              1417
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2032:4:17",
            "overrides": {
              "id": 5834,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5832,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1327,
                  "src": "2084:5:17"
                },
                {
                  "id": 5833,
                  "name": "IERC20Metadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1430,
                  "src": "2091:14:17"
                }
              ],
              "src": "2075:31:17"
            },
            "parameters": {
              "id": 5831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:17"
            },
            "returnParameters": {
              "id": 5837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5841,
                  "src": "2124:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:15:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5865,
            "nodeType": "FunctionDefinition",
            "src": "2187:337:17",
            "body": {
              "id": 5864,
              "nodeType": "Block",
              "src": "2309:215:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d7567656e4c656e64696e675631202d20",
                            "id": 5853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2430:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3752a377008633f60b9d71cd4969fe739465c90262a5a85b1a36fec1ff37700c",
                              "typeString": "literal_string \"MugenLendingV1 - \""
                            },
                            "value": "MugenLendingV1 - "
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 5854,
                                "name": "collateralContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3794,
                                "src": "2451:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1405",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 5855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeSymbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 179,
                              "src": "2451:29:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1405_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$1405_$",
                                "typeString": "function (contract IERC20) view returns (string memory)"
                              }
                            },
                            "id": 5856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2451:31:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 5857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2484:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 5858,
                                "name": "assetContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3791,
                                "src": "2489:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1405",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 5859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeSymbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 179,
                              "src": "2489:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1405_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$1405_$",
                                "typeString": "function (contract IERC20) view returns (string memory)"
                              }
                            },
                            "id": 5860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2489:26:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3752a377008633f60b9d71cd4969fe739465c90262a5a85b1a36fec1ff37700c",
                              "typeString": "literal_string \"MugenLendingV1 - \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 5851,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2413:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2413:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2413:103:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2406:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 5849,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2406:6:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:111:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 5848,
                  "id": 5863,
                  "nodeType": "Return",
                  "src": "2399:118:17"
                }
              ]
            },
            "baseFunctions": [
              805,
              1423
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2196:6:17",
            "overrides": {
              "id": 5845,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5843,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1327,
                  "src": "2250:5:17"
                },
                {
                  "id": 5844,
                  "name": "IERC20Metadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1430,
                  "src": "2257:14:17"
                }
              ],
              "src": "2241:31:17"
            },
            "parameters": {
              "id": 5842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2202:2:17"
            },
            "returnParameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5847,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5865,
                  "src": "2290:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2290:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2289:15:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5876,
            "nodeType": "FunctionDefinition",
            "src": "2530:142:17",
            "body": {
              "id": 5875,
              "nodeType": "Block",
              "src": "2646:26:17",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 5873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2663:2:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 5872,
                  "id": 5874,
                  "nodeType": "Return",
                  "src": "2656:9:17"
                }
              ]
            },
            "baseFunctions": [
              815,
              1429
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2539:8:17",
            "overrides": {
              "id": 5869,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5867,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1327,
                  "src": "2595:5:17"
                },
                {
                  "id": 5868,
                  "name": "IERC20Metadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1430,
                  "src": "2602:14:17"
                }
              ],
              "src": "2586:31:17"
            },
            "parameters": {
              "id": 5866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2547:2:17"
            },
            "returnParameters": {
              "id": 5872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5876,
                  "src": "2635:5:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5870,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2634:7:17"
            },
            "scope": 6492,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5888,
            "nodeType": "FunctionDefinition",
            "src": "2728:154:17",
            "body": {
              "id": 5887,
              "nodeType": "Block",
              "src": "2841:41:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5884,
                      "name": "totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3856,
                      "src": "2858:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                        "typeString": "struct VaultAccount storage ref"
                      }
                    },
                    "id": 5885,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "shares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6606,
                    "src": "2858:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 5883,
                  "id": 5886,
                  "nodeType": "Return",
                  "src": "2851:24:17"
                }
              ]
            },
            "baseFunctions": [
              825,
              1354
            ],
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2737:11:17",
            "overrides": {
              "id": 5880,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5878,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1327,
                  "src": "2796:5:17"
                },
                {
                  "id": 5879,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1405,
                  "src": "2803:6:17"
                }
              ],
              "src": "2787:23:17"
            },
            "parameters": {
              "id": 5877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2748:2:17"
            },
            "returnParameters": {
              "id": 5883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5888,
                  "src": "2828:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5899,
            "nodeType": "FunctionDefinition",
            "src": "3115:95:17",
            "body": {
              "id": 5898,
              "nodeType": "Block",
              "src": "3164:46:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5895,
                        "name": "assetContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "3189:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1405",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1405",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 5894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3181:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3181:7:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:22:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5892,
                  "id": 5897,
                  "nodeType": "Return",
                  "src": "3174:29:17"
                }
              ]
            },
            "functionSelector": "38d52e0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "asset",
            "nameLocation": "3124:5:17",
            "parameters": {
              "id": 5889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3129:2:17"
            },
            "returnParameters": {
              "id": 5892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5899,
                  "src": "3155:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3154:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5951,
            "nodeType": "FunctionDefinition",
            "src": "3216:725:17",
            "body": {
              "id": 5950,
              "nodeType": "Block",
              "src": "3596:345:17",
              "statements": [
                {
                  "expression": {
                    "id": 5920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5918,
                      "name": "_LTV_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5902,
                      "src": "3606:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5919,
                      "name": "LTV_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3645,
                      "src": "3623:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3606:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5921,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:30:17"
                },
                {
                  "expression": {
                    "id": 5924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5922,
                      "name": "_LIQ_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5904,
                      "src": "3646:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5923,
                      "name": "LIQ_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3648,
                      "src": "3663:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3646:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5925,
                  "nodeType": "ExpressionStatement",
                  "src": "3646:30:17"
                },
                {
                  "expression": {
                    "id": 5928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5926,
                      "name": "_UTIL_PREC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5906,
                      "src": "3686:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5927,
                      "name": "UTIL_PREC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3651,
                      "src": "3699:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3686:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5929,
                  "nodeType": "ExpressionStatement",
                  "src": "3686:22:17"
                },
                {
                  "expression": {
                    "id": 5932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5930,
                      "name": "_FEE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5908,
                      "src": "3718:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5931,
                      "name": "FEE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3654,
                      "src": "3735:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3718:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5933,
                  "nodeType": "ExpressionStatement",
                  "src": "3718:30:17"
                },
                {
                  "expression": {
                    "id": 5936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5934,
                      "name": "_EXCHANGE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5910,
                      "src": "3758:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5935,
                      "name": "EXCHANGE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3657,
                      "src": "3780:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5937,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:40:17"
                },
                {
                  "expression": {
                    "id": 5940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5938,
                      "name": "_DEFAULT_INT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5912,
                      "src": "3808:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5939,
                      "name": "DEFAULT_INT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "3823:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3808:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 5941,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:26:17"
                },
                {
                  "expression": {
                    "id": 5944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5942,
                      "name": "_DEFAULT_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5914,
                      "src": "3844:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5943,
                      "name": "DEFAULT_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3663,
                      "src": "3868:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3844:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 5945,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:44:17"
                },
                {
                  "expression": {
                    "id": 5948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5946,
                      "name": "_MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5916,
                      "src": "3898:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5947,
                      "name": "MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3666,
                      "src": "3918:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3898:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5949,
                  "nodeType": "ExpressionStatement",
                  "src": "3898:36:17"
                }
              ]
            },
            "functionSelector": "9a295e73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConstants",
            "nameLocation": "3225:12:17",
            "parameters": {
              "id": 5900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3237:2:17"
            },
            "returnParameters": {
              "id": 5917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5902,
                  "mutability": "mutable",
                  "name": "_LTV_PRECISION",
                  "nameLocation": "3308:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3300:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5904,
                  "mutability": "mutable",
                  "name": "_LIQ_PRECISION",
                  "nameLocation": "3344:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3336:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5906,
                  "mutability": "mutable",
                  "name": "_UTIL_PREC",
                  "nameLocation": "3380:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3372:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3372:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "_FEE_PRECISION",
                  "nameLocation": "3412:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3404:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5910,
                  "mutability": "mutable",
                  "name": "_EXCHANGE_PRECISION",
                  "nameLocation": "3448:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3440:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5912,
                  "mutability": "mutable",
                  "name": "_DEFAULT_INT",
                  "nameLocation": "3488:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3481:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5911,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5914,
                  "mutability": "mutable",
                  "name": "_DEFAULT_PROTOCOL_FEE",
                  "nameLocation": "3521:21:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3514:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 5913,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5916,
                  "mutability": "mutable",
                  "name": "_MAX_PROTOCOL_FEE",
                  "nameLocation": "3564:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3556:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3556:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3286:305:17"
            },
            "scope": 6492,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6025,
            "nodeType": "FunctionDefinition",
            "src": "4662:1010:17",
            "body": {
              "id": 6024,
              "nodeType": "Block",
              "src": "5153:519:17",
              "statements": [
                {
                  "expression": {
                    "id": 5980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5975,
                      "name": "_assetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5955,
                      "src": "5163:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5978,
                          "name": "assetContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3791,
                          "src": "5188:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1405",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1405",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 5977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5180:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5976,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5180:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5180:22:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5163:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5981,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:39:17"
                },
                {
                  "expression": {
                    "id": 5987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5982,
                      "name": "_collateralContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5957,
                      "src": "5212:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5985,
                          "name": "collateralContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3794,
                          "src": "5242:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1405",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1405",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 5984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5234:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5234:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5234:27:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5212:49:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5988,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:49:17"
                },
                {
                  "expression": {
                    "id": 5991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5989,
                      "name": "_oracleMultiply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5959,
                      "src": "5271:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5990,
                      "name": "oracleMultiply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3796,
                      "src": "5289:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5271:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5992,
                  "nodeType": "ExpressionStatement",
                  "src": "5271:32:17"
                },
                {
                  "expression": {
                    "id": 5995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5993,
                      "name": "_oracleDivide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5961,
                      "src": "5313:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5994,
                      "name": "oracleDivide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3798,
                      "src": "5329:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5313:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5996,
                  "nodeType": "ExpressionStatement",
                  "src": "5313:28:17"
                },
                {
                  "expression": {
                    "id": 6002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5997,
                      "name": "_rateContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5963,
                      "src": "5351:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6000,
                          "name": "rateContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3809,
                          "src": "5375:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRateCalculator_$6580",
                            "typeString": "contract IRateCalculator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRateCalculator_$6580",
                            "typeString": "contract IRateCalculator"
                          }
                        ],
                        "id": 5999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5367:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5367:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5367:21:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5351:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6003,
                  "nodeType": "ExpressionStatement",
                  "src": "5351:37:17"
                },
                {
                  "expression": {
                    "id": 6006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6004,
                      "name": "_DEPLOYER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5965,
                      "src": "5398:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6005,
                      "name": "DEPLOYER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "5419:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5398:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6007,
                  "nodeType": "ExpressionStatement",
                  "src": "5398:37:17"
                },
                {
                  "expression": {
                    "id": 6010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6008,
                      "name": "_COMPTROLLER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5967,
                      "src": "5445:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6009,
                      "name": "COMPTROLLER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3821,
                      "src": "5468:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5445:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6011,
                  "nodeType": "ExpressionStatement",
                  "src": "5445:42:17"
                },
                {
                  "expression": {
                    "id": 6014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6012,
                      "name": "_MugenLending_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5969,
                      "src": "5497:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6013,
                      "name": "FRAXLEND_WHITELIST_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3825,
                      "src": "5523:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5497:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6015,
                  "nodeType": "ExpressionStatement",
                  "src": "5497:52:17"
                },
                {
                  "expression": {
                    "id": 6018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6016,
                      "name": "_borrowerWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5971,
                      "src": "5559:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6017,
                      "name": "borrowerWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3873,
                      "src": "5586:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5559:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6019,
                  "nodeType": "ExpressionStatement",
                  "src": "5559:50:17"
                },
                {
                  "expression": {
                    "id": 6022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6020,
                      "name": "_lenderWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5973,
                      "src": "5619:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6021,
                      "name": "lenderWhitelistActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3879,
                      "src": "5644:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5619:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6023,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:46:17"
                }
              ]
            },
            "documentation": {
              "id": 5952,
              "nodeType": "StructuredDocumentation",
              "src": "3947:710:17",
              "text": "@notice The ```getImmutableAddressBool``` function gets all the address and bool configs\n @return _assetContract Address of asset\n @return _collateralContract Address of collateral\n @return _oracleMultiply Address of oracle numerator\n @return _oracleDivide Address of oracle denominator\n @return _rateContract Address of rate contract\n @return _DEPLOYER_CONTRACT Address of deployer contract\n @return _COMPTROLLER_ADDRESS Address of comptroller\n @return _MugenLending_WHITELIST Address of whitelist\n @return _borrowerWhitelistActive Boolean is borrower whitelist active\n @return _lenderWhitelistActive Boolean is lender whitelist active"
            },
            "functionSelector": "36fad62d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getImmutableAddressBool",
            "nameLocation": "4671:23:17",
            "parameters": {
              "id": 5953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4694:2:17"
            },
            "returnParameters": {
              "id": 5974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5955,
                  "mutability": "mutable",
                  "name": "_assetContract",
                  "nameLocation": "4765:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4757:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5957,
                  "mutability": "mutable",
                  "name": "_collateralContract",
                  "nameLocation": "4801:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4793:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4793:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5959,
                  "mutability": "mutable",
                  "name": "_oracleMultiply",
                  "nameLocation": "4842:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4834:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5961,
                  "mutability": "mutable",
                  "name": "_oracleDivide",
                  "nameLocation": "4879:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4871:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5963,
                  "mutability": "mutable",
                  "name": "_rateContract",
                  "nameLocation": "4914:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4906:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4906:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5965,
                  "mutability": "mutable",
                  "name": "_DEPLOYER_CONTRACT",
                  "nameLocation": "4949:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4941:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4941:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5967,
                  "mutability": "mutable",
                  "name": "_COMPTROLLER_ADDRESS",
                  "nameLocation": "4989:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "4981:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4981:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5969,
                  "mutability": "mutable",
                  "name": "_MugenLending_WHITELIST",
                  "nameLocation": "5031:23:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "5023:31:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5971,
                  "mutability": "mutable",
                  "name": "_borrowerWhitelistActive",
                  "nameLocation": "5073:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "5068:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5970,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5068:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5973,
                  "mutability": "mutable",
                  "name": "_lenderWhitelistActive",
                  "nameLocation": "5116:22:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6025,
                  "src": "5111:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5972,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5111:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:405:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6060,
            "nodeType": "FunctionDefinition",
            "src": "6010:485:17",
            "body": {
              "id": 6059,
              "nodeType": "Block",
              "src": "6284:211:17",
              "statements": [
                {
                  "expression": {
                    "id": 6041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6039,
                      "name": "_oracleNormalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6029,
                      "src": "6294:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6040,
                      "name": "oracleNormalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3800,
                      "src": "6317:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6294:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6042,
                  "nodeType": "ExpressionStatement",
                  "src": "6294:42:17"
                },
                {
                  "expression": {
                    "id": 6045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6043,
                      "name": "_maxLTV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6031,
                      "src": "6346:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6044,
                      "name": "maxLTV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3802,
                      "src": "6356:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6346:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6046,
                  "nodeType": "ExpressionStatement",
                  "src": "6346:16:17"
                },
                {
                  "expression": {
                    "id": 6049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6047,
                      "name": "_cleanLiquidationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6033,
                      "src": "6372:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6048,
                      "name": "cleanLiquidationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3804,
                      "src": "6395:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6372:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6050,
                  "nodeType": "ExpressionStatement",
                  "src": "6372:42:17"
                },
                {
                  "expression": {
                    "id": 6053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6051,
                      "name": "_maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6035,
                      "src": "6424:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6052,
                      "name": "maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3829,
                      "src": "6440:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6424:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6054,
                  "nodeType": "ExpressionStatement",
                  "src": "6424:28:17"
                },
                {
                  "expression": {
                    "id": 6057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6055,
                      "name": "_penaltyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6037,
                      "src": "6462:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6056,
                      "name": "penaltyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3831,
                      "src": "6477:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6462:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6058,
                  "nodeType": "ExpressionStatement",
                  "src": "6462:26:17"
                }
              ]
            },
            "documentation": {
              "id": 6026,
              "nodeType": "StructuredDocumentation",
              "src": "5678:327:17",
              "text": "@notice The ```getImmutableUint256``` function gets all uint256 config values\n @return _oracleNormalization Oracle normalization factor\n @return _maxLTV Maximum LTV\n @return _cleanLiquidationFee Clean Liquidation Fee\n @return _maturityDate Maturity Date\n @return _penaltyRate Penalty Rate"
            },
            "functionSelector": "fea10d5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getImmutableUint256",
            "nameLocation": "6019:19:17",
            "parameters": {
              "id": 6027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6038:2:17"
            },
            "returnParameters": {
              "id": 6038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6029,
                  "mutability": "mutable",
                  "name": "_oracleNormalization",
                  "nameLocation": "6109:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6101:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6101:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6031,
                  "mutability": "mutable",
                  "name": "_maxLTV",
                  "nameLocation": "6151:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6143:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6143:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6033,
                  "mutability": "mutable",
                  "name": "_cleanLiquidationFee",
                  "nameLocation": "6180:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6172:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6172:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6035,
                  "mutability": "mutable",
                  "name": "_maturityDate",
                  "nameLocation": "6222:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6214:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6037,
                  "mutability": "mutable",
                  "name": "_penaltyRate",
                  "nameLocation": "6257:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6249:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6249:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6087:192:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6091,
            "nodeType": "FunctionDefinition",
            "src": "6806:402:17",
            "body": {
              "id": 6090,
              "nodeType": "Block",
              "src": "7031:177:17",
              "statements": [
                {
                  "expression": {
                    "id": 6076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6072,
                      "name": "_userAssetShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6066,
                      "src": "7041:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6074,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6063,
                          "src": "7070:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6073,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "7060:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 6075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7060:19:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7041:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6077,
                  "nodeType": "ExpressionStatement",
                  "src": "7041:38:17"
                },
                {
                  "expression": {
                    "id": 6082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6078,
                      "name": "_userBorrowShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6068,
                      "src": "7089:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 6079,
                        "name": "userBorrowShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "7109:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6081,
                      "indexExpression": {
                        "id": 6080,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6063,
                        "src": "7126:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7109:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7089:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6083,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:46:17"
                },
                {
                  "expression": {
                    "id": 6088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6084,
                      "name": "_userCollateralBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6070,
                      "src": "7145:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 6085,
                        "name": "userCollateralBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "7170:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6087,
                      "indexExpression": {
                        "id": 6086,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6063,
                        "src": "7192:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7170:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7145:56:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6089,
                  "nodeType": "ExpressionStatement",
                  "src": "7145:56:17"
                }
              ]
            },
            "documentation": {
              "id": 6061,
              "nodeType": "StructuredDocumentation",
              "src": "6501:300:17",
              "text": "@notice The ```getUserSnapshot``` function gets user level accounting data\n @param _address The user address\n @return _userAssetShares The user fToken balance\n @return _userBorrowShares The user borrow shares\n @return _userCollateralBalance The user collateral balance"
            },
            "functionSelector": "b68d0a09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSnapshot",
            "nameLocation": "6815:15:17",
            "parameters": {
              "id": 6064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6063,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6839:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6091,
                  "src": "6831:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6831:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6830:18:17"
            },
            "returnParameters": {
              "id": 6071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6066,
                  "mutability": "mutable",
                  "name": "_userAssetShares",
                  "nameLocation": "6917:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6091,
                  "src": "6909:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6909:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6068,
                  "mutability": "mutable",
                  "name": "_userBorrowShares",
                  "nameLocation": "6955:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6091,
                  "src": "6947:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6947:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6070,
                  "mutability": "mutable",
                  "name": "_userCollateralBalance",
                  "nameLocation": "6994:22:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6091,
                  "src": "6986:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6986:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6895:131:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6140,
            "nodeType": "FunctionDefinition",
            "src": "7600:644:17",
            "body": {
              "id": 6139,
              "nodeType": "Block",
              "src": "7886:358:17",
              "statements": [
                {
                  "assignments": [
                    6107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6107,
                      "mutability": "mutable",
                      "name": "_totalAsset",
                      "nameLocation": "7916:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6139,
                      "src": "7896:31:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 6106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6105,
                          "name": "VaultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6607,
                          "src": "7896:12:17"
                        },
                        "referencedDeclaration": 6607,
                        "src": "7896:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6109,
                  "initialValue": {
                    "id": 6108,
                    "name": "totalAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3856,
                    "src": "7930:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7896:44:17"
                },
                {
                  "expression": {
                    "id": 6113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6110,
                      "name": "_totalAssetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6095,
                      "src": "7950:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6111,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6107,
                        "src": "7970:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6604,
                      "src": "7970:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7950:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6114,
                  "nodeType": "ExpressionStatement",
                  "src": "7950:38:17"
                },
                {
                  "expression": {
                    "id": 6118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6115,
                      "name": "_totalAssetShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6097,
                      "src": "7998:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6116,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6107,
                        "src": "8018:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6606,
                      "src": "8018:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7998:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6119,
                  "nodeType": "ExpressionStatement",
                  "src": "7998:38:17"
                },
                {
                  "assignments": [
                    6122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6122,
                      "mutability": "mutable",
                      "name": "_totalBorrow",
                      "nameLocation": "8067:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6139,
                      "src": "8047:32:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 6121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6120,
                          "name": "VaultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6607,
                          "src": "8047:12:17"
                        },
                        "referencedDeclaration": 6607,
                        "src": "8047:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6124,
                  "initialValue": {
                    "id": 6123,
                    "name": "totalBorrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3859,
                    "src": "8082:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8047:46:17"
                },
                {
                  "expression": {
                    "id": 6128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6125,
                      "name": "_totalBorrowAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6099,
                      "src": "8103:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6126,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6122,
                        "src": "8124:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6604,
                      "src": "8124:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "8103:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6129,
                  "nodeType": "ExpressionStatement",
                  "src": "8103:40:17"
                },
                {
                  "expression": {
                    "id": 6133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6130,
                      "name": "_totalBorrowShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6101,
                      "src": "8153:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6131,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6122,
                        "src": "8174:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6606,
                      "src": "8174:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "8153:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6134,
                  "nodeType": "ExpressionStatement",
                  "src": "8153:40:17"
                },
                {
                  "expression": {
                    "id": 6137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6135,
                      "name": "_totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6103,
                      "src": "8203:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6136,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3861,
                      "src": "8222:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8203:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6138,
                  "nodeType": "ExpressionStatement",
                  "src": "8203:34:17"
                }
              ]
            },
            "documentation": {
              "id": 6092,
              "nodeType": "StructuredDocumentation",
              "src": "7214:381:17",
              "text": "@notice The ```getPairAccounting``` function gets all pair level accounting numbers\n @return _totalAssetAmount Total assets deposited and interest accrued, total claims\n @return _totalAssetShares Total fTokens\n @return _totalBorrowAmount Total borrows\n @return _totalBorrowShares Total borrow shares\n @return _totalCollateral Total collateral"
            },
            "functionSelector": "cdd72d52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAccounting",
            "nameLocation": "7609:17:17",
            "parameters": {
              "id": 6093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7626:2:17"
            },
            "returnParameters": {
              "id": 6104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6095,
                  "mutability": "mutable",
                  "name": "_totalAssetAmount",
                  "nameLocation": "7697:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "7689:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6094,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7689:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6097,
                  "mutability": "mutable",
                  "name": "_totalAssetShares",
                  "nameLocation": "7736:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "7728:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6096,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7728:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6099,
                  "mutability": "mutable",
                  "name": "_totalBorrowAmount",
                  "nameLocation": "7775:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "7767:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6098,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6101,
                  "mutability": "mutable",
                  "name": "_totalBorrowShares",
                  "nameLocation": "7815:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "7807:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6100,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7807:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6103,
                  "mutability": "mutable",
                  "name": "_totalCollateral",
                  "nameLocation": "7855:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "7847:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7847:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7675:206:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6157,
            "nodeType": "FunctionDefinition",
            "src": "8464:179:17",
            "body": {
              "id": 6156,
              "nodeType": "Block",
              "src": "8580:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6152,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6143,
                        "src": "8618:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6153,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6145,
                        "src": "8627:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6150,
                        "name": "totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3859,
                        "src": "8597:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 6151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6664,
                      "src": "8597:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$6607_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 6154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8597:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6149,
                  "id": 6155,
                  "nodeType": "Return",
                  "src": "8590:46:17"
                }
              ]
            },
            "documentation": {
              "id": 6141,
              "nodeType": "StructuredDocumentation",
              "src": "8250:209:17",
              "text": "@notice The ```toBorrowShares``` function converts a given amount of borrow debt into the number of shares\n @param _amount Amount of borrow\n @param _roundUp Whether to roundup during division"
            },
            "functionSelector": "c270a544",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBorrowShares",
            "nameLocation": "8473:14:17",
            "parameters": {
              "id": 6146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6143,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8496:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6157,
                  "src": "8488:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8488:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6145,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "8510:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6157,
                  "src": "8505:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8487:32:17"
            },
            "returnParameters": {
              "id": 6149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6157,
                  "src": "8567:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8567:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8566:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6174,
            "nodeType": "FunctionDefinition",
            "src": "8899:179:17",
            "body": {
              "id": 6173,
              "nodeType": "Block",
              "src": "9015:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6169,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6160,
                        "src": "9053:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6170,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6162,
                        "src": "9062:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6167,
                        "name": "totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3859,
                        "src": "9032:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 6168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6720,
                      "src": "9032:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$6607_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 6171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9032:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6166,
                  "id": 6172,
                  "nodeType": "Return",
                  "src": "9025:46:17"
                }
              ]
            },
            "documentation": {
              "id": 6158,
              "nodeType": "StructuredDocumentation",
              "src": "8649:245:17",
              "text": "@notice The ```toBorrowAmount``` function converts a given amount of borrow debt into the number of shares\n @param _shares Shares of borrow\n @param _roundUp Whether to roundup during division\n @return The amount of asset"
            },
            "functionSelector": "94e301e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBorrowAmount",
            "nameLocation": "8908:14:17",
            "parameters": {
              "id": 6163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6160,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "8931:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "8923:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8923:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6162,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "8945:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "8940:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8940:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8922:32:17"
            },
            "returnParameters": {
              "id": 6166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "9002:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9002:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9001:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6191,
            "nodeType": "FunctionDefinition",
            "src": "9329:177:17",
            "body": {
              "id": 6190,
              "nodeType": "Block",
              "src": "9444:62:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6186,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6177,
                        "src": "9481:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6187,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6179,
                        "src": "9490:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6184,
                        "name": "totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3856,
                        "src": "9461:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 6185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6720,
                      "src": "9461:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$6607_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 6188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9461:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6183,
                  "id": 6189,
                  "nodeType": "Return",
                  "src": "9454:45:17"
                }
              ]
            },
            "documentation": {
              "id": 6175,
              "nodeType": "StructuredDocumentation",
              "src": "9084:240:17",
              "text": "@notice The ```toAssetAmount``` function converts a given number of shares to an asset amount\n @param _shares Shares of asset (fToken)\n @param _roundUp Whether to round up after division\n @return The amount of asset"
            },
            "functionSelector": "404ffa7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAssetAmount",
            "nameLocation": "9338:13:17",
            "parameters": {
              "id": 6180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6177,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "9360:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6191,
                  "src": "9352:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9352:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6179,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "9374:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6191,
                  "src": "9369:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9369:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9351:32:17"
            },
            "returnParameters": {
              "id": 6183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6191,
                  "src": "9431:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9431:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9430:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6208,
            "nodeType": "FunctionDefinition",
            "src": "9778:177:17",
            "body": {
              "id": 6207,
              "nodeType": "Block",
              "src": "9893:62:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6203,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6194,
                        "src": "9930:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6204,
                        "name": "_roundUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6196,
                        "src": "9939:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6201,
                        "name": "totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3856,
                        "src": "9910:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                          "typeString": "struct VaultAccount storage ref"
                        }
                      },
                      "id": 6202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6664,
                      "src": "9910:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$6607_memory_ptr_$",
                        "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                      }
                    },
                    "id": 6205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9910:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6200,
                  "id": 6206,
                  "nodeType": "Return",
                  "src": "9903:45:17"
                }
              ]
            },
            "documentation": {
              "id": 6192,
              "nodeType": "StructuredDocumentation",
              "src": "9512:261:17",
              "text": "@notice The ```toAssetShares``` function converts a given asset amount to a number of asset shares (fTokens)\n @param _amount The amount of asset\n @param _roundUp Whether to round up after division\n @return The number of shares (fTokens)"
            },
            "functionSelector": "56968f97",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAssetShares",
            "nameLocation": "9787:13:17",
            "parameters": {
              "id": 6197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6194,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9809:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6208,
                  "src": "9801:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9801:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6196,
                  "mutability": "mutable",
                  "name": "_roundUp",
                  "nameLocation": "9823:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6208,
                  "src": "9818:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9818:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9800:32:17"
            },
            "returnParameters": {
              "id": 6200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6208,
                  "src": "9880:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9880:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9879:9:17"
            },
            "scope": 6492,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6215,
            "nodeType": "EventDefinition",
            "src": "10368:60:17",
            "anonymous": false,
            "documentation": {
              "id": 6209,
              "nodeType": "StructuredDocumentation",
              "src": "10193:170:17",
              "text": "@notice The ```SetTimeLock``` event fires when the TIME_LOCK_ADDRESS is set\n @param _oldAddress The original address\n @param _newAddress The new address"
            },
            "eventSelector": "582d6cc2f042c43e00e0dd5c187f575daac294216d2afa075d9e1e27b0a40a94",
            "name": "SetTimeLock",
            "nameLocation": "10374:11:17",
            "parameters": {
              "id": 6214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6211,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_oldAddress",
                  "nameLocation": "10394:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6215,
                  "src": "10386:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10386:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6213,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "10415:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6215,
                  "src": "10407:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10407:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10385:42:17"
            }
          },
          {
            "id": 6239,
            "nodeType": "FunctionDefinition",
            "src": "10561:225:17",
            "body": {
              "id": 6238,
              "nodeType": "Block",
              "src": "10612:174:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6221,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10626:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10626:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6223,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "10640:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10626:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6228,
                  "nodeType": "IfStatement",
                  "src": "10622:58:17",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6225,
                        "name": "OnlyTimeLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3724,
                        "src": "10666:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10666:14:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6227,
                    "nodeType": "RevertStatement",
                    "src": "10659:21:17"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6230,
                        "name": "TIME_LOCK_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3823,
                        "src": "10707:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6231,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6218,
                        "src": "10726:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6229,
                      "name": "SetTimeLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6215,
                      "src": "10695:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10695:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6233,
                  "nodeType": "EmitStatement",
                  "src": "10690:48:17"
                },
                {
                  "expression": {
                    "id": 6236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6234,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "10748:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6235,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6218,
                      "src": "10768:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10748:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6237,
                  "nodeType": "ExpressionStatement",
                  "src": "10748:31:17"
                }
              ]
            },
            "documentation": {
              "id": 6216,
              "nodeType": "StructuredDocumentation",
              "src": "10434:122:17",
              "text": "@notice The ```setTimeLock``` function sets the TIME_LOCK address\n @param _newAddress the new time lock address"
            },
            "functionSelector": "891682d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTimeLock",
            "nameLocation": "10570:11:17",
            "parameters": {
              "id": 6219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6218,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "10590:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6239,
                  "src": "10582:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10582:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10581:21:17"
            },
            "returnParameters": {
              "id": 6220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10612:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6244,
            "nodeType": "EventDefinition",
            "src": "10899:32:17",
            "anonymous": false,
            "documentation": {
              "id": 6240,
              "nodeType": "StructuredDocumentation",
              "src": "10792:102:17",
              "text": "@notice The ```ChangeFee``` event first when the fee is changed\n @param _newFee The new fee"
            },
            "eventSelector": "58a58c712558f3d6e20bed57421eb8f73048d881dea9e5bb80efb37c49680d1c",
            "name": "ChangeFee",
            "nameLocation": "10905:9:17",
            "parameters": {
              "id": 6243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newFee",
                  "nameLocation": "10922:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6244,
                  "src": "10915:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6241,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10915:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10914:16:17"
            }
          },
          {
            "id": 6282,
            "nodeType": "FunctionDefinition",
            "src": "11051:332:17",
            "body": {
              "id": 6281,
              "nodeType": "Block",
              "src": "11109:274:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6252,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11123:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11123:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6254,
                      "name": "TIME_LOCK_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "11137:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11123:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6259,
                  "nodeType": "IfStatement",
                  "src": "11119:58:17",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6256,
                        "name": "OnlyTimeLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3724,
                        "src": "11163:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11163:14:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6258,
                    "nodeType": "RevertStatement",
                    "src": "11156:21:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6260,
                      "name": "_newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "11191:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 6261,
                      "name": "MAX_PROTOCOL_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3666,
                      "src": "11201:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11191:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6267,
                  "nodeType": "IfStatement",
                  "src": "11187:80:17",
                  "trueBody": {
                    "id": 6266,
                    "nodeType": "Block",
                    "src": "11219:48:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6263,
                            "name": "BadProtocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3720,
                            "src": "11240:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11240:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6265,
                        "nodeType": "RevertStatement",
                        "src": "11233:23:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6268,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4672,
                      "src": "11276:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 6269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11276:14:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 6270,
                  "nodeType": "ExpressionStatement",
                  "src": "11276:14:17"
                },
                {
                  "expression": {
                    "id": 6275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6271,
                        "name": "currentRateInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3835,
                        "src": "11300:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrentRateInfo_$3844_storage",
                          "typeString": "struct MugenLendingCore.CurrentRateInfo storage ref"
                        }
                      },
                      "id": 6273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeToProtocolRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3839,
                      "src": "11300:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6274,
                      "name": "_newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "11336:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11300:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 6276,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:43:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6278,
                        "name": "_newFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6247,
                        "src": "11368:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 6277,
                      "name": "ChangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6244,
                      "src": "11358:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 6279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11358:18:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6280,
                  "nodeType": "EmitStatement",
                  "src": "11353:23:17"
                }
              ]
            },
            "documentation": {
              "id": 6245,
              "nodeType": "StructuredDocumentation",
              "src": "10937:109:17",
              "text": "@notice The ```changeFee``` function changes the protocol fee, max 50%\n @param _newFee The new fee"
            },
            "functionSelector": "8142dd53",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6249,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 613,
                  "src": "11095:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "11095:13:17"
              }
            ],
            "name": "changeFee",
            "nameLocation": "11060:9:17",
            "parameters": {
              "id": 6248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6247,
                  "mutability": "mutable",
                  "name": "_newFee",
                  "nameLocation": "11077:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6282,
                  "src": "11070:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6246,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11070:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11069:16:17"
            },
            "returnParameters": {
              "id": 6251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6291,
            "nodeType": "EventDefinition",
            "src": "11644:113:17",
            "anonymous": false,
            "documentation": {
              "id": 6283,
              "nodeType": "StructuredDocumentation",
              "src": "11389:250:17",
              "text": "@notice The ```WithdrawFees``` event fires when the fees are withdrawn\n @param _shares Number of _shares (fTokens) redeemed\n @param _recipient To whom the assets were sent\n @param _amountToTransfer The amount of fees redeemed"
            },
            "eventSelector": "14f6e172cd596e9f9c5d24e2d4010daa24f8f65f9274b259b66517b306c617b9",
            "name": "WithdrawFees",
            "nameLocation": "11650:12:17",
            "parameters": {
              "id": 6290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "11680:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6291,
                  "src": "11672:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6284,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11672:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6287,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "11705:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6291,
                  "src": "11697:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11697:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountToTransfer",
                  "nameLocation": "11733:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6291,
                  "src": "11725:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11725:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11662:94:17"
            }
          },
          {
            "id": 6395,
            "nodeType": "FunctionDefinition",
            "src": "12011:1410:17",
            "body": {
              "id": 6394,
              "nodeType": "Block",
              "src": "12153:1268:17",
              "statements": [
                {
                  "assignments": [
                    6305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6305,
                      "mutability": "mutable",
                      "name": "_totalAsset",
                      "nameLocation": "12232:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6394,
                      "src": "12212:31:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 6304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6303,
                          "name": "VaultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6607,
                          "src": "12212:12:17"
                        },
                        "referencedDeclaration": 6607,
                        "src": "12212:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6307,
                  "initialValue": {
                    "id": 6306,
                    "name": "totalAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3856,
                    "src": "12246:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12212:44:17"
                },
                {
                  "assignments": [
                    6310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6310,
                      "mutability": "mutable",
                      "name": "_totalBorrow",
                      "nameLocation": "12286:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6394,
                      "src": "12266:32:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                        "typeString": "struct VaultAccount"
                      },
                      "typeName": {
                        "id": 6309,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6308,
                          "name": "VaultAccount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6607,
                          "src": "12266:12:17"
                        },
                        "referencedDeclaration": 6607,
                        "src": "12266:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_storage_ptr",
                          "typeString": "struct VaultAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6312,
                  "initialValue": {
                    "id": 6311,
                    "name": "totalBorrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3859,
                    "src": "12301:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12266:46:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 6315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6313,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6294,
                      "src": "12375:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12386:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12375:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6328,
                  "nodeType": "IfStatement",
                  "src": "12371:61:17",
                  "trueBody": {
                    "expression": {
                      "id": 6326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 6316,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6294,
                        "src": "12389:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 6322,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12425:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MugenLendingPair_$6492",
                                      "typeString": "contract MugenLendingPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MugenLendingPair_$6492",
                                      "typeString": "contract MugenLendingPair"
                                    }
                                  ],
                                  "id": 6321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12417:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 6320,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12417:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12417:13:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6319,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "12407:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 6324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12407:24:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12399:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 6317,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "12399:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12399:33:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "12389:43:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 6327,
                    "nodeType": "ExpressionStatement",
                    "src": "12389:43:17"
                  }
                },
                {
                  "expression": {
                    "id": 6335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6329,
                      "name": "_amountToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6301,
                      "src": "12529:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6332,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6294,
                          "src": "12570:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 6333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12579:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 6330,
                          "name": "_totalAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6305,
                          "src": "12549:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                            "typeString": "struct VaultAccount memory"
                          }
                        },
                        "id": 6331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6720,
                        "src": "12549:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_VaultAccount_$6607_memory_ptr_$",
                          "typeString": "function (struct VaultAccount memory,uint256,bool) pure returns (uint256)"
                        }
                      },
                      "id": 6334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12549:35:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12529:55:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6336,
                  "nodeType": "ExpressionStatement",
                  "src": "12529:55:17"
                },
                {
                  "assignments": [
                    6338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6338,
                      "mutability": "mutable",
                      "name": "_assetsAvailable",
                      "nameLocation": "12654:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6394,
                      "src": "12646:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12646:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6340,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6305,
                        "src": "12707:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      {
                        "id": 6341,
                        "name": "_totalBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6310,
                        "src": "12732:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      ],
                      "id": 6339,
                      "name": "_totalAssetAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4245,
                      "src": "12673:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_VaultAccount_$6607_memory_ptr_$_t_struct$_VaultAccount_$6607_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct VaultAccount memory,struct VaultAccount memory) pure returns (uint256)"
                      }
                    },
                    "id": 6342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12673:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12646:108:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6344,
                      "name": "_assetsAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6338,
                      "src": "12768:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6345,
                      "name": "_amountToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6301,
                      "src": "12787:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12768:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6353,
                  "nodeType": "IfStatement",
                  "src": "12764:185:17",
                  "trueBody": {
                    "id": 6352,
                    "nodeType": "Block",
                    "src": "12806:143:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 6348,
                              "name": "_assetsAvailable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6338,
                              "src": "12873:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6349,
                              "name": "_amountToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6301,
                              "src": "12907:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6347,
                            "name": "InsufficientAssetsInContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3694,
                            "src": "12827:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 6350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12827:111:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6351,
                        "nodeType": "RevertStatement",
                        "src": "12820:118:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6354,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6305,
                        "src": "12991:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6604,
                      "src": "12991:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6359,
                          "name": "_amountToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6301,
                          "src": "13021:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13013:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 6357,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "13013:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13013:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12991:48:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6362,
                  "nodeType": "ExpressionStatement",
                  "src": "12991:48:17"
                },
                {
                  "expression": {
                    "id": 6367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6363,
                        "name": "_totalAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6305,
                        "src": "13049:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                          "typeString": "struct VaultAccount memory"
                        }
                      },
                      "id": 6365,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6606,
                      "src": "13049:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6366,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6294,
                      "src": "13071:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "13049:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6368,
                  "nodeType": "ExpressionStatement",
                  "src": "13049:29:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6372,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13206:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenLendingPair_$6492",
                              "typeString": "contract MugenLendingPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenLendingPair_$6492",
                              "typeString": "contract MugenLendingPair"
                            }
                          ],
                          "id": 6371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13198:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6370,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13198:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13198:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6374,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6294,
                        "src": "13213:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 6369,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "13192:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13192:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6376,
                  "nodeType": "ExpressionStatement",
                  "src": "13192:29:17"
                },
                {
                  "expression": {
                    "id": 6379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6377,
                      "name": "totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3856,
                      "src": "13231:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                        "typeString": "struct VaultAccount storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6378,
                      "name": "_totalAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6305,
                      "src": "13244:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAccount_$6607_memory_ptr",
                        "typeString": "struct VaultAccount memory"
                      }
                    },
                    "src": "13231:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAccount_$6607_storage",
                      "typeString": "struct VaultAccount storage ref"
                    }
                  },
                  "id": 6380,
                  "nodeType": "ExpressionStatement",
                  "src": "13231:24:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6384,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6296,
                        "src": "13317:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6385,
                        "name": "_amountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6301,
                        "src": "13329:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6381,
                        "name": "assetContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "13290:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1405",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 271,
                      "src": "13290:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1405_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1405_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13290:57:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6387,
                  "nodeType": "ExpressionStatement",
                  "src": "13290:57:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6389,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6294,
                        "src": "13375:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 6390,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6296,
                        "src": "13384:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6391,
                        "name": "_amountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6301,
                        "src": "13396:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6388,
                      "name": "WithdrawFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6291,
                      "src": "13362:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint128,address,uint256)"
                      }
                    },
                    "id": 6392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13362:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6393,
                  "nodeType": "EmitStatement",
                  "src": "13357:57:17"
                }
              ]
            },
            "documentation": {
              "id": 6292,
              "nodeType": "StructuredDocumentation",
              "src": "11763:243:17",
              "text": "@notice The ```withdrawFees``` function withdraws fees accumulated\n @param _shares Number of fTokens to redeem\n @param _recipient Address to send the assets\n @return _amountToTransfer Amount of assets sent to recipient"
            },
            "functionSelector": "daf33f2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6298,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 326,
                  "src": "12095:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12095:9:17"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "12020:12:17",
            "parameters": {
              "id": 6297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6294,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "12041:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "12033:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6293,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12033:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6296,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "12058:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "12050:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12050:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12032:37:17"
            },
            "returnParameters": {
              "id": 6302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6301,
                  "mutability": "mutable",
                  "name": "_amountToTransfer",
                  "nameLocation": "12130:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "12122:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12122:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12121:27:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6402,
            "nodeType": "EventDefinition",
            "src": "13601:51:17",
            "anonymous": false,
            "documentation": {
              "id": 6396,
              "nodeType": "StructuredDocumentation",
              "src": "13427:169:17",
              "text": "@notice The ```SetSwapper``` event fires whenever a swapper is black or whitelisted\n @param _swapper The swapper address\n @param _approval The approval"
            },
            "eventSelector": "ea1eefb4fd58778d7b274fe54045a9feeec8f2847899c2e71126d3a74d486da5",
            "name": "SetSwapper",
            "nameLocation": "13607:10:17",
            "parameters": {
              "id": 6401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapper",
                  "nameLocation": "13626:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6402,
                  "src": "13618:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13618:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "13641:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6402,
                  "src": "13636:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13636:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13617:34:17"
            }
          },
          {
            "id": 6424,
            "nodeType": "FunctionDefinition",
            "src": "13855:166:17",
            "body": {
              "id": 6423,
              "nodeType": "Block",
              "src": "13928:93:17",
              "statements": [
                {
                  "expression": {
                    "id": 6416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6412,
                        "name": "swappers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "13938:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6414,
                      "indexExpression": {
                        "id": 6413,
                        "name": "_swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6405,
                        "src": "13947:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13938:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6415,
                      "name": "_approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6407,
                      "src": "13959:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13938:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6417,
                  "nodeType": "ExpressionStatement",
                  "src": "13938:30:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6419,
                        "name": "_swapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6405,
                        "src": "13994:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6420,
                        "name": "_approval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6407,
                        "src": "14004:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6418,
                      "name": "SetSwapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6402,
                      "src": "13983:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 6421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13983:31:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6422,
                  "nodeType": "EmitStatement",
                  "src": "13978:36:17"
                }
              ]
            },
            "documentation": {
              "id": 6403,
              "nodeType": "StructuredDocumentation",
              "src": "13658:192:17",
              "text": "@notice The ```setSwapper``` function is called to black or whitelist a given swapper address\n @dev\n @param _swapper The swapper address\n @param _approval The approval"
            },
            "functionSelector": "3f2617cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 326,
                  "src": "13918:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "13918:9:17"
              }
            ],
            "name": "setSwapper",
            "nameLocation": "13864:10:17",
            "parameters": {
              "id": 6408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6405,
                  "mutability": "mutable",
                  "name": "_swapper",
                  "nameLocation": "13883:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6424,
                  "src": "13875:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13875:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6407,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "13898:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6424,
                  "src": "13893:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6406,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13893:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13874:34:17"
            },
            "returnParameters": {
              "id": 6411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13928:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6431,
            "nodeType": "EventDefinition",
            "src": "14195:66:17",
            "anonymous": false,
            "documentation": {
              "id": 6425,
              "nodeType": "StructuredDocumentation",
              "src": "14027:163:17",
              "text": "@notice The ```SetApprovedLender``` event fires when a lender is black or whitelisted\n @param _address The address\n @param _approval The approval"
            },
            "eventSelector": "3bb51c63bf139c4bc98211d74c51aafae8b743fd3090bee8b6bfe2026678a250",
            "name": "SetApprovedLender",
            "nameLocation": "14201:17:17",
            "parameters": {
              "id": 6430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6427,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "14235:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6431,
                  "src": "14219:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14219:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6429,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approval",
                  "nameLocation": "14250:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6431,
                  "src": "14245:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14245:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14218:42:17"
            }
          },
          {
            "id": 6466,
            "nodeType": "FunctionDefinition",
            "src": "14267:406:17",
            "body": {
              "id": 6465,
              "nodeType": "Block",
              "src": "14293:380:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 6448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6434,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14320:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14320:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 6436,
                            "name": "CIRCUIT_BREAKER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3819,
                            "src": "14334:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14320:37:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6438,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14373:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14373:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 6440,
                            "name": "COMPTROLLER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "14387:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14373:33:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14320:86:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6443,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14422:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14422:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6445,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "14436:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14436:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14422:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14320:123:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14459:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14459:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 6451,
                        "name": "DEPLOYER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3817,
                        "src": "14473:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14459:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14320:169:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6458,
                  "nodeType": "IfStatement",
                  "src": "14303:250:17",
                  "trueBody": {
                    "id": 6457,
                    "nodeType": "Block",
                    "src": "14500:53:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6454,
                            "name": "ProtocolOrOwnerOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3684,
                            "src": "14521:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14521:21:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6456,
                        "nodeType": "RevertStatement",
                        "src": "14514:28:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6459,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4672,
                      "src": "14562:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 6460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14562:14:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 6461,
                  "nodeType": "ExpressionStatement",
                  "src": "14562:14:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6462,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "14658:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14658:8:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6464,
                  "nodeType": "ExpressionStatement",
                  "src": "14658:8:17"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "14276:5:17",
            "parameters": {
              "id": 6432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14281:2:17"
            },
            "returnParameters": {
              "id": 6433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14293:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6491,
            "nodeType": "FunctionDefinition",
            "src": "14679:308:17",
            "body": {
              "id": 6490,
              "nodeType": "Block",
              "src": "14707:280:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6469,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14721:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14721:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 6471,
                        "name": "COMPTROLLER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "14735:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14721:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14758:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14758:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6475,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "14772:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14772:7:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14758:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14721:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6483,
                  "nodeType": "IfStatement",
                  "src": "14717:117:17",
                  "trueBody": {
                    "id": 6482,
                    "nodeType": "Block",
                    "src": "14781:53:17",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6479,
                            "name": "ProtocolOrOwnerOnly",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3684,
                            "src": "14802:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14802:21:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6481,
                        "nodeType": "RevertStatement",
                        "src": "14795:28:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6484,
                      "name": "_addInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4672,
                      "src": "14946:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                        "typeString": "function () returns (uint256,uint256,uint256,uint64)"
                      }
                    },
                    "id": 6485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14946:14:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint64)"
                    }
                  },
                  "id": 6486,
                  "nodeType": "ExpressionStatement",
                  "src": "14946:14:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6487,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "14970:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14970:10:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "14970:10:17"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "14688:7:17",
            "parameters": {
              "id": 6467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14695:2:17"
            },
            "returnParameters": {
              "id": 6468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14707:0:17"
            },
            "scope": 6492,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5781,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1430,
              "src": "1055:14:17"
            },
            "id": 5782,
            "nodeType": "InheritanceSpecifier",
            "src": "1055:14:17"
          },
          {
            "baseName": {
              "id": 5783,
              "name": "MugenLendingCore",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5754,
              "src": "1071:16:17"
            },
            "id": 5784,
            "nodeType": "InheritanceSpecifier",
            "src": "1071:16:17"
          }
        ],
        "canonicalName": "MugenLendingPair",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6492,
          5754,
          1327,
          1430,
          1405,
          407,
          740,
          686,
          2099,
          3733
        ],
        "name": "MugenLendingPair",
        "nameLocation": "1035:16:17",
        "scope": 6493,
        "usedErrors": [
          3674,
          3676,
          3678,
          3680,
          3682,
          3684,
          3688,
          3694,
          3698,
          3700,
          3702,
          3704,
          3710,
          3712,
          3718,
          3720,
          3722,
          3724,
          3726,
          3732
        ]
      }
    ],
    "license": "ISC"
  },
  "id": 17
}