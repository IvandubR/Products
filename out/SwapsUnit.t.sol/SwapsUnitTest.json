{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "testBatchDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "testSingleDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "327:4321:42:-:0;;;1572:26:6;;;170:28:7;-1:-1:-1;;170:28:7;;;;;;457:30:42;;;-1:-1:-1;;;;;;457:30:42;481:5;457:30;;;327:4321;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000875760003560e01c80638d05dda811620000625780638d05dda814620000e3578063ba414fa614620000fa578063f8ccbf471462000115578063fa7626d4146200012957600080fd5b80630a9254e4146200008c5780633a768463146200009857806364cc11fb14620000cc575b600080fd5b6200009662000137565b005b620000af6000805160206200797883398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b62000096620000dd36600462001837565b620003de565b62000096620000f436600462001837565b62000e8c565b62000104620014b2565b6040519015158152602001620000c3565b600054620001049062010000900460ff1681565b600054620001049060ff1681565b6006602160991b0160008060007325cbddb98b35ab1ff77413456b31ec81a6b6b7466006602160991b01600060405162000171906200181b565b6001600160a01b03978816815295871660208701529386166040860152606085019290925284166080840152831660a083015290911660c082015260e001604051809103906000f080158015620001cc573d6000803e3d6000fd5b50600860006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030600019604051620002059062001829565b608080825260079082015266546f6b656e203160c81b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000271573d6000803e3d6000fd5b50600960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030600019604051620002aa9062001829565b6080808252600790820152662a37b5b2b7101960c91b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000316573d6000803e3d6000fd5b50600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550306000196040516200034f9062001829565b608080825260079082015266546f6b656e203360c81b60a082015260c06020820181905260039082015262544b3360e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620003bb573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604051632631f2b160e11b81526001831160048201526000805160206200797883398151915290634c63e56290602401600060405180830381600087803b1580156200042957600080fd5b505af11580156200043e573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b0385106004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b1580156200049357600080fd5b505af1158015620004a8573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b03841615156004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b158015620004ff57600080fd5b505af115801562000514573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b03851614156004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b1580156200056c57600080fd5b505af115801562000581573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620005bb9084906000199060040162001875565b6020604051808303816000875af1158015620005db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060191906200188e565b50600a5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90620006389084906000199060040162001875565b6020604051808303816000875af115801562000658573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200067e91906200188e565b50600b5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90620006b59084906000199060040162001875565b6020604051808303816000875af1158015620006d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006fb91906200188e565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007978833981519152906306447d5690602401600060405180830381600087803b1580156200074d57600080fd5b505af115801562000762573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620007a192909116906000199060040162001875565b6020604051808303816000875af1158015620007c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007e791906200188e565b50600a5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262000822929116906000199060040162001875565b6020604051808303816000875af115801562000842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200086891906200188e565b50600b5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620008a3929116906000199060040162001875565b6020604051808303816000875af1158015620008c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e991906200188e565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b606081526020019060019003908162000924575050604080516003808252608082019092529192506000919060208201606080368337505060408051600380825260808201909252929350600092915060208201606080368337505060095484519293506001600160a01b031691849150600090620009a757620009a7620018b9565b6001600160a01b039283166020918202929092010152600a54835191169083906001908110620009db57620009db620018b9565b6001600160a01b039283166020918202929092010152600b5483519116908390600290811062000a0f5762000a0f620018b9565b60200260200101906001600160a01b031690816001600160a01b031681525050858160008151811062000a465762000a46620018b9565b602002602001018181525050858160018151811062000a695762000a69620018b9565b602002602001018181525050858160028151811062000a8c5762000a8c620018b9565b60200260200101818152505060028460008151811062000ab05762000ab0620018b9565b602002602001019060ff16908160ff1681525050600b8460018151811062000adc5762000adc620018b9565b60ff90921660209283029190910182015260405162000b009184918491016200190c565b6040516020818303038152906040528360008151811062000b255762000b25620018b9565b602002602001018190525060006040518060600160405280848152602001876001600160a01b031681526020018381525090508060405160200162000b6b919062001970565b6040516020818303038152906040528460018151811062000b905762000b90620018b9565b6020908102919091010152600061271062000bae8961270b62001a14565b62000bba919062001a36565b62000bc6908962001a59565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc89062000bfb908990899060040162001aa6565b600060405180830381600087803b15801562000c1657600080fd5b505af115801562000c2b573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b8116600483015262000cba945090911691506370a08231906024015b602060405180830381865afa15801562000c80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca6919062001b5f565b62000cb48360001962001a59565b620015e3565b600a546040516370a0823160e01b81526001600160a01b03898116600483015262000cf09216906370a082319060240162000c62565b600b546040516370a0823160e01b81526001600160a01b03898116600483015262000d269216906370a082319060240162000c62565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000da99291909116906370a08231906024015b602060405180830381865afa15801562000d7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000da1919062001b5f565b6000620015e3565b600a546008546040516370a0823160e01b81526001600160a01b03918216600482015262000de59291909116906370a082319060240162000d5d565b600b546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e219291909116906370a082319060240162000d5d565b604080516390c5013b60e01b8152905160008051602062007978833981519152916390c5013b91600480830192600092919082900301818387803b15801562000e6957600080fd5b505af115801562000e7e573d6000803e3d6000fd5b505050505050505050505050565b604051632631f2b160e11b81526001831160048201526000805160206200797883398151915290634c63e56290602401600060405180830381600087803b15801562000ed757600080fd5b505af115801562000eec573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b0385106004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b15801562000f4157600080fd5b505af115801562000f56573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b03841615156004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b15801562000fad57600080fd5b505af115801562000fc2573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b03851614156004820152600080516020620079788339815191529250634c63e5629150602401600060405180830381600087803b1580156200101a57600080fd5b505af11580156200102f573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620010699084906000199060040162001875565b6020604051808303816000875af115801562001089573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010af91906200188e565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007978833981519152906306447d5690602401600060405180830381600087803b1580156200110157600080fd5b505af115801562001116573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200115592909116906000199060040162001875565b6020604051808303816000875af115801562001175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200119b91906200188e565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b6060815260200190600190039081620011d657505060408051600180825281830190925291925060009190602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337505060095484519293506001600160a01b031691849150600090620012575762001257620018b9565b60200260200101906001600160a01b031690816001600160a01b03168152505085816000815181106200128e576200128e620018b9565b602002602001018181525050600184600081518110620012b257620012b2620018b9565b602002602001019060ff16908160ff1681525050600b84600181518110620012de57620012de620018b9565b60ff9092166020928302919091018201526009546040516200130f926001600160a01b039092169189910162001875565b60405160208183030381529060405283600081518110620013345762001334620018b9565b602002602001018190525060006040518060600160405280848152602001876001600160a01b03168152602001838152509050806040516020016200137a919062001970565b604051602081830303815290604052846001815181106200139f576200139f620018b9565b60209081029190910101526000612710620013bd8961270b62001a14565b620013c9919062001a36565b620013d5908962001a59565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc8906200140a908990899060040162001aa6565b600060405180830381600087803b1580156200142557600080fd5b505af11580156200143a573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b8116600483015262001476945090911691506370a082319060240162000c62565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e219291909116906370a082319060240162000d5d565b60008054610100900460ff1615620014d35750600054610100900460ff1690565b6000600080516020620079788339815191523b15620015de5760405160009060008051602062007978833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620015409083906519985a5b195960d21b9060200162001875565b60408051601f198184030181529082905262001560929160200162001b79565b60408051601f19818403018152908290526200157c9162001bac565b6000604051808303816000865af19150503d8060008114620015bb576040519150601f19603f3d011682016040523d82523d6000602084013e620015c0565b606091505b5091505080806020019051810190620015da91906200188e565b9150505b919050565b8082146200170e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016569060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200170e62001712565b5050565b600080516020620079788339815191523b156200180a576040805160008051602062007978833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620017a5929160200162001b79565b60408051601f1981840301815290829052620017c19162001bac565b6000604051808303816000865af19150503d806000811462001800576040519150601f19603f3d011682016040523d82523d6000602084013e62001805565b606091505b505050505b6000805461ff001916610100179055565b614e778062001bcb83390190565b610f368062006a4283390190565b600080604083850312156200184b57600080fd5b8235915060208301356001600160a01b03811681146200186a57600080fd5b809150509250929050565b6001600160a01b03929092168252602082015260400190565b600060208284031215620018a157600080fd5b81518015158114620018b257600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156200190157815187529582019590820190600101620018e3565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b82811015620019505781516001600160a01b03168452928401929084019060010162001929565b50505083810382850152620019668186620018cf565b9695505050505050565b6020808252825160608383015280516080840181905260009291820190839060a08601905b80831015620019c05783516001600160a01b0316825292840192600192909201919084019062001995565b50928601516001600160a01b0316604086810191909152860151858403601f1901606087015292620019f38185620018cf565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562001a315762001a31620019fe565b500290565b60008262001a5457634e487b7160e01b600052601260045260246000fd5b500490565b60008282101562001a6e5762001a6e620019fe565b500390565b60005b8381101562001a9057818101518382015260200162001a76565b8381111562001aa0576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b8281101562001ae457815160ff168452928401929084019060010162001ac3565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101562001b5057601f19808785030186528251805180865262001b31818b88018c850162001a73565b96890196601f0190911693909301870192509086019060010162001b06565b50909998505050505050505050565b60006020828403121562001b7257600080fd5b5051919050565b6001600160e01b031983168152815160009062001b9e81600485016020870162001a73565b919091016004019392505050565b6000825162001bc081846020870162001a73565b919091019291505056fe6101606040523480156200001257600080fd5b5060405162004e7738038062004e77833981016040819052620000359162000117565b6001600160a01b03868116608052600080546001600160a01b031916878316179055600185905581811660a0523360c052831660e081905260408051631355724960e31b81529051859285929091639aab9248916004808201926020929091908290030181865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d59190620001b6565b610120526001600160a01b0390811661010052979097166101405250620001d095505050505050565b6001600160a01b03811681146200011457600080fd5b50565b600080600080600080600060e0888a0312156200013357600080fd5b87516200014081620000fe565b60208901519097506200015381620000fe565b60408901519096506200016681620000fe565b606089015160808a015191965094506200018081620000fe565b60a08901519093506200019381620000fe565b60c0890151909250620001a681620000fe565b8091505092959891949750929550565b600060208284031215620001c957600080fd5b5051919050565b60805160a05160c05160e051610100516101205161014051614bdc6200029b600039600081816101570152610b4d0152600061058b015260006104ec01526000818161046001528181610550015281816106fb0152818161080f0152818161164d015281816117f10152611ba901526000818161040c015281816113fe015261257b01526000818161035c015281816119d00152818161251c01526125a20152600081816103d801528181611cae01528181611de001528181611e770152611f620152614bdc6000f3fe6080604052600436106101395760003560e01c80639aab9248116100ab578063c415b95c1161006f578063c415b95c146103fa578063c45a01551461042e578063c7f5fd101461044e578063d5ef98ea14610482578063e5e31b13146104aa578063fdc09e07146104da57600080fd5b80639aab924814610326578063a9e56f3c1461034a578063ab8236f31461037e578063c21ebd071461039e578063c31c9c07146103c657600080fd5b80635e1e6325116100fd5780635e1e63251461023f5780635e60dab51461027457806367375cc8146102a95780638ed8ea7e1461022a5780639881fcb4146102be57806398a0fb3c146102eb57600080fd5b80633fc8cef3146101455780634c1ee03e14610196578063544caa56146101b657806354fd4d50146101f657806359f571e81461022a57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101796101b13660046136a7565b61050e565b3480156101c257600080fd5b506101d66101d13660046136f2565b6105de565b604080516001600160a01b0393841681529290911660208301520161018d565b34801561020257600080fd5b506040805180820182526005815264302e302e3360d81b6020820152905161018d9190613783565b34801561023657600080fd5b50610179600081565b34801561024b57600080fd5b5061025f61025a366004613796565b6106c3565b6040805192835290151560208301520161018d565b34801561028057600080fd5b5061029461028f3660046136a7565b610917565b6040805192835260208301919091520161018d565b6102bc6102b73660046139db565b6109cf565b005b3480156102ca57600080fd5b506102de6102d9366004613a9c565b611500565b60405161018d9190613b80565b3480156102f757600080fd5b5061030b610306366004613bc4565b6117b9565b6040805193845260208401929092529082015260600161018d565b34801561033257600080fd5b5061033c60015481565b60405190815260200161018d565b34801561035657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561038a57600080fd5b506102bc610399366004613c2f565b6119c5565b3480156103aa57600080fd5b506101797310ed43c718714eb63d5aa57b78b54704e256024e81565b3480156103d257600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561040657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561043a57600080fd5b50600054610179906001600160a01b031681565b34801561045a57600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561048e57600080fd5b50610179739c12939390052919af3155f41bf4160fd3666a6f81565b3480156104b657600080fd5b506104ca6104c5366004613ccb565b611b87565b604051901515815260200161018d565b3480156104e657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b600080600061051d86866105de565b6040516001600160601b0319606084811b8216602084015283901b16603482015286151560f81b604882015291935091507f000000000000000000000000000000000000000000000000000000000000000090604901604051602081830303815290604052805190602001207f00000000000000000000000000000000000000000000000000000000000000006040516020016105bc93929190613ce8565b60408051601f1981840301815291905280516020909101209695505050505050565b600080826001600160a01b0316846001600160a01b0316036106475760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061066757828461066a565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b604482015260640161063e565b9250929050565b60008060006106d48585600161050e565b60405163e5e31b1360e01b81526001600160a01b03828116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190613d1b565b156107e1576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190613d38565b91505b6107ed8787600061050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529194507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c9190613d1b565b156108f5576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190613d38565b90505b80821161090457806000610908565b8160015b94509450505050935093915050565b600080600061092686866105de565b50905060008061093788888861050e565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109989190613d51565b5091509150826001600160a01b0316886001600160a01b0316146109bd5780826109c0565b81815b90999098509650505050505050565b60005b82518110156114fb5760008382815181106109ef576109ef613d7f565b60200260200101519050600160ff168160ff1603610aed57600080848481518110610a1c57610a1c613d7f565b6020026020010151806020019051810190610a379190613e5f565b9150915060005b8251811015610ae5576000828281518110610a5b57610a5b613d7f565b602002602001015111610a815760405163fe4155c760e01b815260040160405180910390fd5b610ad33330848481518110610a9857610a98613d7f565b6020026020010151868581518110610ab257610ab2613d7f565b60200260200101516001600160a01b0316611c1c909392919063ffffffff16565b80610add81613ece565b915050610a3e565b5050506114e8565b60011960ff821601610bc5576000838381518110610b0d57610b0d613d7f565b6020026020010151806020019051810190610b289190613d38565b905060008111610b4b5760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b5050505050506114e8565b60021960ff821601610c4a576000838381518110610be557610be5613d7f565b6020026020010151806020019051810190610c009190613efa565b905060005b8151811015610c4357610c30828581518110610c2357610c23613d7f565b6020026020010151611c8d565b5080610c3b81613ece565b915050610c05565b50506114e8565b60031960ff821601610cc8576000838381518110610c6a57610c6a613d7f565b6020026020010151806020019051810190610c859190613fd2565b905060005b8151811015610c4357610cb5828281518110610ca857610ca8613d7f565b6020026020010151611e56565b5080610cc081613ece565b915050610c8a565b60041960ff821601610d46576000838381518110610ce857610ce8613d7f565b6020026020010151806020019051810190610d0391906140e0565b905060005b8151811015610c4357610d33828281518110610d2657610d26613d7f565b6020026020010151611fac565b5080610d3e81613ece565b915050610d08565b60051960ff821601610f05576000838381518110610d6657610d66613d7f565b6020026020010151806020019051810190610d8191906141ed565b905060005b8151811015610c4357610e026000838381518110610da657610da6613d7f565b602002602001015160000151848481518110610dc457610dc4613d7f565b602002602001015160400151600081518110610de257610de2613d7f565b60200260200101516001600160a01b031661218c9092919063ffffffff16565b60006001600160a01b03166338ed1739838381518110610e2457610e24613d7f565b602002602001015160000151848481518110610e4257610e42613d7f565b602002602001015160200151858581518110610e6057610e60613d7f565b60200260200101516040015130878781518110610e7f57610e7f613d7f565b6020026020010151606001516040518663ffffffff1660e01b8152600401610eab9594939291906142e7565b6000604051808303816000875af1158015610eca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ef29190810190614358565b5080610efd81613ece565b915050610d86565b60061960ff82160161108e576000838381518110610f2557610f25613d7f565b6020026020010151806020019051810190610f4091906141ed565b905060005b8151811015610c4357610f787310ed43c718714eb63d5aa57b78b54704e256024e838381518110610da657610da6613d7f565b7310ed43c718714eb63d5aa57b78b54704e256024e6001600160a01b03166338ed1739838381518110610fad57610fad613d7f565b602002602001015160000151848481518110610fcb57610fcb613d7f565b602002602001015160200151858581518110610fe957610fe9613d7f565b6020026020010151604001513087878151811061100857611008613d7f565b6020026020010151606001516040518663ffffffff1660e01b81526004016110349594939291906142e7565b6000604051808303816000875af1158015611053573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107b9190810190614358565b508061108681613ece565b915050610f45565b60071960ff8216016111f15760008383815181106110ae576110ae613d7f565b60200260200101518060200190518101906110c991906141ed565b905060005b8151811015610c43576110ee6000838381518110610da657610da6613d7f565b60006001600160a01b03166338ed173983838151811061111057611110613d7f565b60200260200101516000015184848151811061112e5761112e613d7f565b60200260200101516020015185858151811061114c5761114c613d7f565b6020026020010151604001513087878151811061116b5761116b613d7f565b6020026020010151606001516040518663ffffffff1660e01b81526004016111979594939291906142e7565b6000604051808303816000875af11580156111b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111de9190810190614358565b50806111e981613ece565b9150506110ce565b60081960ff8216016112f957600083838151811061121157611211613d7f565b602002602001015180602001905181019061122c919061438c565b905060005b8151811015610c43576112c4739c12939390052919af3155f41bf4160fd3666a6f83838151811061126457611264613d7f565b60200260200101516000015184848151811061128257611282613d7f565b6020026020010151604001516000815181106112a0576112a0613d7f565b6020026020010151600001516001600160a01b031661218c9092919063ffffffff16565b6112e68282815181106112d9576112d9613d7f565b602002602001015161223e565b50806112f181613ece565b915050611231565b60091960ff82160161149557600083838151811061131957611319613d7f565b60200260200101518060200190518101906113349190614541565b905060005b815151811015610c435760008260000151828151811061135b5761135b613d7f565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156113b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d49190613d38565b905060006113e1826123d6565b90506113ed81836145e4565b91506114236001600160a01b0384167f0000000000000000000000000000000000000000000000000000000000000000836123fb565b602085015161143d906001600160a01b03851690846123fb565b604080516001600160a01b0385168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a1505050808061148d90613ece565b915050611339565b600a1960ff8216016114e85760008060008585815181106114b8576114b8613d7f565b60200260200101518060200190518101906114d39190614725565b9250925092506114e483838361242b565b5050505b50806114f381613ece565b9150506109d2565b505050565b606060018251101561154b5760405162461bcd60e51b81526020600482015260146024820152730a4deeae8cae47440929cac82989288bea082a8960631b604482015260640161063e565b8151611558906001614832565b6001600160401b0381111561156f5761156f6137cd565b604051908082528060200260200182016040528015611598578160200160208202803683370190505b50905082816000815181106115af576115af613d7f565b60200260200101818152505060005b82518110156117b257600061162b8483815181106115de576115de613d7f565b6020026020010151600001518584815181106115fc576115fc613d7f565b60200260200101516020015186858151811061161a5761161a613d7f565b60200260200101516040015161050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ba9190613d1b565b1561179f57806001600160a01b031663f140a35a8484815181106116e0576116e0613d7f565b60200260200101518685815181106116fa576116fa613d7f565b6020026020010151600001516040518363ffffffff1660e01b81526004016117359291909182526001600160a01b0316602082015260400190565b602060405180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190613d38565b83611782846001614832565b8151811061179257611792613d7f565b6020026020010181815250505b50806117aa81613ece565b9150506115be565b5092915050565b6040516306801cc360e41b81526001600160a01b038681166004830152858116602483015284151560448301526000918291829182917f00000000000000000000000000000000000000000000000000000000000000001690636801cc3090606401602060405180830381865afa158015611838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185c919061484a565b9050600080806001600160a01b038416156118e657836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d39190613d38565b90506118e08c8c8c610917565b90935091505b821580156118f2575081155b15611923578896508795506103e861191261190d888a614867565b612721565b61191c91906145e4565b94506119b6565b60006119308a858561278b565b9050888111611978578997509550856119718461194d848b614867565b6119579190614886565b84611962858b614867565b61196c9190614886565b612855565b95506119b4565b60006119858a858761278b565b98508997508890506119b08561199b8584614867565b6119a59190614886565b85611962868c614867565b9650505b505b50505050955095509592505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611a0e57604051638afe477f60e01b815260040160405180910390fd5b600080600083806020019051810190611a2791906148a8565b604051630ce6eb9960e31b8152929550909350915060009030906367375cc890611a57908690869060040161499d565b600060405180830381600087803b158015611a7157600080fd5b505af1925050508015611a82575060015b611ad0573d808015611ab0576040519150601f19603f3d011682016040523d82523d6000602084013e611ab5565b606091505b50611aca6001600160a01b03891686896123fb565b60019150505b60004715611b2c576040516001600160a01b038616904790600081818185875af1925050503d8060008114611b21576040519150601f19603f3d011682016040523d82523d6000602084013e611b26565b606091505b50909150505b6040805188815283151560208201528215158183015290516001600160a01b038a16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a25050505050505050505050565b60405163e5e31b1360e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190613d1b565b92915050565b6040516001600160a01b0380851660248301528316604482015260648101829052611c879085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261286b565b50505050565b60208101516040516370a0823160e01b8152306004820152600091611d29917f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a08231906024015b602060405180830381865afa158015611d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d249190613d38565b61293d565b60408051610100810182526020848101516001600160a01b03908116835285840151811691830191825260608087015162ffffff908116858701908152309286019283524260808701908152895160a08801908152600060c0890181815260e08a01918252995163414bf38960e01b815289518816600482015297518716602489015292519093166044870152925184166064860152915160848501525160a4840152935160c48301529251831660e482015290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610104015b6020604051808303816000875af1158015611e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4f9190613d38565b9392505050565b60408181015190516370a0823160e01b8152306004820152600091611eb0917f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a0823190602401611ce3565b6040805160a08082018352918401519184015160608086015160c08088015160808901516001600160601b031997851b8816928701929092526001600160e81b031960e895861b811660d488015292841b871660d787015290931b1660eb8401521b90911660ee8201526000908061010281016040516020818303038152906040528152602001306001600160a01b0316815260200142815260200184600001518152602001846020015181525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b8152600401611e0c91906149cb565b60008054825160408401516001548493611fd3936001600160a01b03909116929091612a3d565b90508060018251611fe491906145e4565b81518110611ff457611ff4613d7f565b6020026020010151915082602001518210156120525760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604482015260640161063e565b826060015115612177576000805460408501518051612177936120b5936001600160a01b0316929161208657612086613d7f565b602002602001015186604001516001815181106120a5576120a5613d7f565b6020026020010151600154612bc9565b84604001516000815181106120cc576120cc613d7f565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561211c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121409190613d38565b856040015160008151811061215757612157613d7f565b60200260200101516001600160a01b03166123fb9092919063ffffffff16565b61218681846040015130612c4f565b50919050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156121dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122019190613d38565b61220b9190614832565b6040516001600160a01b038516602482015260448101829052909150611c8790859063095ea7b360e01b90606401611c50565b60608160600151428110156122875760405162461bcd60e51b815260206004820152600f60248201526e149bdd5d195c8e8811561412549151608a1b604482015260640161063e565b61229983600001518460400151611500565b9150826020015182600184516122af91906145e4565b815181106122bf576122bf613d7f565b602002602001015110156123205760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b606482015260840161063e565b6123c7836040015160008151811061233a5761233a613d7f565b602002602001015160000151306123a7866040015160008151811061236157612361613d7f565b602002602001015160000151876040015160008151811061238457612384613d7f565b602002602001015160200151886040015160008151811061161a5761161a613d7f565b856000815181106123ba576123ba613d7f565b6020026020010151612e26565b61218682846040015130612f1e565b60006127106123e78361270b614867565b6123f19190614886565b611c1690836145e4565b6040516001600160a01b0383166024820152604481018290526114fb90849063a9059cbb60e01b90606401611c50565b6000341161244c5760405163c9935ff960e01b815260040160405180910390fd5b6000836101000151838360405160200161246893929190614a23565b604051602081830303815290604052905083608001516000036124f85760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156124cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f39190613d38565b6124fe565b83608001515b608085018190526020850151612541916001600160a01b03909116907f00000000000000000000000000000000000000000000000000000000000000009061218c565b600061255085608001516123d6565b9050808560800181815161256491906145e4565b90525060208501516125a0906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000836123fb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47876000015188604001518960600151308b608001518c60a0015160405180606001604052808f610120015181526020018f60c0015181526020018f60e00151604051602001612632919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528152508e60e0015160405160200161266c919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528c6040518b63ffffffff1660e01b81526004016126a099989796959493929190614a63565b6000604051808303818588803b1580156126b957600080fd5b505af11580156126cd573d6000803e3d6000fd5b50505050602086810151604080516001600160a01b0390921682529181018490527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f92500160405180910390a15050505050565b6000600382111561277c575080600061273b600283614886565b612746906001614832565b90505b81811015612186579050806002816127618186614886565b61276b9190614832565b6127759190614886565b9050612749565b8115612786575060015b919050565b60008084116127dc5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a20494e53554646494349454e545f414d4f554e540000000000604482015260640161063e565b6000831180156127ec5750600082115b6128385760405162461bcd60e51b815260206004820152601e60248201527f526f757465723a20494e53554646494349454e545f4c49515549444954590000604482015260640161063e565b826128438386614867565b61284d9190614886565b949350505050565b60008183106128645781611e4f565b5090919050565b60006128c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661316d9092919063ffffffff16565b8051909150156114fb57808060200190518101906128de9190613d1b565b6114fb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063e565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916129999190614b01565b6000604051808303816000865af19150503d80600081146129d6576040519150601f19603f3d011682016040523d82523d6000602084013e6129db565b606091505b5091509150818015612a05575080511580612a05575080806020019051810190612a059190613d1b565b612a365760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161063e565b5050505050565b6060600283511015612a915760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015260640161063e565b82516001600160401b03811115612aaa57612aaa6137cd565b604051908082528060200260200182016040528015612ad3578160200160208202803683370190505b5090508381600081518110612aea57612aea613d7f565b60200260200101818152505060005b60018451612b0791906145e4565b811015612bc057600080612b5b88878581518110612b2757612b27613d7f565b602002602001015188866001612b3d9190614832565b81518110612b4d57612b4d613d7f565b60200260200101518861317c565b91509150612b83848481518110612b7457612b74613d7f565b60200260200101518383613248565b84612b8f856001614832565b81518110612b9f57612b9f613d7f565b60200260200101818152505050508080612bb890613ece565b915050612af9565b50949350505050565b6000806000612bd88686613367565b6040516001600160601b0319606084811b8216602084015283901b166034820152919350915087906048016040516020818303038152906040528051906020012085604051602001612c2c93929190613ce8565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b60018351612c6091906145e4565b811015611c8757600080848381518110612c7c57612c7c613d7f565b602002602001015185846001612c929190614832565b81518110612ca257612ca2613d7f565b6020026020010151915091506000612cba8383613367565b509050600087612ccb866001614832565b81518110612cdb57612cdb613d7f565b60200260200101519050600080836001600160a01b0316866001600160a01b031614612d0957826000612d0d565b6000835b91509150600060028a51612d2191906145e4565b8810612d2d5788612d5a565b600054612d5a906001600160a01b0316878c612d4a8c6002614832565b815181106120a5576120a5613d7f565b9050612d7d60008054906101000a90046001600160a01b03168888600154612bc9565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612dba576020820181803683370190505b506040518563ffffffff1660e01b8152600401612dda9493929190614b1d565b600060405180830381600087803b158015612df457600080fd5b505af1158015612e08573d6000803e3d6000fd5b50505050505050505050508080612e1e90613ece565b915050612c52565b6000846001600160a01b03163b11612e3d57600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691612ea19190614b01565b6000604051808303816000865af19150503d8060008114612ede576040519150601f19603f3d011682016040523d82523d6000602084013e612ee3565b606091505b5091509150818015612f0d575080511580612f0d575080806020019051810190612f0d9190613d1b565b612f1657600080fd5b505050505050565b60005b8251811015611c87576000612f70848381518110612f4157612f41613d7f565b602002602001015160000151858481518110612f5f57612f5f613d7f565b6020026020010151602001516105de565b509050600085612f81846001614832565b81518110612f9157612f91613d7f565b60200260200101519050600080836001600160a01b0316878681518110612fba57612fba613d7f565b6020026020010151600001516001600160a01b031614612fdc57826000612fe0565b6000835b91509150600060018851612ff491906145e4565b86106130005786613073565b6130738861300f886001614832565b8151811061301f5761301f613d7f565b602002602001015160000151898860016130399190614832565b8151811061304957613049613d7f565b6020026020010151602001518a8960016130639190614832565b8151811061161a5761161a613d7f565b90506130c688878151811061308a5761308a613d7f565b6020026020010151600001518988815181106130a8576130a8613d7f565b6020026020010151602001518a898151811061161a5761161a613d7f565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015613103576020820181803683370190505b506040518563ffffffff1660e01b81526004016131239493929190614b1d565b600060405180830381600087803b15801561313d57600080fd5b505af1158015613151573d6000803e3d6000fd5b505050505050505050808061316590613ece565b915050612f21565b606061284d8484600085613457565b600080600061318b8686613367565b50905060008061319d89898989612bc9565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156131da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fe9190614b61565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614613235578082613238565b81815b909a909950975050505050505050565b60008084116132ad5760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b606482015260840161063e565b6000831180156132bd5750600082115b61331a5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b606482015260840161063e565b6000613328856103e5613527565b905060006133368285613527565b905060006133508361334a886103e8613527565b9061358e565b905061335c8183614886565b979650505050505050565b600080826001600160a01b0316846001600160a01b0316036133d95760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161063e565b826001600160a01b0316846001600160a01b0316106133f95782846133fc565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161063e565b6060824710156134b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161063e565b600080866001600160a01b031685876040516134d49190614b01565b60006040518083038185875af1925050503d8060008114613511576040519150601f19603f3d011682016040523d82523d6000602084013e613516565b606091505b509150915061335c878383876135e3565b600081158061354b5750828261353d8183614867565b92506135499083614886565b145b611c165760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015260640161063e565b60008261359b8382614832565b9150811015611c165760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015260640161063e565b6060831561365257825160000361364b576001600160a01b0385163b61364b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063e565b508161284d565b61284d83838151156136675781518083602001fd5b8060405162461bcd60e51b815260040161063e9190613783565b6001600160a01b038116811461369657600080fd5b50565b801515811461369657600080fd5b6000806000606084860312156136bc57600080fd5b83356136c781613681565b925060208401356136d781613681565b915060408401356136e781613699565b809150509250925092565b6000806040838503121561370557600080fd5b823561371081613681565b9150602083013561372081613681565b809150509250929050565b60005b8381101561374657818101518382015260200161372e565b83811115611c875750506000910152565b6000815180845261376f81602086016020860161372b565b601f01601f19169290920160200192915050565b602081526000611e4f6020830184613757565b6000806000606084860312156137ab57600080fd5b8335925060208401356137bd81613681565b915060408401356136e781613681565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715613805576138056137cd565b60405290565b604051608081016001600160401b0381118282101715613805576138056137cd565b60405160e081016001600160401b0381118282101715613805576138056137cd565b60405161016081016001600160401b0381118282101715613805576138056137cd565b604051601f8201601f191681016001600160401b038111828210171561389a5761389a6137cd565b604052919050565b60006001600160401b038211156138bb576138bb6137cd565b5060051b60200190565b60ff8116811461369657600080fd5b60006001600160401b038211156138ed576138ed6137cd565b50601f01601f191660200190565b600082601f83011261390c57600080fd5b813561391f61391a826138d4565b613872565b81815284602083860101111561393457600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261396257600080fd5b8135602061397261391a836138a2565b82815260059290921b8401810191818101908684111561399157600080fd5b8286015b848110156139d05780356001600160401b038111156139b45760008081fd5b6139c28986838b01016138fb565b845250918301918301613995565b509695505050505050565b600080604083850312156139ee57600080fd5b82356001600160401b0380821115613a0557600080fd5b818501915085601f830112613a1957600080fd5b81356020613a2961391a836138a2565b82815260059290921b84018101918181019089841115613a4857600080fd5b948201945b83861015613a6f578535613a60816138c5565b82529482019490820190613a4d565b96505086013592505080821115613a8557600080fd5b50613a9285828601613951565b9150509250929050565b6000806040808486031215613ab057600080fd5b833592506020808501356001600160401b03811115613ace57600080fd5b8501601f81018713613adf57600080fd5b8035613aed61391a826138a2565b8181526060918202830184019184820191908a841115613b0c57600080fd5b938501935b83851015613b6f5780858c031215613b295760008081fd5b613b316137e3565b8535613b3c81613681565b815285870135613b4b81613681565b8188015285880135613b5c81613699565b8189015283529384019391850191613b11565b508096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015613bb857835183529284019291840191600101613b9c565b50909695505050505050565b600080600080600060a08688031215613bdc57600080fd5b8535613be781613681565b94506020860135613bf781613681565b93506040860135613c0781613699565b94979396509394606081013594506080013592915050565b61ffff8116811461369657600080fd5b60008060008060008060c08789031215613c4857600080fd5b8635613c5381613c1f565b955060208701356001600160401b0380821115613c6f57600080fd5b613c7b8a838b016138fb565b96506040890135955060608901359150613c9482613681565b9093506080880135925060a08801359080821115613cb157600080fd5b50613cbe89828a016138fb565b9150509295509295509295565b600060208284031215613cdd57600080fd5b8135611e4f81613681565b6001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b600060208284031215613d2d57600080fd5b8151611e4f81613699565b600060208284031215613d4a57600080fd5b5051919050565b600080600060608486031215613d6657600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b805161278681613681565b600082601f830112613db157600080fd5b81516020613dc161391a836138a2565b82815260059290921b84018101918181019086841115613de057600080fd5b8286015b848110156139d0578051613df781613681565b8352918301918301613de4565b600082601f830112613e1557600080fd5b81516020613e2561391a836138a2565b82815260059290921b84018101918181019086841115613e4457600080fd5b8286015b848110156139d05780518352918301918301613e48565b60008060408385031215613e7257600080fd5b82516001600160401b0380821115613e8957600080fd5b613e9586838701613da0565b93506020850151915080821115613eab57600080fd5b50613a9285828601613e04565b634e487b7160e01b600052601160045260246000fd5b600060018201613ee057613ee0613eb8565b5060010190565b805162ffffff8116811461278657600080fd5b60006020808385031215613f0d57600080fd5b82516001600160401b03811115613f2357600080fd5b8301601f81018513613f3457600080fd5b8051613f4261391a826138a2565b81815260079190911b82018301908381019087831115613f6157600080fd5b928401925b8284101561335c5760808489031215613f7f5760008081fd5b613f8761380b565b8451815285850151613f9881613681565b81870152604085810151613fab81613681565b908201526060613fbc868201613ee7565b9082015282526080939093019290840190613f66565b60006020808385031215613fe557600080fd5b82516001600160401b03811115613ffb57600080fd5b8301601f8101851361400c57600080fd5b805161401a61391a826138a2565b81815260e0918202830184019184820191908884111561403957600080fd5b938501935b838510156140d45780858a0312156140565760008081fd5b61405e61382d565b85518152868601518782015260408087015161407981613681565b9082015260608681015161408c81613681565b9082015260808681015161409f81613681565b9082015260a06140b0878201613ee7565b9082015260c06140c1878201613ee7565b908201528352938401939185019161403e565b50979650505050505050565b600060208083850312156140f357600080fd5b82516001600160401b038082111561410a57600080fd5b818501915085601f83011261411e57600080fd5b815161412c61391a826138a2565b81815260059190911b8301840190848101908883111561414b57600080fd5b8585015b838110156141e05780518581111561416657600080fd5b86016080818c03601f1901121561417d5760008081fd5b61418561380b565b8882015181526040808301518a830152606080840151898111156141a95760008081fd5b6141b78f8d83880101613da0565b8385015250608084015193506141cc84613699565b82019290925284525091860191860161414f565b5098975050505050505050565b6000602080838503121561420057600080fd5b82516001600160401b038082111561421757600080fd5b818501915085601f83011261422b57600080fd5b815161423961391a826138a2565b81815260059190911b8301840190848101908883111561425857600080fd5b8585015b838110156141e05780518581111561427357600080fd5b86016080818c03601f1901121561428a5760008081fd5b61429261380b565b8882015181526040808301518a830152606080840151898111156142b65760008081fd5b6142c48f8d83880101613da0565b92840192909252608093909301519282019290925284525091860191860161425c565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156143375784516001600160a01b031683529383019391830191600101614312565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020828403121561436a57600080fd5b81516001600160401b0381111561438057600080fd5b61284d84828501613e04565b60006020828403121561439e57600080fd5b81516001600160401b038111156143b457600080fd5b83601f82850101126143c557600080fd5b808301516143d561391a826138a2565b8082825260208201915060208360051b85880101019250868311156143f957600080fd5b6020848701015b838110156139d05780516001600160401b0381111561441e57600080fd5b878601016080818a03601f1901121561443657600080fd5b61443e61380b565b602082015181526040820151602082015260608201516001600160401b0381111561446857600080fd5b8a603f828501011261447957600080fd5b6020818401015161448c61391a826138a2565b80828252602082019150604060608402858801010192508d8311156144b057600080fd5b928501604001925b8284101561451f576060848f0312156144d057600080fd5b6144d86137e3565b84516144e381613681565b815260208501516144f381613681565b6020820152604085015161450681613699565b60408201528252606093909301926020909101906144b8565b6040850152505050608091909101516060820152835260209283019201614400565b60006020828403121561455357600080fd5b81516001600160401b038082111561456a57600080fd5b908301906060828603121561457e57600080fd5b6145866137e3565b82518281111561459557600080fd5b6145a187828601613da0565b82525060208301516145b281613681565b60208201526040830151828111156145c957600080fd5b6145d587828601613e04565b60408301525095945050505050565b6000828210156145f6576145f6613eb8565b500390565b805161278681613c1f565b600082601f83011261461757600080fd5b8151602061462761391a836138a2565b82815260059290921b8401810191818101908684111561464657600080fd5b8286015b848110156139d057805161465d816138c5565b835291830191830161464a565b600082601f83011261467b57600080fd5b8151602061468b61391a836138a2565b82815260059290921b840181019181810190868411156146aa57600080fd5b8286015b848110156139d05780516001600160401b038111156146cd5760008081fd5b8701603f810189136146df5760008081fd5b8481015160406146f161391a836138d4565b8281528b828486010111156147065760008081fd5b6147158389830184870161372b565b86525050509183019183016146ae565b60008060008385036101a081121561473c57600080fd5b6101608082121561474c57600080fd5b61475461384f565b915061475f866145fb565b825261476d60208701613d95565b602083015260408601516040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c08301526147b060e08701613d95565b60e08301526101006147c3818801613d95565b90830152610120868101519083015261014080870151908301528501519093506001600160401b03808211156147f857600080fd5b61480487838801614606565b935061018086015191508082111561481b57600080fd5b506148288682870161466a565b9150509250925092565b6000821982111561484557614845613eb8565b500190565b60006020828403121561485c57600080fd5b8151611e4f81613681565b600081600019048311821515161561488157614881613eb8565b500290565b6000826148a357634e487b7160e01b600052601260045260246000fd5b500490565b6000806000606084860312156148bd57600080fd5b83516148c881613681565b60208501519093506001600160401b03808211156148e557600080fd5b6148f187838801614606565b9350604086015191508082111561481b57600080fd5b600081518084526020808501945080840160005b8381101561493a57815160ff168752958201959082019060010161491b565b509495945050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561499057601f1986840301895261497e838351613757565b98840198925090830190600101614962565b5090979650505050505050565b6040815260006149b06040830185614907565b82810360208401526149c28185614945565b95945050505050565b602081526000825160a060208401526149e760c0840182613757565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6001600160a01b0384168152606060208201819052600090614a4790830185614907565b8281036040840152614a598185614945565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152614ac8610180840182613757565b905082810360e0840152614adc8186613757565b9050828103610100840152614af18185613757565b9c9b505050505050505050505050565b60008251614b1381846020870161372b565b9190910192915050565b84815283602082015260018060a01b0383166040820152608060608201526000614a596080830184613757565b80516001600160701b038116811461278657600080fd5b600080600060608486031215614b7657600080fd5b614b7f84614b4a565b9250614b8d60208501614b4a565b9150604084015163ffffffff811681146136e757600080fdfea26469706673582212208e12bda991a025c2c1189d3ee0ee097fd1f0b3fb13060a3e8b3c63dcf21fe30564736f6c634300080f0033608060405260405162000f3638038062000f368339810160408190526200002691620001fc565b838360036200003683826200031d565b5060046200004582826200031d565b5050506200005a82826200006460201b60201c565b5050505062000410565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f25760008385830101525b9695505050505050565b600080600080608085870312156200021357600080fd5b84516001600160401b03808211156200022b57600080fd5b620002398883890162000145565b955060208701519150808211156200025057600080fd5b506200025f8782880162000145565b604087015190945090506001600160a01b03811681146200027f57600080fd5b6060959095015193969295505050565b600181811c90821680620002a457607f821691505b602082108103620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002f45750805b601f850160051c820191505b81811015620003155782815560010162000300565b505050505050565b81516001600160401b038111156200033957620003396200012f565b62000351816200034a84546200028f565b84620002cb565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000315565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200040b57634e487b7160e01b600052601160045260246000fd5b500190565b610b1680620004206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610954565b60405180910390f35b61012b6101263660046109c5565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ef565b6102e4565b005b61012b6101703660046109ef565b6102f4565b6040516012815260200161010f565b61012b6101923660046109c5565b610318565b6101606101a53660046109c5565b61033a565b6101606101b83660046109ef565b610348565b61013f6101cb366004610a2b565b6001600160a01b031660009081526020819052604090205490565b610102610353565b6101606101fc3660046109c5565b610362565b61012b61020f3660046109c5565b61036c565b61012b6102223660046109c5565b6103ec565b61013f610235366004610a4d565b6103fa565b60606003805461024990610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a80565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610425565b5060019392505050565b6102ef838383610549565b505050565b6000336103028582856106ef565b61030d858585610549565b506001949350505050565b6000336102da81858561032b83836103fa565b6103359190610aba565b610425565b6103448282610763565b5050565b6102ef838383610425565b60606004805461024990610a80565b6103448282610822565b6000338161037a82866103fa565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610425565b6000336102da818585610549565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166104e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b038316600090815260208190526040902054818110156106875760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fb84846103fa565b905060001981146106e957818110156107565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6106e98484848403610425565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b80600260008282546107cb9190610aba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d6565b6001600160a01b038216600090815260208190526040902054818110156108f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098157858101830151858201604001528201610965565b81811115610993576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610adb57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d7df43b5c05d97c3761e7c7fd436ed98c90dacd92848206cb28e5835b52607464736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220d1c44871d9cfead7078cebbe602d0f301d6a638695feb5ccfcb589b0d71948e864736f6c634300080f0033",
    "sourceMap": "327:4321:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;494:904;;;:::i;:::-;;321:38:7;;-1:-1:-1;;;;;;;;;;;321:38:7;;;;;-1:-1:-1;;;;;189:32:43;;;171:51;;159:2;144:18;321:38:7;;;;;;;;2677:1969:42;;;;;;:::i;:::-;;:::i;1421:1231::-;;;;;;:::i;:::-;;:::i;1819:584:6:-;;;:::i;:::-;;;757:14:43;;750:22;732:41;;720:2;705:18;1819:584:6;592:187:43;170:28:7;;;;;;;;;;;;1572:26:6;;;;;;;;;494:904:42;-1:-1:-1;;;;;654:1:42;671:42;727:66;807:42;-1:-1:-1;;;;;952:1:42;536:429;;;;;:::i;:::-;-1:-1:-1;;;;;1209:15:43;;;1191:34;;1261:15;;;1256:2;1241:18;;1234:43;1313:15;;;1308:2;1293:18;;1286:43;1360:2;1345:18;;1338:34;;;;1409:15;;1403:3;1388:19;;1381:44;1462:15;;1171:3;1441:19;;1434:44;1515:15;;;1509:3;1494:19;;1487:44;1140:3;1125:19;536:429:42;;;;;;;;;;;;;;;;;;;;;;;528:5;;:437;;;;;-1:-1:-1;;;;;528:437:42;;;;;-1:-1:-1;;;;;528:437:42;;;;;;1061:4;-1:-1:-1;;984:123:42;;;;;:::i;:::-;1901:3:43;1883:22;;;1942:1;1921:19;;;1914:30;-1:-1:-1;;;1975:3:43;1960:19;;1953:38;2029:3;2022:4;2007:20;;2000:33;;;2070:1;2049:19;;;2042:30;-1:-1:-1;;;2103:3:43;2088:19;;2081:34;-1:-1:-1;;;;;2187:32:43;;;2182:2;2167:18;;2160:60;-1:-1:-1;2236:18:43;;2229:34;2147:3;2132:19;984:123:42;;;;;;;;;;;;;;;;;;;;;;;975:6;;:132;;;;;-1:-1:-1;;;;;975:132:42;;;;;-1:-1:-1;;;;;975:132:42;;;;;;1203:4;-1:-1:-1;;1126:123:42;;;;;:::i;:::-;2633:3:43;2615:22;;;2674:1;2653:19;;;2646:30;-1:-1:-1;;;2707:3:43;2692:19;;2685:38;2761:3;2754:4;2739:20;;2732:33;;;2802:1;2781:19;;;2774:30;-1:-1:-1;;;2835:3:43;2820:19;;2813:34;-1:-1:-1;;;;;2919:32:43;;;2914:2;2899:18;;2892:60;-1:-1:-1;2968:18:43;;2961:34;2879:3;2864:19;1126:123:42;;;;;;;;;;;;;;;;;;;;;;;1117:6;;:132;;;;;-1:-1:-1;;;;;1117:132:42;;;;;-1:-1:-1;;;;;1117:132:42;;;;;;1345:4;-1:-1:-1;;1268:123:42;;;;;:::i;:::-;3365:3:43;3347:22;;;3406:1;3385:19;;;3378:30;-1:-1:-1;;;3439:3:43;3424:19;;3417:38;3493:3;3486:4;3471:20;;3464:33;;;3534:1;3513:19;;;3506:30;-1:-1:-1;;;3567:3:43;3552:19;;3545:34;-1:-1:-1;;;;;3651:32:43;;;3646:2;3631:18;;3624:60;-1:-1:-1;3700:18:43;;3693:34;3611:3;3596:19;1268:123:42;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1259:6:42;:132;;-1:-1:-1;;;;;;1259:132:42;-1:-1:-1;;;;;1259:132:42;;;;;;;;;;494:904::o;2677:1969::-;2747:16;;-1:-1:-1;;;2747:16:42;;2761:1;2757:5;;2747:16;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;2747:9:42;;705:18:43;;2747:16:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2773:32:42;;-1:-1:-1;;;2773:32:42;;-1:-1:-1;;;;;2783:21:42;;2773:32;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2773:9:42;;-1:-1:-1;705:18:43;;2773:32:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2815:30:42;;-1:-1:-1;;;2815:30:42;;-1:-1:-1;;;;;2825:19:42;;;;2815:30;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2815:9:42;;-1:-1:-1;705:18:43;;2815:30:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2855:33:42;;-1:-1:-1;;;2855:33:42;;2882:4;-1:-1:-1;;;;;2865:22:42;;;;2855:33;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2855:9:42;;-1:-1:-1;705:18:43;;2855:33:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2905:6:42;;2898:49;;-1:-1:-1;;;2898:49:42;;-1:-1:-1;;;;;2905:6:42;;;;-1:-1:-1;2898:23:42;;-1:-1:-1;2898:49:42;;2922:5;;-1:-1:-1;;2929:17:42;2898:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2964:6:42;;2957:49;;-1:-1:-1;;;2957:49:42;;-1:-1:-1;;;;;2964:6:42;;;;2957:23;;:49;;2981:5;;-1:-1:-1;;2988:17:42;2957:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3023:6:42;;3016:49;;-1:-1:-1;;;3016:49:42;;-1:-1:-1;;;;;3023:6:42;;;;3016:23;;:49;;3040:5;;-1:-1:-1;;3047:17:42;3016:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3075:20:42;;-1:-1:-1;;;3075:20:42;;-1:-1:-1;;;;;189:32:43;;3075:20:42;;;171:51:43;-1:-1:-1;;;;;;;;;;;250:64:7;3075:13:42;;144:18:43;;3075:20:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3112:6:42;;3136:5;;3105:57;;-1:-1:-1;;;3105:57:42;;-1:-1:-1;;;;;3112:6:42;;;;-1:-1:-1;3105:22:42;;-1:-1:-1;3105:57:42;;3136:5;;;;-1:-1:-1;;3144:17:42;3105:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3179:6:42;;3203:5;;3172:57;;-1:-1:-1;;;3172:57:42;;-1:-1:-1;;;;;3179:6:42;;;;3172:22;;:57;;3203:5;;;-1:-1:-1;;3211:17:42;3172:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3246:6:42;;3270:5;;3239:57;;-1:-1:-1;;;3239:57:42;;-1:-1:-1;;;;;3246:6:42;;;;3239:22;;:57;;3270:5;;;-1:-1:-1;;3278:17:42;3239:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3329:14:42;;;3341:1;3329:14;;;;;;;;3306:20;;3329:14;;;;;;;;-1:-1:-1;;3375:14:42;;;3387:1;3375:14;;;;;;;;;3306:37;;-1:-1:-1;3353:19:42;;3375:14;-1:-1:-1;3375:14:42;;;;;;;;;;;;;;;;;-1:-1:-1;;3425:16:42;;;3439:1;3425:16;;;;;;;;;3353:36;;-1:-1:-1;3399:23:42;;3425:16;;;;;;;;;-1:-1:-1;;3478:16:42;;;3492:1;3478:16;;;;;;;;;3399:42;;-1:-1:-1;3451:24:42;;3478:16;-1:-1:-1;3478:16:42;;;;;;;;-1:-1:-1;;3524:6:42;;3504:9;;3451:43;;-1:-1:-1;;;;;;3524:6:42;;3504:9;;-1:-1:-1;3524:6:42;;3504:9;;;;:::i;:::-;-1:-1:-1;;;;;3504:27:42;;;:9;;;;;;;;;:27;3561:6;;3541:9;;3561:6;;;3541;;3561;;3541:9;;;;;;:::i;:::-;-1:-1:-1;;;;;3541:27:42;;;:9;;;;;;;;;:27;3598:6;;3578:9;;3598:6;;;3578;;3585:1;;3578:9;;;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;3578:27:42;;;-1:-1:-1;;;;;3578:27:42;;;;;3628:1;3615:7;3623:1;3615:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3652:1;3639:7;3647:1;3639:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3676:1;3663:7;3671:1;3663:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3698:1;3687:5;3693:1;3687:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;3720:2;3709:5;3715:1;3709:8;;;;;;;;:::i;:::-;:13;;;;:8;;;;;;;;;;:13;3742:27;;;;3753:6;;3761:7;;3742:27;;:::i;:::-;;;;;;;;;;;;;3732:4;3737:1;3732:7;;;;;;;;:::i;:::-;;;;;;:37;;;;3779:47;3829:79;;;;;;;;3876:6;3829:79;;;;3892:5;-1:-1:-1;;;;;3829:79:42;;;;;3900:7;3829:79;;;3779:129;;3939:6;3928:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;3918:4;3923:1;3918:7;;;;;;;;:::i;:::-;;;;;;;;;;:28;3956:11;3988:3;3976:8;:1;3980:4;3976:8;:::i;:::-;3975:16;;;;:::i;:::-;3970:22;;:1;:22;:::i;:::-;4038:5;;:24;;-1:-1:-1;;;4038:24:42;;3956:36;;-1:-1:-1;;;;;;4038:5:42;;:11;;:24;;4050:5;;4057:4;;4038:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4102:6:42;;4095:40;;-1:-1:-1;;;4095:40:42;;-1:-1:-1;;;;;189:32:43;;;4095:40:42;;;171:51:43;4073:111:42;;-1:-1:-1;4102:6:42;;;;-1:-1:-1;4095:24:42;;144:18:43;;4095:40:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4150:23;4170:3;-1:-1:-1;;4150:23:42;:::i;:::-;4073:8;:111::i;:::-;4223:6;;4216:40;;-1:-1:-1;;;4216:40:42;;-1:-1:-1;;;;;189:32:43;;;4216:40:42;;;171:51:43;4194:111:42;;4223:6;;4216:24;;144:18:43;;4216:40:42;14:214:43;4194:111:42;4344:6;;4337:40;;-1:-1:-1;;;4337:40:42;;-1:-1:-1;;;;;189:32:43;;;4337:40:42;;;171:51:43;4315:111:42;;4344:6;;4337:24;;144:18:43;;4337:40:42;14:214:43;4315:111:42;4452:6;;4478:5;;4445:40;;-1:-1:-1;;;4445:40:42;;-1:-1:-1;;;;;4478:5:42;;;4445:40;;;171:51:43;4436:53:42;;4452:6;;;;;4445:24;;144:18:43;;4445:40:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4487:1;4436:8;:53::i;:::-;4515:6;;4541:5;;4508:40;;-1:-1:-1;;;4508:40:42;;-1:-1:-1;;;;;4541:5:42;;;4508:40;;;171:51:43;4499:53:42;;4515:6;;;;;4508:24;;144:18:43;;4508:40:42;14:214:43;4499:53:42;4578:6;;4604:5;;4571:40;;-1:-1:-1;;;4571:40:42;;-1:-1:-1;;;;;4604:5:42;;;4571:40;;;171:51:43;4562:53:42;;4578:6;;;;;4571:24;;144:18:43;;4571:40:42;14:214:43;4562:53:42;4625:14;;;-1:-1:-1;;;4625:14:42;;;;-1:-1:-1;;;;;;;;;;;250:64:7;4625:12:42;;:14;;;;;274:37:7;;4625:14:42;;;;;;;274:37:7;250:64;4625:14:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2737:1909;;;;;;2677:1969;;:::o;1421:1231::-;1492:16;;-1:-1:-1;;;1492:16:42;;1506:1;1502:5;;1492:16;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;1492:9:42;;705:18:43;;1492:16:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1518:32:42;;-1:-1:-1;;;1518:32:42;;-1:-1:-1;;;;;1528:21:42;;1518:32;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1518:9:42;;-1:-1:-1;705:18:43;;1518:32:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1560:30:42;;-1:-1:-1;;;1560:30:42;;-1:-1:-1;;;;;1570:19:42;;;;1560:30;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1560:9:42;;-1:-1:-1;705:18:43;;1560:30:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1600:33:42;;-1:-1:-1;;;1600:33:42;;1627:4;-1:-1:-1;;;;;1610:22:42;;;;1600:33;;;732:41:43;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1600:9:42;;-1:-1:-1;705:18:43;;1600:33:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1650:6:42;;1643:49;;-1:-1:-1;;;1643:49:42;;-1:-1:-1;;;;;1650:6:42;;;;-1:-1:-1;1643:23:42;;-1:-1:-1;1643:49:42;;1667:5;;-1:-1:-1;;1674:17:42;1643:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1702:20:42;;-1:-1:-1;;;1702:20:42;;-1:-1:-1;;;;;189:32:43;;1702:20:42;;;171:51:43;-1:-1:-1;;;;;;;;;;;250:64:7;1702:13:42;;144:18:43;;1702:20:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1739:6:42;;1763:5;;1732:57;;-1:-1:-1;;;1732:57:42;;-1:-1:-1;;;;;1739:6:42;;;;-1:-1:-1;1732:22:42;;-1:-1:-1;1732:57:42;;1763:5;;;;-1:-1:-1;;1771:17:42;1732:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1822:14:42;;;1834:1;1822:14;;;;;;;;1799:20;;1822:14;;;;;;;;-1:-1:-1;;1868:14:42;;;1880:1;1868:14;;;;;;;;;1799:37;;-1:-1:-1;1846:19:42;;1868:14;-1:-1:-1;1868:14:42;;;;;;;;;;;;;;;;;-1:-1:-1;;1918:16:42;;;1932:1;1918:16;;;;;;;;;1846:36;;-1:-1:-1;1892:23:42;;1918:16;;;;;;;;;;-1:-1:-1;;1971:16:42;;;1985:1;1971:16;;;;;;;;;1892:42;;-1:-1:-1;1944:24:42;;1971:16;-1:-1:-1;1971:16:42;;;;;;;;;-1:-1:-1;;2017:6:42;;1997:9;;1944:43;;-1:-1:-1;;;;;;2017:6:42;;1997:9;;-1:-1:-1;2017:6:42;;1997:9;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;1997:27:42;;;-1:-1:-1;;;;;1997:27:42;;;;;2047:1;2034:7;2042:1;2034:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;2069:1;2058:5;2064:1;2058:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;2091:2;2080:5;2086:1;2080:8;;;;;;;;:::i;:::-;:13;;;;:8;;;;;;;;;;:13;2132:6;;2113:30;;;;-1:-1:-1;;;;;2132:6:42;;;;2141:1;;2113:30;;:::i;:::-;;;;;;;;;;;;;2103:4;2108:1;2103:7;;;;;;;;:::i;:::-;;;;;;:40;;;;2153:47;2203:79;;;;;;;;2250:6;2203:79;;;;2266:5;-1:-1:-1;;;;;2203:79:42;;;;;2274:7;2203:79;;;2153:129;;2313:6;2302:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;2292:4;2297:1;2292:7;;;;;;;;:::i;:::-;;;;;;;;;;:28;2330:11;2362:3;2350:8;:1;2354:4;2350:8;:::i;:::-;2349:16;;;;:::i;:::-;2344:22;;:1;:22;:::i;:::-;2412:5;;:24;;-1:-1:-1;;;2412:24:42;;2330:36;;-1:-1:-1;;;;;;2412:5:42;;:11;;:24;;2424:5;;2431:4;;2412:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2476:6:42;;2469:40;;-1:-1:-1;;;2469:40:42;;-1:-1:-1;;;;;189:32:43;;;2469:40:42;;;171:51:43;2447:111:42;;-1:-1:-1;2476:6:42;;;;-1:-1:-1;2469:24:42;;144:18:43;;2469:40:42;14:214:43;2447:111:42;2584:6;;2610:5;;2577:40;;-1:-1:-1;;;2577:40:42;;-1:-1:-1;;;;;2610:5:42;;;2577:40;;;171:51:43;2568:53:42;;2584:6;;;;;2577:24;;144:18:43;;2577:40:42;14:214:43;1819:584:6;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:6;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:6;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:6;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:6;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:6;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:6;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:6:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10870:2:43;10852:21;;;10909:2;10889:18;;;10882:30;10948:34;10943:2;10928:18;;10921:62;-1:-1:-1;;;11014:2:43;10999:18;;10992:32;11056:3;11041:19;;10668:398;5286:41:6;;;;;;;;5346:31;;;11283:21:43;;;11340:2;11320:18;;;11313:30;-1:-1:-1;;;11374:2:43;11359:18;;11352:40;11459:4;11444:20;;11437:36;;;5346:31:6;;;;;;;11424:3:43;5346:31:6;;;5396;;;11696:21:43;;;11753:2;11733:18;;;11726:30;-1:-1:-1;;;11787:2:43;11772:18;;11765:40;11872:4;11857:20;;11850:36;;;5396:31:6;;;;;;;11837:3:43;5396:31:6;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:6;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:6;;;12099:51:43;;;-1:-1:-1;;;12166:18:43;;;12159:34;;;;2705:4:6;12209:18:43;;;12202:34;2482:11:6;;1671:64;2579:43;;12072:18:43;;2645:67:6;;;-1:-1:-1;;2645:67:6;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:6;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:6;2813:7;:14;;-1:-1:-1;;2813:14:6;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;233:354:43:-;301:6;309;362:2;350:9;341:7;337:23;333:32;330:52;;;378:1;375;368:12;330:52;401:23;;;-1:-1:-1;474:2:43;459:18;;446:32;-1:-1:-1;;;;;507:31:43;;497:42;;487:70;;553:1;550;543:12;487:70;576:5;566:15;;;233:354;;;;;:::o;3738:274::-;-1:-1:-1;;;;;3930:32:43;;;;3912:51;;3994:2;3979:18;;3972:34;3900:2;3885:18;;3738:274::o;4017:277::-;4084:6;4137:2;4125:9;4116:7;4112:23;4108:32;4105:52;;;4153:1;4150;4143:12;4105:52;4185:9;4179:16;4238:5;4231:13;4224:21;4217:5;4214:32;4204:60;;4260:1;4257;4250:12;4204:60;4283:5;4017:277;-1:-1:-1;;;4017:277:43:o;4639:127::-;4700:10;4695:3;4691:20;4688:1;4681:31;4731:4;4728:1;4721:15;4755:4;4752:1;4745:15;4771:435;4824:3;4862:5;4856:12;4889:6;4884:3;4877:19;4915:4;4944:2;4939:3;4935:12;4928:19;;4981:2;4974:5;4970:14;5002:1;5012:169;5026:6;5023:1;5020:13;5012:169;;;5087:13;;5075:26;;5121:12;;;;5156:15;;;;5048:1;5041:9;5012:169;;;-1:-1:-1;5197:3:43;;4771:435;-1:-1:-1;;;;;4771:435:43:o;5211:832::-;5479:2;5491:21;;;5561:13;;5464:18;;;5583:22;;;5431:4;;5658;;5636:2;5621:18;;;5685:15;;;5431:4;5728:195;5742:6;5739:1;5736:13;5728:195;;;5807:13;;-1:-1:-1;;;;;5803:39:43;5791:52;;5863:12;;;;5898:15;;;;5839:1;5757:9;5728:195;;;5732:3;;;5968:9;5963:3;5959:19;5954:2;5943:9;5939:18;5932:47;5996:41;6033:3;6025:6;5996:41;:::i;:::-;5988:49;5211:832;-1:-1:-1;;;;;;5211:832:43:o;6048:1033::-;6241:2;6252:21;;;6344:13;;6393:4;6373:18;;;6366:32;6447:19;;6311:3;6296:19;;6475:22;;;6212:4;;6241:2;6555:21;;;6212:4;;6528:3;6513:19;;;6604:195;6618:6;6615:1;6612:13;6604:195;;;6683:13;;-1:-1:-1;;;;;6679:39:43;6667:52;;6774:15;;;;6715:1;6633:9;;;;;6739:12;;;;6604:195;;;-1:-1:-1;6845:15:43;;;6839:22;-1:-1:-1;;;;;6835:48:43;6830:2;6815:18;;;6808:76;;;;6921:15;;6915:22;6979:19;;;-1:-1:-1;;6975:33:43;6968:4;6953:20;;6946:63;6915:22;7026:49;6983:3;6915:22;7026:49;:::i;:::-;7018:57;6048:1033;-1:-1:-1;;;;;;;6048:1033:43:o;7086:127::-;7147:10;7142:3;7138:20;7135:1;7128:31;7178:4;7175:1;7168:15;7202:4;7199:1;7192:15;7218:168;7258:7;7324:1;7320;7316:6;7312:14;7309:1;7306:21;7301:1;7294:9;7287:17;7283:45;7280:71;;;7331:18;;:::i;:::-;-1:-1:-1;7371:9:43;;7218:168::o;7391:217::-;7431:1;7457;7447:132;;7501:10;7496:3;7492:20;7489:1;7482:31;7536:4;7533:1;7526:15;7564:4;7561:1;7554:15;7447:132;-1:-1:-1;7593:9:43;;7391:217::o;7613:125::-;7653:4;7681:1;7678;7675:8;7672:34;;;7686:18;;:::i;:::-;-1:-1:-1;7723:9:43;;7613:125::o;7743:258::-;7815:1;7825:113;7839:6;7836:1;7833:13;7825:113;;;7915:11;;;7909:18;7896:11;;;7889:39;7861:2;7854:10;7825:113;;;7956:6;7953:1;7950:13;7947:48;;;7991:1;7982:6;7977:3;7973:16;7966:27;7947:48;;7743:258;;;:::o;8006:1534::-;8288:2;8300:21;;;8370:13;;8273:18;;;8392:22;;;8240:4;;8467;;8445:2;8430:18;;;8494:15;;;8240:4;8537:180;8551:6;8548:1;8545:13;8537:180;;;8616:13;;8631:4;8612:24;8600:37;;8657:12;;;;8692:15;;;;8573:1;8566:9;8537:180;;;-1:-1:-1;;;8753:19:43;;;8733:18;;;8726:47;8823:13;;8845:21;;;8884:12;;;;8936:1;8932:16;;;8923:26;;8919:35;;8979:15;;;9014:1;9024:487;9040:8;9035:3;9032:17;9024:487;;;9109:2;9105:7;9161:2;9155:3;9147:6;9143:16;9139:25;9132:5;9125:40;9194:8;9188:15;9238:2;9232:9;9269:8;9261:6;9254:24;9291:61;9343:8;9338:2;9330:6;9326:15;9321:2;9317;9313:11;9291:61;:::i;:::-;9487:14;;;;9409:2;9395:17;9391:26;;;9379:39;;;;9375:48;;;-1:-1:-1;9448:17:43;;;;9068:1;9059:11;9024:487;;;-1:-1:-1;9528:6:43;;8006:1534;-1:-1:-1;;;;;;;;;8006:1534:43:o;9545:184::-;9615:6;9668:2;9656:9;9647:7;9643:23;9639:32;9636:52;;;9684:1;9681;9674:12;9636:52;-1:-1:-1;9707:16:43;;9545:184;-1:-1:-1;9545:184:43:o;10013:371::-;-1:-1:-1;;;;;;10198:33:43;;10186:46;;10255:13;;10168:3;;10277:61;10255:13;10327:1;10318:11;;10311:4;10299:17;;10277:61;:::i;:::-;10358:16;;;;10376:1;10354:24;;10013:371;-1:-1:-1;;;10013:371:43:o;10389:274::-;10518:3;10556:6;10550:13;10572:53;10618:6;10613:3;10606:4;10598:6;10594:17;10572:53;:::i;:::-;10641:16;;;;;10389:274;-1:-1:-1;;10389:274:43:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testBatchDeposits(uint256,address)": "64cc11fb",
    "testSingleDeposits(uint256,address)": "8d05dda8",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"testBatchDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"testSingleDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/SwapsUnit.t.sol\":\"SwapsUnitTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-core/=lib/joe-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-core/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb7db7ad6f741b3c211b952d4ebdbd13393ebc72ec94ce372ed29693ae354267a\",\"urls\":[\"bzz-raw://e891360abc2e638d17405aa868ff4e2b53badc30e6b2cf2dd2943c5192ac6659\",\"dweb:/ipfs/QmRWVJbLPhbSqDmC7a5JjBfLPLJriyCu8a55rgh8m2JrfZ\"]},\"lib/contracts/contracts/interfaces/IPair.sol\":{\"keccak256\":\"0x2f8f02ca9ab8a14bba3e86d2eedefa2e470f88a36a3dfa715002750fed6d6838\",\"urls\":[\"bzz-raw://b5f3f6f4bc96782e7886b9fe3a5957d98b3d963f8dbfa210ad9813ca82c5c264\",\"dweb:/ipfs/QmUpH5qQZq6TrZoJsFBHqT688fowyNiUo83cRcAnsspzdR\"]},\"lib/contracts/contracts/interfaces/IPairFactory.sol\":{\"keccak256\":\"0x94f95228d76b621cb7e718ea097acbed1a3498ddd01db7fe7bfcde9f17c66cd6\",\"urls\":[\"bzz-raw://29139e3fa6b74971879aec713c4dcdf26255f0ed543768d50225f12d64376490\",\"dweb:/ipfs/QmampKWtLGaih7UHjnLzWri5gedF67V3EdELByrJsQ65mF\"]},\"lib/contracts/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0xb5e9bb7bd0f34d2b89995f2e5d728e9bcc130b859dce890aa9304d9fbe34cc78\",\"urls\":[\"bzz-raw://6e5758f15b1f2a2024ab8c89c5e1aa0949370d7d41e25d9438a51ee16e3e4a58\",\"dweb:/ipfs/QmYXa7NfWkFN3iEk6itJUdWX3d1z3euBwKECqMbPsguYGK\"]},\"lib/contracts/contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xbd004cdd13c7844cc7dcfc36f5ee478355bbe2f4ea07eaf4ba5cc1d1ae1aff04\",\"urls\":[\"bzz-raw://81a15e5ab3c45bb296e6a5b76b620b397e2d6446505a5601bf5294371c050d25\",\"dweb:/ipfs/QmZ8QDYPN2t4sTaepJa2FZYAN3P4MNYajWjRpcJcG3NbKB\"]},\"lib/contracts/contracts/libraries/Math.sol\":{\"keccak256\":\"0x0bf514ec598ba80066dc956faf4094f8717ef31b6f3534dd4bdfb6a2fdd3e08f\",\"urls\":[\"bzz-raw://41a2d8ca63f4b0aca3ca9c9d77d5d9eba5fe8c328de301504b40eeaaa547e576\",\"dweb:/ipfs/Qmc6JquDif2FRAwyV7HjyeUP7eHQzCS7ipRW6TnK7NhKzL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter01.sol\":{\"keccak256\":\"0xb87242a1098a0a2d64ac3f1eb970fc4fad2f1e43f06879a35733fe57d2bc3783\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27138b1d6ce2a542bc942a7d41d7302ae8dca2a894f37d8c06edc371eeee698\",\"dweb:/ipfs/QmQv4ZNhhXrTyCXL2NDCxg1Xuhmm8Q2CsE1PAhmAWp9rzn\"]},\"lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter02.sol\":{\"keccak256\":\"0xe0bea03fe60c0b819d5070049bac4b93650083aba173ccd1fa3c3ce665bf43ca\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://011999d25466b2198cc24365dd96fccf6a2a2da9e8c6dae11f6b070144fe3915\",\"dweb:/ipfs/QmXHrrp1k6nxuqd1CT6oTbYK21krGbst4E8MbfV2PxgaZL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter01.sol\":{\"keccak256\":\"0x2c01a280b6aaae58c4751176de3b31dd262eea0755723772a8b30fa72af3a85d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df343b0f163bf4dcbdd48700dcd5364a325480d5a4dc4e8e5bae599fb8783009\",\"dweb:/ipfs/QmbhRw49jdkQXCVmqDLSpGvRjBWk677v3ZSuNR3gkLxAiD\"]},\"lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter02.sol\":{\"keccak256\":\"0xd36c365fb434ae460de510632543a9c46393dbb49240a32fce653bc053fcae85\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://70a0df16eaf1069dc4c1e4059aae389486877effd59951d254d58ebb595a00e5\",\"dweb:/ipfs/QmQwTJDidPoHp82DuFSoNd7ZXfgLWq8w91Dhu7xfV9P7SV\"]},\"lib/spookyswap-core/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x7bf9a68b5be399ce542367291361819989039cdca993e8d60f4dd9c723ff4740\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9043b6ee74ee1df7fc0fb82b20b69ca97e6edd1cb05eef62c87b29f0cd71bc97\",\"dweb:/ipfs/Qme9RNhgu9R1ypJ1gUgEd8ZVJSFMciAdpLcWQ2UTAPkMUi\"]},\"lib/spookyswap-core/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x1cb83915099ee065638cb0b2e3820a14b7edc764c1ce6f54f8507cfc367821d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://06c45956935089ebabf4d84bbf8491cbf4cf15fcfca8464b717239de56d9981f\",\"dweb:/ipfs/QmeDJ7QGGcbRvqC2U7ZqCQ3VJkmqnPgwYtPs54F9fy3hiF\"]},\"lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb\",\"dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x03b602163607bfec193095263c5cc6f7a27fac34abdb40a98bb13ca70b1baa75\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://217ed9133a8365e438030ba66182b1f8e44df54976e949cd9e04e8abe674d79f\",\"dweb:/ipfs/QmSLcF9k2J5gm42zqpzpFE8YtES963pACy2mecx9tLPNTB\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440\",\"dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xf40e1697a7adb03822ebbd77995d408f0fc78f6e0082e92799fcf8ebb9e24d28\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5da104a2627ac01bbc6a8e105b5bb46b8a0c849ff092c336a2cd17dbbe72489e\",\"dweb:/ipfs/Qmew1o3G5hTCHXtFLyppwrV2ZawtbkqFM3SVKSZaSxHzwe\"]},\"src/CrossChainSwaps/CrossChainSwaps.sol\":{\"keccak256\":\"0xfb12a218e7441b4a2b604381b0ae719b70ebad3f9cacb044fc50cfb747f0d500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973a2620eb674f978877f7f396093758280539b6fd9bbf2bb9c7eeb482208a15\",\"dweb:/ipfs/Qmca9poTCJ6aCmG1mzRpf8jC3VvVBGADBw9ne7GiExKNj9\"]},\"src/CrossChainSwaps/adapters/StargateAdapter.sol\":{\"keccak256\":\"0x6abda4f5178b7542c6147bbc1d89ee9a511007fb1b0b2d6cc7bda13a191a5159\",\"urls\":[\"bzz-raw://82f29edad19d64a23193eefbd6698fad3a1c416d63b06e46781bb586f1cb483f\",\"dweb:/ipfs/QmUkLJ7grk9jsmPM4ysH9SBER5X6Q4pqMN21hUAFi9N45t\"]},\"src/CrossChainSwaps/adapters/SushiAdapter.sol\":{\"keccak256\":\"0x91a2bc175f74d1c74e74f5098ddefb9adda93788cba25e7672b04ce041f9710f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://051a3a161e27d0f1dbe136a0cc9e87eec16f1bdfd6f54881fff5da497cc5160c\",\"dweb:/ipfs/QmXkLR7WNwRhZUUF6vtPaBYRKTM5V7gaCLYr2XMBAQnvvA\"]},\"src/CrossChainSwaps/adapters/UniswapAdapter.sol\":{\"keccak256\":\"0xade77d7b1d61c9f8d5a585c376cb5617af45a6b20dea6790d936edc8ed657b7c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3c9e4df2f3df31a9c6378f9123e747ceb5b483b12c3a2b019cf54f40e7fb60f6\",\"dweb:/ipfs/Qmc92B6oqDWUqbHeLfZ8nG2pCWedC8ygy8HrP2QWRcdLXq\"]},\"src/CrossChainSwaps/adapters/VelodromeAdapter.sol\":{\"keccak256\":\"0xeb5470e2ec561cb3adeacd600d6002627ad0ae6a25383556089c36e4285de5cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297b42f6b0d06a77b536540abf4990f5c6dc61a1b1ae9b6cc320155a5674f45\",\"dweb:/ipfs/QmbYMKGv48HRdMjjwC8pYkVW8eYveA8BhrWG6NKdNMcwNZ\"]},\"src/CrossChainSwaps/interfaces/ICrossChainSwaps.sol\":{\"keccak256\":\"0xbc9afb46100aa08e5c5bb83eda6602d22d89f3f9d85f51a5dddc6d4441acd912\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://172856fad31953796f8d68e08a172557733561c9f9e9e984e1102f8ca8692f45\",\"dweb:/ipfs/QmXxTAy8bjJvoZ3zq1cDEcoMPshYsxdGbXy99PLrdb4maM\"]},\"src/CrossChainSwaps/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b\",\"dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr\"]},\"src/CrossChainSwaps/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0xd2b352dfab63caa98db0b727013c3e57c8764c4f8b5fc585c653991f25f808cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://45cac68bf34bbfa560f1a345ba75c609d1eba86a6e753d1bcc28b638634c1506\",\"dweb:/ipfs/QmbLyjXm6WUNx2qFex9MsYvSNrxaerNcbibtFtwfC92o8g\"]},\"src/CrossChainSwaps/interfaces/IWETH9.sol\":{\"keccak256\":\"0x228f74cbcd96cf96317acbcf91e966ab33b8bce022cfe048788f9eaa5a917693\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://92931f28be69da58910fdc266ceee0711806241120f89223a475645c5bfe21a2\",\"dweb:/ipfs/QmNa9d5PuqCvmYzaaBTXitXL1LcmNmKs4E6Cxsm5USSZtY\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313\",\"dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5\"]},\"test/SwapsUnit.t.sol\":{\"keccak256\":\"0x5c0c725d42adb27431bc2f4b48ebf493369f46eb3f830311fad456a747ceba5f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ac794a72761b49ac1eacbe5f2fb327a1dddddc6980f0fba0da8ee1054c8d0b5\",\"dweb:/ipfs/QmV3q2KPSG2Ga4aUSGQH6MYKz3EoAChf1AWAJiFime1wud\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBatchDeposits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSingleDeposits"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-core/=lib/joe-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-core/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/SwapsUnit.t.sol": "SwapsUnitTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xb7db7ad6f741b3c211b952d4ebdbd13393ebc72ec94ce372ed29693ae354267a",
        "urls": [
          "bzz-raw://e891360abc2e638d17405aa868ff4e2b53badc30e6b2cf2dd2943c5192ac6659",
          "dweb:/ipfs/QmRWVJbLPhbSqDmC7a5JjBfLPLJriyCu8a55rgh8m2JrfZ"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IPair.sol": {
        "keccak256": "0x2f8f02ca9ab8a14bba3e86d2eedefa2e470f88a36a3dfa715002750fed6d6838",
        "urls": [
          "bzz-raw://b5f3f6f4bc96782e7886b9fe3a5957d98b3d963f8dbfa210ad9813ca82c5c264",
          "dweb:/ipfs/QmUpH5qQZq6TrZoJsFBHqT688fowyNiUo83cRcAnsspzdR"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IPairFactory.sol": {
        "keccak256": "0x94f95228d76b621cb7e718ea097acbed1a3498ddd01db7fe7bfcde9f17c66cd6",
        "urls": [
          "bzz-raw://29139e3fa6b74971879aec713c4dcdf26255f0ed543768d50225f12d64376490",
          "dweb:/ipfs/QmampKWtLGaih7UHjnLzWri5gedF67V3EdELByrJsQ65mF"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IRouter.sol": {
        "keccak256": "0xb5e9bb7bd0f34d2b89995f2e5d728e9bcc130b859dce890aa9304d9fbe34cc78",
        "urls": [
          "bzz-raw://6e5758f15b1f2a2024ab8c89c5e1aa0949370d7d41e25d9438a51ee16e3e4a58",
          "dweb:/ipfs/QmYXa7NfWkFN3iEk6itJUdWX3d1z3euBwKECqMbPsguYGK"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IWETH.sol": {
        "keccak256": "0xbd004cdd13c7844cc7dcfc36f5ee478355bbe2f4ea07eaf4ba5cc1d1ae1aff04",
        "urls": [
          "bzz-raw://81a15e5ab3c45bb296e6a5b76b620b397e2d6446505a5601bf5294371c050d25",
          "dweb:/ipfs/QmZ8QDYPN2t4sTaepJa2FZYAN3P4MNYajWjRpcJcG3NbKB"
        ],
        "license": null
      },
      "lib/contracts/contracts/libraries/Math.sol": {
        "keccak256": "0x0bf514ec598ba80066dc956faf4094f8717ef31b6f3534dd4bdfb6a2fdd3e08f",
        "urls": [
          "bzz-raw://41a2d8ca63f4b0aca3ca9c9d77d5d9eba5fe8c328de301504b40eeaaa547e576",
          "dweb:/ipfs/Qmc6JquDif2FRAwyV7HjyeUP7eHQzCS7ipRW6TnK7NhKzL"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter01.sol": {
        "keccak256": "0xb87242a1098a0a2d64ac3f1eb970fc4fad2f1e43f06879a35733fe57d2bc3783",
        "urls": [
          "bzz-raw://a27138b1d6ce2a542bc942a7d41d7302ae8dca2a894f37d8c06edc371eeee698",
          "dweb:/ipfs/QmQv4ZNhhXrTyCXL2NDCxg1Xuhmm8Q2CsE1PAhmAWp9rzn"
        ],
        "license": "GPL-3.0"
      },
      "lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter02.sol": {
        "keccak256": "0xe0bea03fe60c0b819d5070049bac4b93650083aba173ccd1fa3c3ce665bf43ca",
        "urls": [
          "bzz-raw://011999d25466b2198cc24365dd96fccf6a2a2da9e8c6dae11f6b070144fe3915",
          "dweb:/ipfs/QmXHrrp1k6nxuqd1CT6oTbYK21krGbst4E8MbfV2PxgaZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter01.sol": {
        "keccak256": "0x2c01a280b6aaae58c4751176de3b31dd262eea0755723772a8b30fa72af3a85d",
        "urls": [
          "bzz-raw://df343b0f163bf4dcbdd48700dcd5364a325480d5a4dc4e8e5bae599fb8783009",
          "dweb:/ipfs/QmbhRw49jdkQXCVmqDLSpGvRjBWk677v3ZSuNR3gkLxAiD"
        ],
        "license": "GPL-3.0"
      },
      "lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter02.sol": {
        "keccak256": "0xd36c365fb434ae460de510632543a9c46393dbb49240a32fce653bc053fcae85",
        "urls": [
          "bzz-raw://70a0df16eaf1069dc4c1e4059aae389486877effd59951d254d58ebb595a00e5",
          "dweb:/ipfs/QmQwTJDidPoHp82DuFSoNd7ZXfgLWq8w91Dhu7xfV9P7SV"
        ],
        "license": "GPL-3.0"
      },
      "lib/spookyswap-core/contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x7bf9a68b5be399ce542367291361819989039cdca993e8d60f4dd9c723ff4740",
        "urls": [
          "bzz-raw://9043b6ee74ee1df7fc0fb82b20b69ca97e6edd1cb05eef62c87b29f0cd71bc97",
          "dweb:/ipfs/Qme9RNhgu9R1ypJ1gUgEd8ZVJSFMciAdpLcWQ2UTAPkMUi"
        ],
        "license": "GPL-3.0"
      },
      "lib/spookyswap-core/contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0x1cb83915099ee065638cb0b2e3820a14b7edc764c1ce6f54f8507cfc367821d3",
        "urls": [
          "bzz-raw://06c45956935089ebabf4d84bbf8491cbf4cf15fcfca8464b717239de56d9981f",
          "dweb:/ipfs/QmeDJ7QGGcbRvqC2U7ZqCQ3VJkmqnPgwYtPs54F9fy3hiF"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385",
        "urls": [
          "bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e",
          "dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411",
        "urls": [
          "bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb",
          "dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol": {
        "keccak256": "0x03b602163607bfec193095263c5cc6f7a27fac34abdb40a98bb13ca70b1baa75",
        "urls": [
          "bzz-raw://217ed9133a8365e438030ba66182b1f8e44df54976e949cd9e04e8abe674d79f",
          "dweb:/ipfs/QmSLcF9k2J5gm42zqpzpFE8YtES963pACy2mecx9tLPNTB"
        ],
        "license": "GPL-3.0"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc",
        "urls": [
          "bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440",
          "dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0xf40e1697a7adb03822ebbd77995d408f0fc78f6e0082e92799fcf8ebb9e24d28",
        "urls": [
          "bzz-raw://5da104a2627ac01bbc6a8e105b5bb46b8a0c849ff092c336a2cd17dbbe72489e",
          "dweb:/ipfs/Qmew1o3G5hTCHXtFLyppwrV2ZawtbkqFM3SVKSZaSxHzwe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/CrossChainSwaps.sol": {
        "keccak256": "0xfb12a218e7441b4a2b604381b0ae719b70ebad3f9cacb044fc50cfb747f0d500",
        "urls": [
          "bzz-raw://973a2620eb674f978877f7f396093758280539b6fd9bbf2bb9c7eeb482208a15",
          "dweb:/ipfs/Qmca9poTCJ6aCmG1mzRpf8jC3VvVBGADBw9ne7GiExKNj9"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/adapters/StargateAdapter.sol": {
        "keccak256": "0x6abda4f5178b7542c6147bbc1d89ee9a511007fb1b0b2d6cc7bda13a191a5159",
        "urls": [
          "bzz-raw://82f29edad19d64a23193eefbd6698fad3a1c416d63b06e46781bb586f1cb483f",
          "dweb:/ipfs/QmUkLJ7grk9jsmPM4ysH9SBER5X6Q4pqMN21hUAFi9N45t"
        ],
        "license": null
      },
      "src/CrossChainSwaps/adapters/SushiAdapter.sol": {
        "keccak256": "0x91a2bc175f74d1c74e74f5098ddefb9adda93788cba25e7672b04ce041f9710f",
        "urls": [
          "bzz-raw://051a3a161e27d0f1dbe136a0cc9e87eec16f1bdfd6f54881fff5da497cc5160c",
          "dweb:/ipfs/QmXkLR7WNwRhZUUF6vtPaBYRKTM5V7gaCLYr2XMBAQnvvA"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/CrossChainSwaps/adapters/UniswapAdapter.sol": {
        "keccak256": "0xade77d7b1d61c9f8d5a585c376cb5617af45a6b20dea6790d936edc8ed657b7c",
        "urls": [
          "bzz-raw://3c9e4df2f3df31a9c6378f9123e747ceb5b483b12c3a2b019cf54f40e7fb60f6",
          "dweb:/ipfs/Qmc92B6oqDWUqbHeLfZ8nG2pCWedC8ygy8HrP2QWRcdLXq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/adapters/VelodromeAdapter.sol": {
        "keccak256": "0xeb5470e2ec561cb3adeacd600d6002627ad0ae6a25383556089c36e4285de5cc",
        "urls": [
          "bzz-raw://e297b42f6b0d06a77b536540abf4990f5c6dc61a1b1ae9b6cc320155a5674f45",
          "dweb:/ipfs/QmbYMKGv48HRdMjjwC8pYkVW8eYveA8BhrWG6NKdNMcwNZ"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/interfaces/ICrossChainSwaps.sol": {
        "keccak256": "0xbc9afb46100aa08e5c5bb83eda6602d22d89f3f9d85f51a5dddc6d4441acd912",
        "urls": [
          "bzz-raw://172856fad31953796f8d68e08a172557733561c9f9e9e984e1102f8ca8692f45",
          "dweb:/ipfs/QmXxTAy8bjJvoZ3zq1cDEcoMPshYsxdGbXy99PLrdb4maM"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/interfaces/IStargateReceiver.sol": {
        "keccak256": "0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3",
        "urls": [
          "bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b",
          "dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IStargateRouter.sol": {
        "keccak256": "0xd2b352dfab63caa98db0b727013c3e57c8764c4f8b5fc585c653991f25f808cd",
        "urls": [
          "bzz-raw://45cac68bf34bbfa560f1a345ba75c609d1eba86a6e753d1bcc28b638634c1506",
          "dweb:/ipfs/QmbLyjXm6WUNx2qFex9MsYvSNrxaerNcbibtFtwfC92o8g"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IWETH9.sol": {
        "keccak256": "0x228f74cbcd96cf96317acbcf91e966ab33b8bce022cfe048788f9eaa5a917693",
        "urls": [
          "bzz-raw://92931f28be69da58910fdc266ceee0711806241120f89223a475645c5bfe21a2",
          "dweb:/ipfs/QmNa9d5PuqCvmYzaaBTXitXL1LcmNmKs4E6Cxsm5USSZtY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4",
        "urls": [
          "bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313",
          "dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5"
        ],
        "license": "MIT"
      },
      "test/SwapsUnit.t.sol": {
        "keccak256": "0x5c0c725d42adb27431bc2f4b48ebf493369f46eb3f830311fad456a747ceba5f",
        "urls": [
          "bzz-raw://4ac794a72761b49ac1eacbe5f2fb327a1dddddc6980f0fba0da8ee1054c8d0b5",
          "dweb:/ipfs/QmV3q2KPSG2Ga4aUSGQH6MYKz3EoAChf1AWAJiFime1wud"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/SwapsUnit.t.sol",
    "id": 30854,
    "exportedSymbols": {
      "Address": [
        25362
      ],
      "Context": [
        25384
      ],
      "CrossChainSwaps": [
        28074
      ],
      "DSTest": [
        2203
      ],
      "ERC20": [
        24612
      ],
      "ICrossChainSwaps": [
        29854
      ],
      "IERC20": [
        24690
      ],
      "IERC20Metadata": [
        24715
      ],
      "IERC20Permit": [
        24751
      ],
      "IJoeRouter02": [
        24025
      ],
      "IPancakeRouter02": [
        25780
      ],
      "IStargateReceiver": [
        29872
      ],
      "IStargateRouter": [
        29992
      ],
      "ISwapRouter": [
        27093
      ],
      "IUniswapV2Pair": [
        26418
      ],
      "IUniswapV2Router02": [
        26176
      ],
      "IWETH9": [
        30009
      ],
      "MockERC20": [
        30094
      ],
      "SafeERC20": [
        25032
      ],
      "SafeMathUniswap": [
        26493
      ],
      "Script": [
        2466
      ],
      "StargateAdapter": [
        28440
      ],
      "StdStorage": [
        5494
      ],
      "SushiLegacyAdapter": [
        28690
      ],
      "SwapsUnitTest": [
        30853
      ],
      "Test": [
        5396
      ],
      "TransferHelper": [
        27264
      ],
      "UniswapAdapter": [
        28870
      ],
      "UniswapV2Library": [
        26979
      ],
      "VelodromeAdapter": [
        29842
      ],
      "Vm": [
        7501
      ],
      "console": [
        15565
      ],
      "console2": [
        23629
      ],
      "stdError": [
        5466
      ],
      "stdJson": [
        2826
      ],
      "stdMath": [
        6735
      ],
      "stdStorage": [
        6596
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4610:42",
    "nodes": [
      {
        "id": 30096,
        "nodeType": "PragmaDirective",
        "src": "39:24:42",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30097,
        "nodeType": "ImportDirective",
        "src": "65:28:42",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30854,
        "sourceUnit": 6736,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30098,
        "nodeType": "ImportDirective",
        "src": "94:52:42",
        "absolutePath": "src/CrossChainSwaps/CrossChainSwaps.sol",
        "file": "../src/CrossChainSwaps/CrossChainSwaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30854,
        "sourceUnit": 28075,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30099,
        "nodeType": "ImportDirective",
        "src": "147:36:42",
        "absolutePath": "src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30854,
        "sourceUnit": 30095,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30100,
        "nodeType": "ImportDirective",
        "src": "184:55:42",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30854,
        "sourceUnit": 24691,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30101,
        "nodeType": "ImportDirective",
        "src": "240:61:42",
        "absolutePath": "src/CrossChainSwaps/adapters/StargateAdapter.sol",
        "file": "../src/CrossChainSwaps/adapters/StargateAdapter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30854,
        "sourceUnit": 28441,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30853,
        "nodeType": "ContractDefinition",
        "src": "327:4321:42",
        "nodes": [
          {
            "id": 30106,
            "nodeType": "VariableDeclaration",
            "src": "364:21:42",
            "constant": false,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "380:5:42",
            "scope": 30853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
              "typeString": "contract CrossChainSwaps"
            },
            "typeName": {
              "id": 30105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30104,
                "name": "CrossChainSwaps",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28074,
                "src": "364:15:42"
              },
              "referencedDeclaration": 28074,
              "src": "364:15:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                "typeString": "contract CrossChainSwaps"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30109,
            "nodeType": "VariableDeclaration",
            "src": "391:16:42",
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "401:6:42",
            "scope": 30853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30094",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30108,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30107,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30094,
                "src": "391:9:42"
              },
              "referencedDeclaration": 30094,
              "src": "391:9:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30094",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30112,
            "nodeType": "VariableDeclaration",
            "src": "413:16:42",
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "423:6:42",
            "scope": 30853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30094",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30110,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30094,
                "src": "413:9:42"
              },
              "referencedDeclaration": 30094,
              "src": "413:9:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30094",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30115,
            "nodeType": "VariableDeclaration",
            "src": "435:16:42",
            "constant": false,
            "mutability": "mutable",
            "name": "token3",
            "nameLocation": "445:6:42",
            "scope": 30853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30094",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30114,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30113,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30094,
                "src": "435:9:42"
              },
              "referencedDeclaration": 30094,
              "src": "435:9:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30094",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30121,
            "nodeType": "VariableDeclaration",
            "src": "457:30:42",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "465:5:42",
            "scope": 30853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30116,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "457:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3078313234",
                  "id": 30119,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "481:5:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_292_by_1",
                    "typeString": "int_const 292"
                  },
                  "value": "0x124"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_292_by_1",
                    "typeString": "int_const 292"
                  }
                ],
                "id": 30118,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "473:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 30117,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:42",
                  "typeDescriptions": {}
                }
              },
              "id": 30120,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "473:14:42",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30209,
            "nodeType": "FunctionDefinition",
            "src": "494:904:42",
            "body": {
              "id": 30208,
              "nodeType": "Block",
              "src": "518:880:42",
              "statements": [
                {
                  "expression": {
                    "id": 30152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30124,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30106,
                      "src": "528:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                        "typeString": "contract CrossChainSwaps"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 30130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "577:42:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "569:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30128,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "569:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "569:51:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "654:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "646:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30133,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "646:7:42",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "646:10:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30132,
                            "name": "ISwapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27093,
                            "src": "634:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$27093_$",
                              "typeString": "type(contract ISwapRouter)"
                            }
                          },
                          "id": 30137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "634:23:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$27093",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 30138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "671:42:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 30139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "727:66:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
                        },
                        {
                          "hexValue": "307832354362644462393862333561623146463737343133343536423331454338314136423642373436",
                          "id": 30140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "807:42:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x25CbdDb98b35ab1FF77413456B31EC81A6B6B746"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 30143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "871:42:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "863:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30141,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "863:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "863:51:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "952:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "944:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30146,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "944:7:42",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "944:10:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30145,
                            "name": "IStargateRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "928:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStargateRouter_$29992_$",
                              "typeString": "type(contract IStargateRouter)"
                            }
                          },
                          "id": 30150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "928:27:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStargateRouter_$29992",
                            "typeString": "contract IStargateRouter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_ISwapRouter_$27093",
                            "typeString": "contract ISwapRouter"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStargateRouter_$29992",
                            "typeString": "contract IStargateRouter"
                          }
                        ],
                        "id": 30127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "536:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_ISwapRouter_$27093_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_contract$_IStargateRouter_$29992_$returns$_t_contract$_CrossChainSwaps_$28074_$",
                          "typeString": "function (address,contract ISwapRouter,address,bytes32,address,address,contract IStargateRouter) returns (contract CrossChainSwaps)"
                        },
                        "typeName": {
                          "id": 30126,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30125,
                            "name": "CrossChainSwaps",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28074,
                            "src": "540:15:42"
                          },
                          "referencedDeclaration": 28074,
                          "src": "540:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                            "typeString": "contract CrossChainSwaps"
                          }
                        }
                      },
                      "id": 30151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "536:429:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                        "typeString": "contract CrossChainSwaps"
                      }
                    },
                    "src": "528:437:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                      "typeString": "contract CrossChainSwaps"
                    }
                  },
                  "id": 30153,
                  "nodeType": "ExpressionStatement",
                  "src": "528:437:42"
                },
                {
                  "expression": {
                    "id": 30170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30154,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30109,
                      "src": "975:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2031",
                          "id": 30158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1011:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5eacce6c95f6838cd10e92f48b0d82f4df03d4ad1e947ebc0e9a235c5ef43194",
                            "typeString": "literal_string \"Token 1\""
                          },
                          "value": "Token 1"
                        },
                        {
                          "hexValue": "544b31",
                          "id": 30159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1034:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          "value": "TK1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30162,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1061:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1053:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30160,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1053:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1053:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1085:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30165,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1085:7:42",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30164,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1080:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1080:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1080:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5eacce6c95f6838cd10e92f48b0d82f4df03d4ad1e947ebc0e9a235c5ef43194",
                            "typeString": "literal_string \"Token 1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "984:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30094_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30156,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30155,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30094,
                            "src": "988:9:42"
                          },
                          "referencedDeclaration": 30094,
                          "src": "988:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "984:123:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "975:132:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30094",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30171,
                  "nodeType": "ExpressionStatement",
                  "src": "975:132:42"
                },
                {
                  "expression": {
                    "id": 30188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30172,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30112,
                      "src": "1117:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2032",
                          "id": 30176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1153:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c751b5b68c0ab3f6eca892f0f099d5a090c64dfe42ad9cf60707ee1cc8d081d8",
                            "typeString": "literal_string \"Token 2\""
                          },
                          "value": "Token 2"
                        },
                        {
                          "hexValue": "544b32",
                          "id": 30177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1176:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          "value": "TK2"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30180,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1203:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1195:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30178,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1195:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1195:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1227:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30183,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1227:7:42",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30182,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1222:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1222:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1222:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c751b5b68c0ab3f6eca892f0f099d5a090c64dfe42ad9cf60707ee1cc8d081d8",
                            "typeString": "literal_string \"Token 2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1126:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30094_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30174,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30173,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30094,
                            "src": "1130:9:42"
                          },
                          "referencedDeclaration": 30094,
                          "src": "1130:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1126:123:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1117:132:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30094",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30189,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:132:42"
                },
                {
                  "expression": {
                    "id": 30206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30190,
                      "name": "token3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30115,
                      "src": "1259:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2033",
                          "id": 30194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1295:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_57491824fcb3f02d12c71479511f447bd2617e2fb2c579357821dbff760f2b99",
                            "typeString": "literal_string \"Token 3\""
                          },
                          "value": "Token 3"
                        },
                        {
                          "hexValue": "544b33",
                          "id": 30195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1318:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ff513019c6e0a94954db08bafee0c1d15ae9bbc88b847489251a31df275f0089",
                            "typeString": "literal_string \"TK3\""
                          },
                          "value": "TK3"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30198,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1345:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1337:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1337:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1337:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1369:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30201,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1369:7:42",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30200,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1364:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1364:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1364:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_57491824fcb3f02d12c71479511f447bd2617e2fb2c579357821dbff760f2b99",
                            "typeString": "literal_string \"Token 3\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ff513019c6e0a94954db08bafee0c1d15ae9bbc88b847489251a31df275f0089",
                            "typeString": "literal_string \"TK3\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1268:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30094_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30192,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30191,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30094,
                            "src": "1272:9:42"
                          },
                          "referencedDeclaration": 30094,
                          "src": "1272:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1268:123:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30094",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1259:132:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30094",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30207,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:132:42"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "503:5:42",
            "parameters": {
              "id": 30122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:42"
            },
            "returnParameters": {
              "id": 30123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:42"
            },
            "scope": 30853,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30457,
            "nodeType": "FunctionDefinition",
            "src": "1421:1231:42",
            "body": {
              "id": 30456,
              "nodeType": "Block",
              "src": "1482:1170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30219,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30211,
                          "src": "1502:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1506:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1502:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30216,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1492:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1492:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30223,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:16:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30227,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30211,
                          "src": "1528:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1537:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                },
                                "typeName": {
                                  "id": 30229,
                                  "name": "uint216",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1537:7:42",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                }
                              ],
                              "id": 30228,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1532:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint216",
                              "typeString": "type(uint216)"
                            }
                          },
                          "id": 30232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1532:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint216",
                            "typeString": "uint216"
                          }
                        },
                        "src": "1528:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30224,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1518:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1518:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:32:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30235,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:32:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30239,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30213,
                          "src": "1570:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1587:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1579:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30240,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1579:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1579:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1570:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1560:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1560:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30246,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30250,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30213,
                          "src": "1610:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30253,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1627:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1619:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1619:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1610:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30247,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1600:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1600:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:33:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30257,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:33:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30262,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30213,
                        "src": "1667:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1679:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30264,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1679:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30263,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1674:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1674:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30259,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30109,
                            "src": "1650:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30258,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "1643:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1643:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "1643:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30269,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30273,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30213,
                        "src": "1716:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30270,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1702:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6965,
                      "src": "1702:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1702:20:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30275,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:20:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30282,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30106,
                            "src": "1763:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 30281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1755:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30280,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1755:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1755:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1776:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30285,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1776:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30284,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1771:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1771:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1771:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30277,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30109,
                            "src": "1739:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30276,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "1732:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1732:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "1732:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1732:57:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30290,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:57:42"
                },
                {
                  "assignments": [
                    30295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30295,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "1814:5:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "1799:20:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30293,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1799:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30294,
                        "nodeType": "ArrayTypeName",
                        "src": "1799:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30301,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1834:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1822:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30296,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1826:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30297,
                        "nodeType": "ArrayTypeName",
                        "src": "1826:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 30300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1799:37:42"
                },
                {
                  "assignments": [
                    30306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30306,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1861:4:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "1846:19:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30304,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1846:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30305,
                        "nodeType": "ArrayTypeName",
                        "src": "1846:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30312,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1880:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1868:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30307,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1872:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30308,
                        "nodeType": "ArrayTypeName",
                        "src": "1872:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 30311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1846:36:42"
                },
                {
                  "assignments": [
                    30317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30317,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1909:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "1892:23:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1892:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30316,
                        "nodeType": "ArrayTypeName",
                        "src": "1892:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30323,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 30321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 30320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1918:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1922:7:42",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30319,
                        "nodeType": "ArrayTypeName",
                        "src": "1922:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 30322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1892:42:42"
                },
                {
                  "assignments": [
                    30328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30328,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "1961:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "1944:24:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1944:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30327,
                        "nodeType": "ArrayTypeName",
                        "src": "1944:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30334,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 30332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1985:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 30331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1971:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1975:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30330,
                        "nodeType": "ArrayTypeName",
                        "src": "1975:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 30333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1944:43:42"
                },
                {
                  "expression": {
                    "id": 30342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30335,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30317,
                        "src": "1997:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 30337,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1997:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30340,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30109,
                          "src": "2017:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 30339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2009:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2009:15:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1997:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30343,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:27:42"
                },
                {
                  "expression": {
                    "id": 30348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30344,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30328,
                        "src": "2034:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 30346,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2034:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30347,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30211,
                      "src": "2047:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2034:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30349,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:14:42"
                },
                {
                  "expression": {
                    "id": 30354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30350,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30295,
                        "src": "2058:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30352,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2058:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 30353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2069:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2058:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30355,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:12:42"
                },
                {
                  "expression": {
                    "id": 30360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30356,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30295,
                        "src": "2080:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30358,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2086:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2080:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 30359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2091:2:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "2080:13:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30361,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:13:42"
                },
                {
                  "expression": {
                    "id": 30373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30362,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30306,
                        "src": "2103:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30364,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2108:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2103:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30369,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30109,
                              "src": "2132:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$30094",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$30094",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 30368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2124:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30367,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2124:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2124:15:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30371,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30211,
                          "src": "2141:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 30365,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2113:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2113:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2113:30:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2103:40:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30374,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:40:42"
                },
                {
                  "assignments": [
                    30379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30379,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2194:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "2153:47:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                        "typeString": "struct CrossChainSwaps.SrcTransferParams"
                      },
                      "typeName": {
                        "id": 30378,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30377,
                          "name": "CrossChainSwaps.SrcTransferParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27309,
                          "src": "2153:33:42"
                        },
                        "referencedDeclaration": 27309,
                        "src": "2153:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SrcTransferParams_$27309_storage_ptr",
                          "typeString": "struct CrossChainSwaps.SrcTransferParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30389,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30382,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30317,
                        "src": "2250:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30385,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30213,
                            "src": "2266:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2258:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2258:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2258:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30387,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30328,
                        "src": "2274:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30380,
                        "name": "CrossChainSwaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28074,
                        "src": "2203:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossChainSwaps_$28074_$",
                          "typeString": "type(contract CrossChainSwaps)"
                        }
                      },
                      "id": 30381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SrcTransferParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27309,
                      "src": "2203:46:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$27309_storage_ptr_$",
                        "typeString": "type(struct CrossChainSwaps.SrcTransferParams storage pointer)"
                      }
                    },
                    "id": 30388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:79:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                      "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2153:129:42"
                },
                {
                  "expression": {
                    "id": 30397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30390,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30306,
                        "src": "2292:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30392,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2297:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2292:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30395,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30379,
                          "src": "2313:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        ],
                        "expression": {
                          "id": 30393,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2302:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2302:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2302:18:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2292:28:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30398,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:28:42"
                },
                {
                  "assignments": [
                    30400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30400,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2338:3:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30456,
                      "src": "2330:11:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2330:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30410,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30401,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30211,
                      "src": "2344:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 30404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 30402,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30211,
                                  "src": "2350:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "39393935",
                                  "id": 30403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2354:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9995_by_1",
                                    "typeString": "int_const 9995"
                                  },
                                  "value": "9995"
                                },
                                "src": "2350:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 30405,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2349:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316534",
                            "id": 30406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2362:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "1e4"
                          },
                          "src": "2349:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30408,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2348:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2344:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2330:36:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30414,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30295,
                        "src": "2424:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 30415,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30306,
                        "src": "2431:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30411,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30106,
                        "src": "2412:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                          "typeString": "contract CrossChainSwaps"
                        }
                      },
                      "id": 30413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28059,
                      "src": "2412:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 30416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30417,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30425,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30213,
                                "src": "2502:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 30424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2494:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30423,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2494:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2494:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30420,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30109,
                                "src": "2476:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30419,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "2469:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2469:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "2469:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2469:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2529:7:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 30429,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2529:7:42",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 30428,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2524:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 30431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2524:13:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 30432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "2524:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 30433,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30400,
                              "src": "2544:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2524:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30435,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2523:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30418,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "2447:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2447:111:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30437,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:111:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30445,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30106,
                                "src": "2610:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 30444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2602:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30443,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2602:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2602:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30440,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30109,
                                "src": "2584:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30439,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "2577:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2577:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "2577:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2619:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30438,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "2568:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30450,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:53:42"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30451,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2631:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6982,
                      "src": "2631:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30455,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:14:42"
                }
              ]
            },
            "functionSelector": "8d05dda8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSingleDeposits",
            "nameLocation": "1430:18:42",
            "parameters": {
              "id": 30214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30211,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1457:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30457,
                  "src": "1449:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30213,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1468:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30457,
                  "src": "1460:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:26:42"
            },
            "returnParameters": {
              "id": 30215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:42"
            },
            "scope": 30853,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30852,
            "nodeType": "FunctionDefinition",
            "src": "2677:1969:42",
            "body": {
              "id": 30851,
              "nodeType": "Block",
              "src": "2737:1909:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30467,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30459,
                          "src": "2757:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2757:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30464,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2747:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2747:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30471,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:16:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30475,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30459,
                          "src": "2783:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2792:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                },
                                "typeName": {
                                  "id": 30477,
                                  "name": "uint216",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2792:7:42",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                }
                              ],
                              "id": 30476,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2787:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2787:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint216",
                              "typeString": "type(uint216)"
                            }
                          },
                          "id": 30480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "2787:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint216",
                            "typeString": "uint216"
                          }
                        },
                        "src": "2783:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30472,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2773:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2773:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:32:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30483,
                  "nodeType": "ExpressionStatement",
                  "src": "2773:32:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30487,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30461,
                          "src": "2825:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2842:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2834:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30488,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2834:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2834:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2825:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30484,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2815:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2815:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30494,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30498,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30461,
                          "src": "2865:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30501,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2882:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$30853",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2874:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30499,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2874:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2874:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2865:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30495,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2855:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2855:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:33:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30505,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:33:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30510,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "2922:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2934:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30512,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2934:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30511,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2929:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2929:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30507,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30109,
                            "src": "2905:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30506,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "2898:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2898:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "2898:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30517,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30522,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "2981:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2993:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30524,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2993:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30523,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2988:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2988:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2988:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30519,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30112,
                            "src": "2964:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30518,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "2957:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2957:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "2957:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2957:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30529,
                  "nodeType": "ExpressionStatement",
                  "src": "2957:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30534,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "3040:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3052:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30536,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3052:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30535,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3047:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3047:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30531,
                            "name": "token3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30115,
                            "src": "3023:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30530,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3016:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3016:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "3016:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30541,
                  "nodeType": "ExpressionStatement",
                  "src": "3016:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30545,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "3089:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30542,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "3075:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6965,
                      "src": "3075:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:20:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30547,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:20:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30554,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30106,
                            "src": "3136:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 30553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3128:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3128:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3128:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3149:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30557,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3149:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30556,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3144:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3144:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3144:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30549,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30109,
                            "src": "3112:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30548,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3105:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3105:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3105:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:57:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30562,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:57:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30569,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30106,
                            "src": "3203:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 30568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3195:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30567,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3195:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3195:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3216:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30572,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3216:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30571,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3211:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3211:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3211:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30564,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30112,
                            "src": "3179:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30563,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3172:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3172:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3172:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:57:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30577,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:57:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30584,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30106,
                            "src": "3270:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 30583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3262:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3262:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3262:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3283:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30587,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3283:7:42",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30586,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3278:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3278:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3278:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30579,
                            "name": "token3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30115,
                            "src": "3246:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30094",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30578,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3239:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3239:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3239:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3239:57:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30592,
                  "nodeType": "ExpressionStatement",
                  "src": "3239:57:42"
                },
                {
                  "assignments": [
                    30597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30597,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "3321:5:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3306:20:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30595,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3306:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30596,
                        "nodeType": "ArrayTypeName",
                        "src": "3306:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30603,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3341:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3329:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30598,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30599,
                        "nodeType": "ArrayTypeName",
                        "src": "3333:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 30602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3306:37:42"
                },
                {
                  "assignments": [
                    30608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30608,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3368:4:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3353:19:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30606,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3353:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30607,
                        "nodeType": "ArrayTypeName",
                        "src": "3353:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30614,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3387:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3375:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30609,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3379:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30610,
                        "nodeType": "ArrayTypeName",
                        "src": "3379:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 30613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3353:36:42"
                },
                {
                  "assignments": [
                    30619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30619,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "3416:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3399:23:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30617,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3399:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30618,
                        "nodeType": "ArrayTypeName",
                        "src": "3399:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30625,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 30623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 30622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3425:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3429:7:42",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30621,
                        "nodeType": "ArrayTypeName",
                        "src": "3429:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 30624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3399:42:42"
                },
                {
                  "assignments": [
                    30630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30630,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "3468:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3451:24:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30629,
                        "nodeType": "ArrayTypeName",
                        "src": "3451:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30636,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 30634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3492:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 30633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3478:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3482:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30632,
                        "nodeType": "ArrayTypeName",
                        "src": "3482:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 30635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:16:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:43:42"
                },
                {
                  "expression": {
                    "id": 30644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30637,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30619,
                        "src": "3504:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 30639,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3511:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3504:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30642,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30109,
                          "src": "3524:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 30641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3516:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3516:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3516:15:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3504:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30645,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:27:42"
                },
                {
                  "expression": {
                    "id": 30653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30646,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30619,
                        "src": "3541:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 30648,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3548:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3541:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30651,
                          "name": "token2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30112,
                          "src": "3561:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 30650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3553:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3553:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3553:15:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3541:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30654,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:27:42"
                },
                {
                  "expression": {
                    "id": 30662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30655,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30619,
                        "src": "3578:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 30657,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 30656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3585:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3578:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30660,
                          "name": "token3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30115,
                          "src": "3598:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30094",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 30659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3590:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3590:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3590:15:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3578:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30663,
                  "nodeType": "ExpressionStatement",
                  "src": "3578:27:42"
                },
                {
                  "expression": {
                    "id": 30668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30664,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30630,
                        "src": "3615:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 30666,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3623:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3615:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30667,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30459,
                      "src": "3628:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3615:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30669,
                  "nodeType": "ExpressionStatement",
                  "src": "3615:14:42"
                },
                {
                  "expression": {
                    "id": 30674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30670,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30630,
                        "src": "3639:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 30672,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3647:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3639:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30673,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30459,
                      "src": "3652:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3639:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30675,
                  "nodeType": "ExpressionStatement",
                  "src": "3639:14:42"
                },
                {
                  "expression": {
                    "id": 30680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30676,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30630,
                        "src": "3663:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 30678,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 30677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3671:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3663:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30679,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30459,
                      "src": "3676:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3663:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30681,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:14:42"
                },
                {
                  "expression": {
                    "id": 30686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30682,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30597,
                        "src": "3687:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30684,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3693:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3687:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 30685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3698:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3687:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30687,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:12:42"
                },
                {
                  "expression": {
                    "id": 30692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30688,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30597,
                        "src": "3709:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30690,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3715:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3709:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 30691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3720:2:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "3709:13:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30693,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:13:42"
                },
                {
                  "expression": {
                    "id": 30702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30694,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30608,
                        "src": "3732:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30696,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3737:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3732:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30699,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30619,
                          "src": "3753:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 30700,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30630,
                          "src": "3761:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
                          "id": 30697,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3742:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "3742:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3742:27:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3732:37:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30703,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:37:42"
                },
                {
                  "assignments": [
                    30708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30708,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3820:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3779:47:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                        "typeString": "struct CrossChainSwaps.SrcTransferParams"
                      },
                      "typeName": {
                        "id": 30707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30706,
                          "name": "CrossChainSwaps.SrcTransferParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27309,
                          "src": "3779:33:42"
                        },
                        "referencedDeclaration": 27309,
                        "src": "3779:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SrcTransferParams_$27309_storage_ptr",
                          "typeString": "struct CrossChainSwaps.SrcTransferParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30718,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30711,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30619,
                        "src": "3876:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30714,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30461,
                            "src": "3892:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3884:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30712,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3884:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3884:14:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30716,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30630,
                        "src": "3900:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30709,
                        "name": "CrossChainSwaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28074,
                        "src": "3829:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossChainSwaps_$28074_$",
                          "typeString": "type(contract CrossChainSwaps)"
                        }
                      },
                      "id": 30710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SrcTransferParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27309,
                      "src": "3829:46:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$27309_storage_ptr_$",
                        "typeString": "type(struct CrossChainSwaps.SrcTransferParams storage pointer)"
                      }
                    },
                    "id": 30717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:79:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                      "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3779:129:42"
                },
                {
                  "expression": {
                    "id": 30726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30719,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30608,
                        "src": "3918:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30721,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3923:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3918:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30724,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30708,
                          "src": "3939:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        ],
                        "expression": {
                          "id": 30722,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3928:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "3928:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3928:18:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3918:28:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30727,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:28:42"
                },
                {
                  "assignments": [
                    30729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30729,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "3964:3:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 30851,
                      "src": "3956:11:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3956:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30739,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30730,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30459,
                      "src": "3970:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 30733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 30731,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30459,
                                  "src": "3976:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "39393935",
                                  "id": 30732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3980:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9995_by_1",
                                    "typeString": "int_const 9995"
                                  },
                                  "value": "9995"
                                },
                                "src": "3976:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 30734,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3975:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316534",
                            "id": 30735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3988:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "1e4"
                          },
                          "src": "3975:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30737,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3974:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3970:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3956:36:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30743,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30597,
                        "src": "4050:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 30744,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30608,
                        "src": "4057:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30740,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30106,
                        "src": "4038:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                          "typeString": "contract CrossChainSwaps"
                        }
                      },
                      "id": 30742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28059,
                      "src": "4038:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 30745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30746,
                  "nodeType": "ExpressionStatement",
                  "src": "4038:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30754,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30461,
                                "src": "4128:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 30753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4120:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30752,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4120:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4120:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30749,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30109,
                                "src": "4102:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30748,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4095:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4095:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4095:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4095:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4155:7:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 30758,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4155:7:42",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 30757,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4150:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 30760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4150:13:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 30761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4150:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 30762,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30729,
                              "src": "4170:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4150:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30764,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4149:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30747,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4073:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4073:111:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30766,
                  "nodeType": "ExpressionStatement",
                  "src": "4073:111:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30774,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30461,
                                "src": "4249:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 30773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4241:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4241:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4241:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30769,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30112,
                                "src": "4223:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30768,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4216:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4216:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4216:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4216:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4276:7:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 30778,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4276:7:42",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 30777,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4271:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 30780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4271:13:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 30781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4271:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 30782,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30729,
                              "src": "4291:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4271:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30784,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4270:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30767,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4194:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:111:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30786,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:111:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30794,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30461,
                                "src": "4370:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 30793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4362:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30792,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4362:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4362:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30789,
                                "name": "token3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30115,
                                "src": "4344:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30788,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4337:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4337:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4337:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4337:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4397:7:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 30798,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4397:7:42",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 30797,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4392:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 30800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4392:13:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 30801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4392:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 30802,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30729,
                              "src": "4412:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4392:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30804,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4391:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30787,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4315:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4315:111:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30806,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:111:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30814,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30106,
                                "src": "4478:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 30813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4470:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30812,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4470:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4470:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30809,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30109,
                                "src": "4452:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30808,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4445:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4445:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4445:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4445:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4487:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4436:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30819,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:53:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30827,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30106,
                                "src": "4541:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 30826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4533:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30825,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4533:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4533:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30822,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30112,
                                "src": "4515:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30821,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4508:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4508:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4508:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4508:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4550:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30820,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4499:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30832,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:53:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30840,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30106,
                                "src": "4604:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28074",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 30839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4596:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4596:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4596:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30835,
                                "name": "token3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30115,
                                "src": "4578:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30094",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30834,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4571:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4571:14:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4571:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4571:40:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4613:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30833,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4562:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4562:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30845,
                  "nodeType": "ExpressionStatement",
                  "src": "4562:53:42"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30846,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "4625:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6982,
                      "src": "4625:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:14:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30850,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:14:42"
                }
              ]
            },
            "functionSelector": "64cc11fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchDeposits",
            "nameLocation": "2686:17:42",
            "parameters": {
              "id": 30462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30459,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2712:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30852,
                  "src": "2704:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30461,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "2723:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 30852,
                  "src": "2715:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2703:26:42"
            },
            "returnParameters": {
              "id": 30463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:42"
            },
            "scope": 30853,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30102,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5396,
              "src": "353:4:42"
            },
            "id": 30103,
            "nodeType": "InheritanceSpecifier",
            "src": "353:4:42"
          }
        ],
        "canonicalName": "SwapsUnitTest",
        "contractDependencies": [
          28074,
          30094
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30853,
          5396,
          2466,
          2203
        ],
        "name": "SwapsUnitTest",
        "nameLocation": "336:13:42",
        "scope": 30854,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 42
}