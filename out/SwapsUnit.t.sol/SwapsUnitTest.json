{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "testBatchDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSTF",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "testSingleDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546201000162ff00ff19909116179055600c80546001600160a01b03191661012417905534801561003757600080fd5b50617c6d806100476000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638d05dda811620000625780638d05dda814620000f9578063ba414fa61462000110578063f8ccbf47146200012b578063fa7626d4146200013f57600080fd5b80630a9254e414620000985780633a76846314620000a457806364cc11fb14620000d85780638855ba8114620000ef575b600080fd5b620000a26200014d565b005b620000bb60008051602062007c1883398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a2620000e9366004620018ae565b620003d3565b620000a262000e81565b620000a26200010a366004620018ae565b62000f03565b6200011a62001529565b6040519015158152602001620000cf565b6000546200011a9062010000900460ff1681565b6000546200011a9060ff1681565b6000806000806000806000604051620001669062001892565b6001600160a01b03978816815295871660208701529386166040860152606085019290925284166080840152831660a083015290911660c082015260e001604051809103906000f080158015620001c1573d6000803e3d6000fd5b50600860006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030600019604051620001fa90620018a0565b608080825260079082015266546f6b656e203160c81b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000266573d6000803e3d6000fd5b50600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550306000196040516200029f90620018a0565b6080808252600790820152662a37b5b2b7101960c91b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f0801580156200030b573d6000803e3d6000fd5b50600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550306000196040516200034490620018a0565b608080825260079082015266546f6b656e203360c81b60a082015260c06020820181905260039082015262544b3360e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620003b0573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604051632631f2b160e11b815260018311600482015260008051602062007c1883398151915290634c63e56290602401600060405180830381600087803b1580156200041e57600080fd5b505af115801562000433573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b038510600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b0384161515600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b158015620004f457600080fd5b505af115801562000509573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b0385161415600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200056157600080fd5b505af115801562000576573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620005b090849060001990600401620018ec565b6020604051808303816000875af1158015620005d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f6919062001905565b50600a5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906200062d90849060001990600401620018ec565b6020604051808303816000875af11580156200064d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000673919062001905565b50600b5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90620006aa90849060001990600401620018ec565b6020604051808303816000875af1158015620006ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f0919062001905565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007c18833981519152906306447d5690602401600060405180830381600087803b1580156200074257600080fd5b505af115801562000757573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000796929091169060001990600401620018ec565b6020604051808303816000875af1158015620007b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007dc919062001905565b50600a5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620008179291169060001990600401620018ec565b6020604051808303816000875af115801562000837573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085d919062001905565b50600b5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620008989291169060001990600401620018ec565b6020604051808303816000875af1158015620008b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008de919062001905565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b606081526020019060019003908162000919575050604080516003808252608082019092529192506000919060208201606080368337505060408051600380825260808201909252929350600092915060208201606080368337505060095484519293506001600160a01b0316918491506000906200099c576200099c62001930565b6001600160a01b039283166020918202929092010152600a54835191169083906001908110620009d057620009d062001930565b6001600160a01b039283166020918202929092010152600b5483519116908390600290811062000a045762000a0462001930565b60200260200101906001600160a01b031690816001600160a01b031681525050858160008151811062000a3b5762000a3b62001930565b602002602001018181525050858160018151811062000a5e5762000a5e62001930565b602002602001018181525050858160028151811062000a815762000a8162001930565b60200260200101818152505060028460008151811062000aa55762000aa562001930565b602002602001019060ff16908160ff1681525050600b8460018151811062000ad15762000ad162001930565b60ff90921660209283029190910182015260405162000af591849184910162001983565b6040516020818303038152906040528360008151811062000b1a5762000b1a62001930565b602002602001018190525060006040518060600160405280848152602001876001600160a01b031681526020018381525090508060405160200162000b609190620019e7565b6040516020818303038152906040528460018151811062000b855762000b8562001930565b6020908102919091010152600061271062000ba38961270b62001a8b565b62000baf919062001aad565b62000bbb908962001ad0565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc89062000bf0908990899060040162001b1d565b600060405180830381600087803b15801562000c0b57600080fd5b505af115801562000c20573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b8116600483015262000caf945090911691506370a08231906024015b602060405180830381865afa15801562000c75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c9b919062001bd6565b62000ca98360001962001ad0565b6200165a565b600a546040516370a0823160e01b81526001600160a01b03898116600483015262000ce59216906370a082319060240162000c57565b600b546040516370a0823160e01b81526001600160a01b03898116600483015262000d1b9216906370a082319060240162000c57565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000d9e9291909116906370a08231906024015b602060405180830381865afa15801562000d70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d96919062001bd6565b60006200165a565b600a546008546040516370a0823160e01b81526001600160a01b03918216600482015262000dda9291909116906370a082319060240162000d52565b600b546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e169291909116906370a082319060240162000d52565b604080516390c5013b60e01b8152905160008051602062007c18833981519152916390c5013b91600480830192600092919082900301818387803b15801562000e5e57600080fd5b505af115801562000e73573d6000803e3d6000fd5b505050505050505050505050565b600954600c5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262000eba92911690600090600401620018ec565b6020604051808303816000875af115801562000eda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f00919062001905565b50565b604051632631f2b160e11b815260018311600482015260008051602062007c1883398151915290634c63e56290602401600060405180830381600087803b15801562000f4e57600080fd5b505af115801562000f63573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b038510600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b15801562000fb857600080fd5b505af115801562000fcd573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b0384161515600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200102457600080fd5b505af115801562001039573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b0385161415600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200109157600080fd5b505af1158015620010a6573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620010e090849060001990600401620018ec565b6020604051808303816000875af115801562001100573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001126919062001905565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007c18833981519152906306447d5690602401600060405180830381600087803b1580156200117857600080fd5b505af11580156200118d573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620011cc929091169060001990600401620018ec565b6020604051808303816000875af1158015620011ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001212919062001905565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b60608152602001906001900390816200124d57505060408051600180825281830190925291925060009190602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337505060095484519293506001600160a01b031691849150600090620012ce57620012ce62001930565b60200260200101906001600160a01b031690816001600160a01b031681525050858160008151811062001305576200130562001930565b60200260200101818152505060018460008151811062001329576200132962001930565b602002602001019060ff16908160ff1681525050600b8460018151811062001355576200135562001930565b60ff90921660209283029190910182015260095460405162001386926001600160a01b0390921691899101620018ec565b60405160208183030381529060405283600081518110620013ab57620013ab62001930565b602002602001018190525060006040518060600160405280848152602001876001600160a01b0316815260200183815250905080604051602001620013f19190620019e7565b6040516020818303038152906040528460018151811062001416576200141662001930565b60209081029190910101526000612710620014348961270b62001a8b565b62001440919062001aad565b6200144c908962001ad0565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc89062001481908990899060040162001b1d565b600060405180830381600087803b1580156200149c57600080fd5b505af1158015620014b1573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b81166004830152620014ed945090911691506370a082319060240162000c57565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e169291909116906370a082319060240162000d52565b60008054610100900460ff16156200154a5750600054610100900460ff1690565b600060008051602062007c188339815191523b15620016555760405160009060008051602062007c18833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620015b79083906519985a5b195960d21b90602001620018ec565b60408051601f1981840301815290829052620015d7929160200162001bf0565b60408051601f1981840301815290829052620015f39162001c23565b6000604051808303816000865af19150503d806000811462001632576040519150601f19603f3d011682016040523d82523d6000602084013e62001637565b606091505b509150508080602001905181019062001651919062001905565b9150505b919050565b80821462001785577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016cd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200178562001789565b5050565b60008051602062007c188339815191523b1562001881576040805160008051602062007c18833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200181c929160200162001bf0565b60408051601f1981840301815290829052620018389162001c23565b6000604051808303816000865af19150503d806000811462001877576040519150601f19603f3d011682016040523d82523d6000602084013e6200187c565b606091505b505050505b6000805461ff001916610100179055565b6150a08062001c4283390190565b610f368062006ce283390190565b60008060408385031215620018c257600080fd5b8235915060208301356001600160a01b0381168114620018e157600080fd5b809150509250929050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200191857600080fd5b815180151581146200192957600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101562001978578151875295820195908201906001016200195a565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b82811015620019c75781516001600160a01b031684529284019290840190600101620019a0565b50505083810382850152620019dd818662001946565b9695505050505050565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101562001a375783516001600160a01b0316825292840192600192909201919084019062001a0c565b50928601516001600160a01b0316604086810191909152860151858403601f190160608701529262001a6a818562001946565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562001aa85762001aa862001a75565b500290565b60008262001acb57634e487b7160e01b600052601260045260246000fd5b500490565b60008282101562001ae55762001ae562001a75565b500390565b60005b8381101562001b0757818101518382015260200162001aed565b8381111562001b17576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b8281101562001b5b57815160ff168452928401929084019060010162001b3a565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101562001bc757601f19808785030186528251805180865262001ba8818b88018c850162001aea565b96890196601f0190911693909301870192509086019060010162001b7d565b50909998505050505050505050565b60006020828403121562001be957600080fd5b5051919050565b6001600160e01b031983168152815160009062001c1581600485016020870162001aea565b919091016004019392505050565b6000825162001c3781846020870162001aea565b919091019291505056fe6101606040523480156200001257600080fd5b50604051620050a0380380620050a0833981016040819052620000359162000117565b6001600160a01b03868116608052600080546001600160a01b031916878316179055600185905581811660a0523360c052831660e081905260408051631355724960e31b81529051859285929091639aab9248916004808201926020929091908290030181865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d59190620001b6565b610120526001600160a01b0390811661010052979097166101405250620001d095505050505050565b6001600160a01b03811681146200011457600080fd5b50565b600080600080600080600060e0888a0312156200013357600080fd5b87516200014081620000fe565b60208901519097506200015381620000fe565b60408901519096506200016681620000fe565b606089015160808a015191965094506200018081620000fe565b60a08901519093506200019381620000fe565b60c0890151909250620001a681620000fe565b8091505092959891949750929550565b600060208284031215620001c957600080fd5b5051919050565b60805160a05160c05160e051610100516101205161014051614e056200029b600039600081816101570152610bca0152600061058b015260006104ec01526000818161046001528181610550015281816106fb0152818161080f01528181611823015281816119c70152611d7f01526000818161040c015281816115d4015261274a01526000818161035c01528181611ba6015281816126eb01526127710152600081816103d801528181611e8101528181611fa60152818161203f015261210a0152614e056000f3fe6080604052600436106101395760003560e01c80639aab9248116100ab578063c415b95c1161006f578063c415b95c146103fa578063c45a01551461042e578063c7f5fd101461044e578063d5ef98ea14610482578063e5e31b13146104aa578063fdc09e07146104da57600080fd5b80639aab924814610326578063a9e56f3c1461034a578063ab8236f31461037e578063c21ebd071461039e578063c31c9c07146103c657600080fd5b80635e1e6325116100fd5780635e1e63251461023f5780635e60dab51461027457806367375cc8146102a95780638ed8ea7e1461022a5780639881fcb4146102be57806398a0fb3c146102eb57600080fd5b80633fc8cef3146101455780634c1ee03e14610196578063544caa56146101b657806354fd4d50146101f657806359f571e81461022a57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101796101b136600461386d565b61050e565b3480156101c257600080fd5b506101d66101d13660046138b8565b6105de565b604080516001600160a01b0393841681529290911660208301520161018d565b34801561020257600080fd5b506040805180820182526005815264302e302e3360d81b6020820152905161018d9190613949565b34801561023657600080fd5b50610179600081565b34801561024b57600080fd5b5061025f61025a36600461395c565b6106c3565b6040805192835290151560208301520161018d565b34801561028057600080fd5b5061029461028f36600461386d565b610917565b6040805192835260208301919091520161018d565b6102bc6102b7366004613b7f565b6109cf565b005b3480156102ca57600080fd5b506102de6102d9366004613c40565b6116d6565b60405161018d9190613d24565b3480156102f757600080fd5b5061030b610306366004613d68565b61198f565b6040805193845260208401929092529082015260600161018d565b34801561033257600080fd5b5061033c60015481565b60405190815260200161018d565b34801561035657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561038a57600080fd5b506102bc610399366004613dd3565b611b9b565b3480156103aa57600080fd5b506101797310ed43c718714eb63d5aa57b78b54704e256024e81565b3480156103d257600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561040657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561043a57600080fd5b50600054610179906001600160a01b031681565b34801561045a57600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561048e57600080fd5b50610179739c12939390052919af3155f41bf4160fd3666a6f81565b3480156104b657600080fd5b506104ca6104c5366004613e6f565b611d5d565b604051901515815260200161018d565b3480156104e657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b600080600061051d86866105de565b6040516001600160601b0319606084811b8216602084015283901b16603482015286151560f81b604882015291935091507f000000000000000000000000000000000000000000000000000000000000000090604901604051602081830303815290604052805190602001207f00000000000000000000000000000000000000000000000000000000000000006040516020016105bc93929190613e8c565b60408051601f1981840301815291905280516020909101209695505050505050565b600080826001600160a01b0316846001600160a01b0316036106475760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061066757828461066a565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b604482015260640161063e565b9250929050565b60008060006106d48585600161050e565b60405163e5e31b1360e01b81526001600160a01b03828116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190613ebf565b156107e1576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190613edc565b91505b6107ed8787600061050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529194507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c9190613ebf565b156108f5576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190613edc565b90505b80821161090457806000610908565b8160015b94509450505050935093915050565b600080600061092686866105de565b50905060008061093788888861050e565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109989190613ef5565b5091509150826001600160a01b0316886001600160a01b0316146109bd5780826109c0565b81815b90999098509650505050505050565b60005b82518110156116d15760008382815181106109ef576109ef613f23565b60200260200101519050600160ff168160ff1603610a7857600080848481518110610a1c57610a1c613f23565b6020026020010151806020019051810190610a379190613f39565b9150915060008111610a5c5760405163fe4155c760e01b815260040160405180910390fd5b610a716001600160a01b038316333084611df2565b50506116be565b60011960ff821601610b6a57600080848481518110610a9957610a99613f23565b6020026020010151806020019051810190610ab49190614031565b9150915060005b8251811015610b62576000828281518110610ad857610ad8613f23565b602002602001015111610afe5760405163fe4155c760e01b815260040160405180910390fd5b610b503330848481518110610b1557610b15613f23565b6020026020010151868581518110610b2f57610b2f613f23565b60200260200101516001600160a01b0316611df2909392919063ffffffff16565b80610b5a816140a0565b915050610abb565b5050506116be565b60021960ff821601610c42576000838381518110610b8a57610b8a613f23565b6020026020010151806020019051810190610ba59190613edc565b905060008111610bc85760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b5050505050506116be565b60031960ff821601610d2357600080600080868681518110610c6657610c66613f23565b6020026020010151806020019051810190610c819190614126565b935093509350935060005b8451811015610d1957610d06858281518110610caa57610caa613f23565b6020026020010151858381518110610cc457610cc4613f23565b6020026020010151858481518110610cde57610cde613f23565b6020026020010151858581518110610cf857610cf8613f23565b602002602001015130611e63565b5080610d11816140a0565b915050610c8c565b50505050506116be565b60041960ff821601610e5f576000806000806000806000898981518110610d4c57610d4c613f23565b6020026020010151806020019051810190610d6791906141d2565b965096509650965096509650965060005b8751811015610e5257610e3f888281518110610d9657610d96613f23565b6020026020010151888381518110610db057610db0613f23565b6020026020010151888481518110610dca57610dca613f23565b6020026020010151888581518110610de457610de4613f23565b6020026020010151888681518110610dfe57610dfe613f23565b6020026020010151888781518110610e1857610e18613f23565b6020026020010151888881518110610e3257610e32613f23565b6020026020010151612021565b5080610e4a816140a0565b915050610d78565b50505050505050506116be565b60051960ff821601610f3657600080600080868681518110610e8357610e83613f23565b6020026020010151806020019051810190610e9e919061436b565b935093509350935060005b8451811015610d1957610f23858281518110610ec757610ec7613f23565b6020026020010151858381518110610ee157610ee1613f23565b6020026020010151858481518110610efb57610efb613f23565b602002602001015130868681518110610f1657610f16613f23565b602002602001015161218f565b5080610f2e816140a0565b915050610ea9565b60061960ff8216016110e757600080600080868681518110610f5a57610f5a613f23565b6020026020010151806020019051810190610f759190614473565b935093509350935060005b8451811015610d1957610ff46000868381518110610fa057610fa0613f23565b6020026020010151858481518110610fba57610fba613f23565b6020026020010151600081518110610fd457610fd4613f23565b60200260200101516001600160a01b03166123559092919063ffffffff16565b60006001600160a01b03166338ed173986838151811061101657611016613f23565b602002602001015186848151811061103057611030613f23565b602002602001015186858151811061104a5761104a613f23565b60200260200101513087878151811061106557611065613f23565b60200260200101516040518663ffffffff1660e01b815260040161108d959493929190614513565b6000604051808303816000875af11580156110ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d49190810190614584565b50806110df816140a0565b915050610f80565b60071960ff82160161126a5760008060008086868151811061110b5761110b613f23565b60200260200101518060200190518101906111269190614473565b935093509350935060005b8451811015610d19576111647310ed43c718714eb63d5aa57b78b54704e256024e868381518110610fa057610fa0613f23565b7310ed43c718714eb63d5aa57b78b54704e256024e6001600160a01b03166338ed173986838151811061119957611199613f23565b60200260200101518684815181106111b3576111b3613f23565b60200260200101518685815181106111cd576111cd613f23565b6020026020010151308787815181106111e8576111e8613f23565b60200260200101516040518663ffffffff1660e01b8152600401611210959493929190614513565b6000604051808303816000875af115801561122f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112579190810190614584565b5080611262816140a0565b915050611131565b60081960ff8216016113c75760008060008086868151811061128e5761128e613f23565b60200260200101518060200190518101906112a99190614473565b935093509350935060005b8451811015610d19576112d46000868381518110610fa057610fa0613f23565b60006001600160a01b03166338ed17398683815181106112f6576112f6613f23565b602002602001015186848151811061131057611310613f23565b602002602001015186858151811061132a5761132a613f23565b60200260200101513087878151811061134557611345613f23565b60200260200101516040518663ffffffff1660e01b815260040161136d959493929190614513565b6000604051808303816000875af115801561138c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b49190810190614584565b50806113bf816140a0565b9150506112b4565b60091960ff8216016114cf5760008383815181106113e7576113e7613f23565b602002602001015180602001905181019061140291906145b8565b905060005b8151811015610a715761149a739c12939390052919af3155f41bf4160fd3666a6f83838151811061143a5761143a613f23565b60200260200101516000015184848151811061145857611458613f23565b60200260200101516040015160008151811061147657611476613f23565b6020026020010151600001516001600160a01b03166123559092919063ffffffff16565b6114bc8282815181106114af576114af613f23565b6020026020010151612407565b50806114c7816140a0565b915050611407565b600a1960ff82160161166b5760008383815181106114ef576114ef613f23565b602002602001015180602001905181019061150a919061476d565b905060005b815151811015610a715760008260000151828151811061153157611531613f23565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115aa9190613edc565b905060006115b7826125a5565b90506115c38183614810565b91506115f96001600160a01b0384167f0000000000000000000000000000000000000000000000000000000000000000836125ca565b6020850151611613906001600160a01b03851690846125ca565b604080516001600160a01b0385168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a15050508080611663906140a0565b91505061150f565b600b1960ff8216016116be57600080600085858151811061168e5761168e613f23565b60200260200101518060200190518101906116a99190614951565b9250925092506116ba8383836125fa565b5050505b50806116c9816140a0565b9150506109d2565b505050565b60606001825110156117215760405162461bcd60e51b81526020600482015260146024820152730a4deeae8cae47440929cac82989288bea082a8960631b604482015260640161063e565b815161172e906001614a5e565b6001600160401b0381111561174557611745613993565b60405190808252806020026020018201604052801561176e578160200160208202803683370190505b509050828160008151811061178557611785613f23565b60200260200101818152505060005b82518110156119885760006118018483815181106117b4576117b4613f23565b6020026020010151600001518584815181106117d2576117d2613f23565b6020026020010151602001518685815181106117f0576117f0613f23565b60200260200101516040015161050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa15801561186c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118909190613ebf565b1561197557806001600160a01b031663f140a35a8484815181106118b6576118b6613f23565b60200260200101518685815181106118d0576118d0613f23565b6020026020010151600001516040518363ffffffff1660e01b815260040161190b9291909182526001600160a01b0316602082015260400190565b602060405180830381865afa158015611928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194c9190613edc565b83611958846001614a5e565b8151811061196857611968613f23565b6020026020010181815250505b5080611980816140a0565b915050611794565b5092915050565b6040516306801cc360e41b81526001600160a01b038681166004830152858116602483015284151560448301526000918291829182917f00000000000000000000000000000000000000000000000000000000000000001690636801cc3090606401602060405180830381865afa158015611a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a329190614a76565b9050600080806001600160a01b03841615611abc57836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa99190613edc565b9050611ab68c8c8c610917565b90935091505b82158015611ac8575081155b15611af9578896508795506103e8611ae8611ae3888a614a93565b6128f0565b611af29190614810565b9450611b8c565b6000611b068a858561295a565b9050888111611b4e57899750955085611b4784611b23848b614a93565b611b2d9190614ab2565b84611b38858b614a93565b611b429190614ab2565b612a24565b9550611b8a565b6000611b5b8a858761295a565b9850899750889050611b8685611b718584614a93565b611b7b9190614ab2565b85611b38868c614a93565b9650505b505b50505050955095509592505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611be457604051638afe477f60e01b815260040160405180910390fd5b600080600083806020019051810190611bfd9190614ad4565b604051630ce6eb9960e31b8152929550909350915060009030906367375cc890611c2d9086908690600401614bc6565b600060405180830381600087803b158015611c4757600080fd5b505af1925050508015611c58575060015b611ca6573d808015611c86576040519150601f19603f3d011682016040523d82523d6000602084013e611c8b565b606091505b50611ca06001600160a01b03891686896125ca565b60019150505b60004715611d02576040516001600160a01b038616904790600081818185875af1925050503d8060008114611cf7576040519150601f19603f3d011682016040523d82523d6000602084013e611cfc565b606091505b50909150505b6040805188815283151560208201528215158183015290516001600160a01b038a16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a25050505050505050505050565b60405163e5e31b1360e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dec9190613ebf565b92915050565b6040516001600160a01b0380851660248301528316604482015260648101829052611e5d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a3c565b50505050565b6040516370a0823160e01b8152306004820152600090611efc9086907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a08231906024015b602060405180830381865afa158015611ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef79190613edc565b612b0e565b60408051610100810182526001600160a01b0387811682528681166020830190815262ffffff87811684860190815287841660608601908152426080870190815260a087018e8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af1158015611ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120169190613edc565b979650505050505050565b6040516370a0823160e01b81523060048201526000906120789087907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a0823190602401611eb6565b6040805160a0810182526001600160601b0319606089811b821660c08401526001600160e81b031960e888811b821660d48601528a831b841660d786015287901b1660eb84015287811b90911660ee830152825180830360e2018152610102830184528252306020830152428284015281018a905260808101899052905163c04b8d5960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c04b8d599061213f908490600401614bf4565b6020604051808303816000875af115801561215e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121829190613edc565b9998505050505050505050565b6000806121b360008054906101000a90046001600160a01b03168887600154612c0e565b905080600182516121c49190614810565b815181106121d4576121d4613f23565b602002602001015191508582101561222e5760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604482015260640161063e565b82156123405760008054865161234092612286926001600160a01b03169189919061225b5761225b613f23565b60200260200101518860018151811061227657612276613f23565b6020026020010151600154612d9a565b8660008151811061229957612299613f23565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156122e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230d9190613edc565b8760008151811061232057612320613f23565b60200260200101516001600160a01b03166125ca9092919063ffffffff16565b61234b818686612e20565b5095945050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156123a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ca9190613edc565b6123d49190614a5e565b6040516001600160a01b038516602482015260448101829052909150611e5d90859063095ea7b360e01b90606401611e26565b60608160600151428110156124505760405162461bcd60e51b815260206004820152600f60248201526e149bdd5d195c8e8811561412549151608a1b604482015260640161063e565b612462836000015184604001516116d6565b9150826020015182600184516124789190614810565b8151811061248857612488613f23565b602002602001015110156124e95760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b606482015260840161063e565b612590836040015160008151811061250357612503613f23565b60200260200101516000015130612570866040015160008151811061252a5761252a613f23565b602002602001015160000151876040015160008151811061254d5761254d613f23565b60200260200101516020015188604001516000815181106117f0576117f0613f23565b8560008151811061258357612583613f23565b6020026020010151612ff7565b61259f828460400151306130ef565b50919050565b60006127106125b68361270b614a93565b6125c09190614ab2565b611dec9083614810565b6040516001600160a01b0383166024820152604481018290526116d190849063a9059cbb60e01b90606401611e26565b6000341161261b5760405163c9935ff960e01b815260040160405180910390fd5b6000836101000151838360405160200161263793929190614c4c565b604051602081830303815290604052905083608001516000036126c75760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561269e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c29190613edc565b6126cd565b83608001515b608085018190526020850151612710916001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000090612355565b600061271f85608001516125a5565b905080856080018181516127339190614810565b905250602085015161276f906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000836125ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47876000015188604001518960600151308b608001518c60a0015160405180606001604052808f610120015181526020018f60c0015181526020018f60e00151604051602001612801919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528152508e60e0015160405160200161283b919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528c6040518b63ffffffff1660e01b815260040161286f99989796959493929190614c8c565b6000604051808303818588803b15801561288857600080fd5b505af115801561289c573d6000803e3d6000fd5b50505050602086810151604080516001600160a01b0390921682529181018490527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f92500160405180910390a15050505050565b6000600382111561294b575080600061290a600283614ab2565b612915906001614a5e565b90505b8181101561259f579050806002816129308186614ab2565b61293a9190614a5e565b6129449190614ab2565b9050612918565b8115612955575060015b919050565b60008084116129ab5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a20494e53554646494349454e545f414d4f554e540000000000604482015260640161063e565b6000831180156129bb5750600082115b612a075760405162461bcd60e51b815260206004820152601e60248201527f526f757465723a20494e53554646494349454e545f4c49515549444954590000604482015260640161063e565b82612a128386614a93565b612a1c9190614ab2565b949350505050565b6000818310612a335781612a35565b825b9392505050565b6000612a91826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661333e9092919063ffffffff16565b8051909150156116d15780806020019051810190612aaf9190613ebf565b6116d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063e565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691612b6a9190614d2a565b6000604051808303816000865af19150503d8060008114612ba7576040519150601f19603f3d011682016040523d82523d6000602084013e612bac565b606091505b5091509150818015612bd6575080511580612bd6575080806020019051810190612bd69190613ebf565b612c075760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161063e565b5050505050565b6060600283511015612c625760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015260640161063e565b82516001600160401b03811115612c7b57612c7b613993565b604051908082528060200260200182016040528015612ca4578160200160208202803683370190505b5090508381600081518110612cbb57612cbb613f23565b60200260200101818152505060005b60018451612cd89190614810565b811015612d9157600080612d2c88878581518110612cf857612cf8613f23565b602002602001015188866001612d0e9190614a5e565b81518110612d1e57612d1e613f23565b60200260200101518861334d565b91509150612d54848481518110612d4557612d45613f23565b60200260200101518383613419565b84612d60856001614a5e565b81518110612d7057612d70613f23565b60200260200101818152505050508080612d89906140a0565b915050612cca565b50949350505050565b6000806000612da9868661352d565b6040516001600160601b0319606084811b8216602084015283901b166034820152919350915087906048016040516020818303038152906040528051906020012085604051602001612dfd93929190613e8c565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b60018351612e319190614810565b811015611e5d57600080848381518110612e4d57612e4d613f23565b602002602001015185846001612e639190614a5e565b81518110612e7357612e73613f23565b6020026020010151915091506000612e8b838361352d565b509050600087612e9c866001614a5e565b81518110612eac57612eac613f23565b60200260200101519050600080836001600160a01b0316866001600160a01b031614612eda57826000612ede565b6000835b91509150600060028a51612ef29190614810565b8810612efe5788612f2b565b600054612f2b906001600160a01b0316878c612f1b8c6002614a5e565b8151811061227657612276613f23565b9050612f4e60008054906101000a90046001600160a01b03168888600154612d9a565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612f8b576020820181803683370190505b506040518563ffffffff1660e01b8152600401612fab9493929190614d46565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050505050508080612fef906140a0565b915050612e23565b6000846001600160a01b03163b1161300e57600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916130729190614d2a565b6000604051808303816000865af19150503d80600081146130af576040519150601f19603f3d011682016040523d82523d6000602084013e6130b4565b606091505b50915091508180156130de5750805115806130de5750808060200190518101906130de9190613ebf565b6130e757600080fd5b505050505050565b60005b8251811015611e5d57600061314184838151811061311257613112613f23565b60200260200101516000015185848151811061313057613130613f23565b6020026020010151602001516105de565b509050600085613152846001614a5e565b8151811061316257613162613f23565b60200260200101519050600080836001600160a01b031687868151811061318b5761318b613f23565b6020026020010151600001516001600160a01b0316146131ad578260006131b1565b6000835b915091506000600188516131c59190614810565b86106131d15786613244565b613244886131e0886001614a5e565b815181106131f0576131f0613f23565b6020026020010151600001518988600161320a9190614a5e565b8151811061321a5761321a613f23565b6020026020010151602001518a8960016132349190614a5e565b815181106117f0576117f0613f23565b905061329788878151811061325b5761325b613f23565b60200260200101516000015189888151811061327957613279613f23565b6020026020010151602001518a89815181106117f0576117f0613f23565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f1916602001820160405280156132d4576020820181803683370190505b506040518563ffffffff1660e01b81526004016132f49493929190614d46565b600060405180830381600087803b15801561330e57600080fd5b505af1158015613322573d6000803e3d6000fd5b5050505050505050508080613336906140a0565b9150506130f2565b6060612a1c848460008561361d565b600080600061335c868661352d565b50905060008061336e89898989612d9a565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156133ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cf9190614d8a565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614613406578082613409565b81815b909a909950975050505050505050565b600080841161347e5760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b606482015260840161063e565b60008311801561348e5750600082115b6134eb5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b606482015260840161063e565b60006134f9856103e56136ed565b9050600061350782856136ed565b905060006135218361351b886103e86136ed565b90613754565b90506120168183614ab2565b600080826001600160a01b0316846001600160a01b03160361359f5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161063e565b826001600160a01b0316846001600160a01b0316106135bf5782846135c2565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161063e565b60608247101561367e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161063e565b600080866001600160a01b0316858760405161369a9190614d2a565b60006040518083038185875af1925050503d80600081146136d7576040519150601f19603f3d011682016040523d82523d6000602084013e6136dc565b606091505b5091509150612016878383876137a9565b6000811580613711575082826137038183614a93565b925061370f9083614ab2565b145b611dec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015260640161063e565b6000826137618382614a5e565b9150811015611dec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015260640161063e565b60608315613818578251600003613811576001600160a01b0385163b6138115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063e565b5081612a1c565b612a1c838381511561382d5781518083602001fd5b8060405162461bcd60e51b815260040161063e9190613949565b6001600160a01b038116811461385c57600080fd5b50565b801515811461385c57600080fd5b60008060006060848603121561388257600080fd5b833561388d81613847565b9250602084013561389d81613847565b915060408401356138ad8161385f565b809150509250925092565b600080604083850312156138cb57600080fd5b82356138d681613847565b915060208301356138e681613847565b809150509250929050565b60005b8381101561390c5781810151838201526020016138f4565b83811115611e5d5750506000910152565b600081518084526139358160208601602086016138f1565b601f01601f19169290920160200192915050565b602081526000612a35602083018461391d565b60008060006060848603121561397157600080fd5b83359250602084013561398381613847565b915060408401356138ad81613847565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156139cb576139cb613993565b60405290565b604051608081016001600160401b03811182821017156139cb576139cb613993565b60405161016081016001600160401b03811182821017156139cb576139cb613993565b604051601f8201601f191681016001600160401b0381118282101715613a3e57613a3e613993565b604052919050565b60006001600160401b03821115613a5f57613a5f613993565b5060051b60200190565b60ff8116811461385c57600080fd5b60006001600160401b03821115613a9157613a91613993565b50601f01601f191660200190565b600082601f830112613ab057600080fd5b8135613ac3613abe82613a78565b613a16565b818152846020838601011115613ad857600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112613b0657600080fd5b81356020613b16613abe83613a46565b82815260059290921b84018101918181019086841115613b3557600080fd5b8286015b84811015613b745780356001600160401b03811115613b585760008081fd5b613b668986838b0101613a9f565b845250918301918301613b39565b509695505050505050565b60008060408385031215613b9257600080fd5b82356001600160401b0380821115613ba957600080fd5b818501915085601f830112613bbd57600080fd5b81356020613bcd613abe83613a46565b82815260059290921b84018101918181019089841115613bec57600080fd5b948201945b83861015613c13578535613c0481613a69565b82529482019490820190613bf1565b96505086013592505080821115613c2957600080fd5b50613c3685828601613af5565b9150509250929050565b6000806040808486031215613c5457600080fd5b833592506020808501356001600160401b03811115613c7257600080fd5b8501601f81018713613c8357600080fd5b8035613c91613abe82613a46565b8181526060918202830184019184820191908a841115613cb057600080fd5b938501935b83851015613d135780858c031215613ccd5760008081fd5b613cd56139a9565b8535613ce081613847565b815285870135613cef81613847565b8188015285880135613d008161385f565b8189015283529384019391850191613cb5565b508096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015613d5c57835183529284019291840191600101613d40565b50909695505050505050565b600080600080600060a08688031215613d8057600080fd5b8535613d8b81613847565b94506020860135613d9b81613847565b93506040860135613dab8161385f565b94979396509394606081013594506080013592915050565b61ffff8116811461385c57600080fd5b60008060008060008060c08789031215613dec57600080fd5b8635613df781613dc3565b955060208701356001600160401b0380821115613e1357600080fd5b613e1f8a838b01613a9f565b96506040890135955060608901359150613e3882613847565b9093506080880135925060a08801359080821115613e5557600080fd5b50613e6289828a01613a9f565b9150509295509295509295565b600060208284031215613e8157600080fd5b8135612a3581613847565b6001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b600060208284031215613ed157600080fd5b8151612a358161385f565b600060208284031215613eee57600080fd5b5051919050565b600080600060608486031215613f0a57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60008060408385031215613f4c57600080fd5b8251613f5781613847565b6020939093015192949293505050565b805161295581613847565b600082601f830112613f8357600080fd5b81516020613f93613abe83613a46565b82815260059290921b84018101918181019086841115613fb257600080fd5b8286015b84811015613b74578051613fc981613847565b8352918301918301613fb6565b600082601f830112613fe757600080fd5b81516020613ff7613abe83613a46565b82815260059290921b8401810191818101908684111561401657600080fd5b8286015b84811015613b74578051835291830191830161401a565b6000806040838503121561404457600080fd5b82516001600160401b038082111561405b57600080fd5b61406786838701613f72565b9350602085015191508082111561407d57600080fd5b50613c3685828601613fd6565b634e487b7160e01b600052601160045260246000fd5b6000600182016140b2576140b261408a565b5060010190565b600082601f8301126140ca57600080fd5b815160206140da613abe83613a46565b82815260059290921b840181019181810190868411156140f957600080fd5b8286015b84811015613b7457805162ffffff811681146141195760008081fd5b83529183019183016140fd565b6000806000806080858703121561413c57600080fd5b84516001600160401b038082111561415357600080fd5b61415f88838901613fd6565b9550602087015191508082111561417557600080fd5b61418188838901613f72565b9450604087015191508082111561419757600080fd5b6141a388838901613f72565b935060608701519150808211156141b957600080fd5b506141c6878288016140b9565b91505092959194509250565b600080600080600080600060e0888a0312156141ed57600080fd5b87516001600160401b038082111561420457600080fd5b6142108b838c01613fd6565b985060208a015191508082111561422657600080fd5b6142328b838c01613fd6565b975060408a015191508082111561424857600080fd5b6142548b838c01613f72565b965060608a015191508082111561426a57600080fd5b6142768b838c01613f72565b955060808a015191508082111561428c57600080fd5b6142988b838c01613f72565b945060a08a01519150808211156142ae57600080fd5b6142ba8b838c016140b9565b935060c08a01519150808211156142d057600080fd5b506142dd8a828b016140b9565b91505092959891949750929550565b600082601f8301126142fd57600080fd5b8151602061430d613abe83613a46565b82815260059290921b8401810191818101908684111561432c57600080fd5b8286015b84811015613b745780516001600160401b0381111561434f5760008081fd5b61435d8986838b0101613f72565b845250918301918301614330565b6000806000806080858703121561438157600080fd5b84516001600160401b038082111561439857600080fd5b6143a488838901613fd6565b95506020915081870151818111156143bb57600080fd5b6143c789828a01613fd6565b9550506040870151818111156143dc57600080fd5b6143e889828a016142ec565b9450506060870151818111156143fd57600080fd5b87019050601f8101881361441057600080fd5b805161441e613abe82613a46565b81815260059190911b8201830190838101908a83111561443d57600080fd5b928401925b828410156144645783516144558161385f565b82529284019290840190614442565b979a9699509497505050505050565b6000806000806080858703121561448957600080fd5b84516001600160401b03808211156144a057600080fd5b6144ac88838901613fd6565b955060208701519150808211156144c257600080fd5b6144ce88838901613fd6565b945060408701519150808211156144e457600080fd5b6144f0888389016142ec565b9350606087015191508082111561450657600080fd5b506141c687828801613fd6565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156145635784516001600160a01b03168352938301939183019160010161453e565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020828403121561459657600080fd5b81516001600160401b038111156145ac57600080fd5b612a1c84828501613fd6565b6000602082840312156145ca57600080fd5b81516001600160401b038111156145e057600080fd5b83601f82850101126145f157600080fd5b80830151614601613abe82613a46565b8082825260208201915060208360051b858801010192508683111561462557600080fd5b6020848701015b83811015613b745780516001600160401b0381111561464a57600080fd5b878601016080818a03601f1901121561466257600080fd5b61466a6139d1565b602082015181526040820151602082015260608201516001600160401b0381111561469457600080fd5b8a603f82850101126146a557600080fd5b602081840101516146b8613abe82613a46565b80828252602082019150604060608402858801010192508d8311156146dc57600080fd5b928501604001925b8284101561474b576060848f0312156146fc57600080fd5b6147046139a9565b845161470f81613847565b8152602085015161471f81613847565b602082015260408501516147328161385f565b60408201528252606093909301926020909101906146e4565b604085015250505060809190910151606082015283526020928301920161462c565b60006020828403121561477f57600080fd5b81516001600160401b038082111561479657600080fd5b90830190606082860312156147aa57600080fd5b6147b26139a9565b8251828111156147c157600080fd5b6147cd87828601613f72565b82525060208301516147de81613847565b60208201526040830151828111156147f557600080fd5b61480187828601613fd6565b60408301525095945050505050565b6000828210156148225761482261408a565b500390565b805161295581613dc3565b600082601f83011261484357600080fd5b81516020614853613abe83613a46565b82815260059290921b8401810191818101908684111561487257600080fd5b8286015b84811015613b7457805161488981613a69565b8352918301918301614876565b600082601f8301126148a757600080fd5b815160206148b7613abe83613a46565b82815260059290921b840181019181810190868411156148d657600080fd5b8286015b84811015613b745780516001600160401b038111156148f95760008081fd5b8701603f8101891361490b5760008081fd5b84810151604061491d613abe83613a78565b8281528b828486010111156149325760008081fd5b614941838983018487016138f1565b86525050509183019183016148da565b60008060008385036101a081121561496857600080fd5b6101608082121561497857600080fd5b6149806139f3565b915061498b86614827565b825261499960208701613f67565b602083015260408601516040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c08301526149dc60e08701613f67565b60e08301526101006149ef818801613f67565b90830152610120868101519083015261014080870151908301528501519093506001600160401b0380821115614a2457600080fd5b614a3087838801614832565b9350610180860151915080821115614a4757600080fd5b50614a5486828701614896565b9150509250925092565b60008219821115614a7157614a7161408a565b500190565b600060208284031215614a8857600080fd5b8151612a3581613847565b6000816000190483118215151615614aad57614aad61408a565b500290565b600082614acf57634e487b7160e01b600052601260045260246000fd5b500490565b600080600060608486031215614ae957600080fd5b8351614af481613847565b60208501519093506001600160401b0380821115614b1157600080fd5b614b1d87838801614832565b93506040860151915080821115614a4757600080fd5b600081518084526020808501945080840160005b83811015614b6657815160ff1687529582019590820190600101614b47565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015614bb9578284038952614ba784835161391d565b98850198935090840190600101614b8f565b5091979650505050505050565b604081526000614bd96040830185614b33565b8281036020840152614beb8185614b71565b95945050505050565b602081526000825160a06020840152614c1060c084018261391d565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6001600160a01b0384168152606060208201819052600090614c7090830185614b33565b8281036040840152614c828185614b71565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152614cf161018084018261391d565b905082810360e0840152614d05818661391d565b9050828103610100840152614d1a818561391d565b9c9b505050505050505050505050565b60008251614d3c8184602087016138f1565b9190910192915050565b84815283602082015260018060a01b0383166040820152608060608201526000614c82608083018461391d565b80516001600160701b038116811461295557600080fd5b600080600060608486031215614d9f57600080fd5b614da884614d73565b9250614db660208501614d73565b9150604084015163ffffffff811681146138ad57600080fdfea26469706673582212208b7b21673f5863e9d8719d0c17b1a1409e8a2a224dabde6d1d9801127ca20b6c64736f6c634300080f0033608060405260405162000f3638038062000f368339810160408190526200002691620001fc565b838360036200003683826200031d565b5060046200004582826200031d565b5050506200005a82826200006460201b60201c565b5050505062000410565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f25760008385830101525b9695505050505050565b600080600080608085870312156200021357600080fd5b84516001600160401b03808211156200022b57600080fd5b620002398883890162000145565b955060208701519150808211156200025057600080fd5b506200025f8782880162000145565b604087015190945090506001600160a01b03811681146200027f57600080fd5b6060959095015193969295505050565b600181811c90821680620002a457607f821691505b602082108103620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002f45750805b601f850160051c820191505b81811015620003155782815560010162000300565b505050505050565b81516001600160401b038111156200033957620003396200012f565b62000351816200034a84546200028f565b84620002cb565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000315565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200040b57634e487b7160e01b600052601160045260246000fd5b500190565b610b1680620004206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610954565b60405180910390f35b61012b6101263660046109c5565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ef565b6102e4565b005b61012b6101703660046109ef565b6102f4565b6040516012815260200161010f565b61012b6101923660046109c5565b610318565b6101606101a53660046109c5565b61033a565b6101606101b83660046109ef565b610348565b61013f6101cb366004610a2b565b6001600160a01b031660009081526020819052604090205490565b610102610353565b6101606101fc3660046109c5565b610362565b61012b61020f3660046109c5565b61036c565b61012b6102223660046109c5565b6103ec565b61013f610235366004610a4d565b6103fa565b60606003805461024990610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a80565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610425565b5060019392505050565b6102ef838383610549565b505050565b6000336103028582856106ef565b61030d858585610549565b506001949350505050565b6000336102da81858561032b83836103fa565b6103359190610aba565b610425565b6103448282610763565b5050565b6102ef838383610425565b60606004805461024990610a80565b6103448282610822565b6000338161037a82866103fa565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610425565b6000336102da818585610549565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166104e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b038316600090815260208190526040902054818110156106875760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fb84846103fa565b905060001981146106e957818110156107565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6106e98484848403610425565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b80600260008282546107cb9190610aba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d6565b6001600160a01b038216600090815260208190526040902054818110156108f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098157858101830151858201604001528201610965565b81811115610993576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610adb57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d7df43b5c05d97c3761e7c7fd436ed98c90dacd92848206cb28e5835b52607464736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220e6d0627aa90fcf197347580e294b9ab1ed8140f7da388edfa5e91be3734733df64736f6c634300080f0033",
    "sourceMap": "327:4330:43:-:0;;;1572:26:6;;;170:28:7;-1:-1:-1;;170:28:7;;;;;;457:30:43;;;-1:-1:-1;;;;;;457:30:43;481:5;457:30;;;327:4330;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638d05dda811620000625780638d05dda814620000f9578063ba414fa61462000110578063f8ccbf47146200012b578063fa7626d4146200013f57600080fd5b80630a9254e414620000985780633a76846314620000a457806364cc11fb14620000d85780638855ba8114620000ef575b600080fd5b620000a26200014d565b005b620000bb60008051602062007c1883398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a2620000e9366004620018ae565b620003d3565b620000a262000e81565b620000a26200010a366004620018ae565b62000f03565b6200011a62001529565b6040519015158152602001620000cf565b6000546200011a9062010000900460ff1681565b6000546200011a9060ff1681565b6000806000806000806000604051620001669062001892565b6001600160a01b03978816815295871660208701529386166040860152606085019290925284166080840152831660a083015290911660c082015260e001604051809103906000f080158015620001c1573d6000803e3d6000fd5b50600860006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030600019604051620001fa90620018a0565b608080825260079082015266546f6b656e203160c81b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000266573d6000803e3d6000fd5b50600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550306000196040516200029f90620018a0565b6080808252600790820152662a37b5b2b7101960c91b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f0801580156200030b573d6000803e3d6000fd5b50600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550306000196040516200034490620018a0565b608080825260079082015266546f6b656e203360c81b60a082015260c06020820181905260039082015262544b3360e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620003b0573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604051632631f2b160e11b815260018311600482015260008051602062007c1883398151915290634c63e56290602401600060405180830381600087803b1580156200041e57600080fd5b505af115801562000433573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b038510600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200048857600080fd5b505af11580156200049d573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b0384161515600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b158015620004f457600080fd5b505af115801562000509573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b0385161415600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200056157600080fd5b505af115801562000576573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620005b090849060001990600401620018ec565b6020604051808303816000875af1158015620005d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f6919062001905565b50600a5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906200062d90849060001990600401620018ec565b6020604051808303816000875af11580156200064d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000673919062001905565b50600b5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90620006aa90849060001990600401620018ec565b6020604051808303816000875af1158015620006ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f0919062001905565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007c18833981519152906306447d5690602401600060405180830381600087803b1580156200074257600080fd5b505af115801562000757573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000796929091169060001990600401620018ec565b6020604051808303816000875af1158015620007b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007dc919062001905565b50600a5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620008179291169060001990600401620018ec565b6020604051808303816000875af115801562000837573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085d919062001905565b50600b5460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620008989291169060001990600401620018ec565b6020604051808303816000875af1158015620008b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008de919062001905565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b606081526020019060019003908162000919575050604080516003808252608082019092529192506000919060208201606080368337505060408051600380825260808201909252929350600092915060208201606080368337505060095484519293506001600160a01b0316918491506000906200099c576200099c62001930565b6001600160a01b039283166020918202929092010152600a54835191169083906001908110620009d057620009d062001930565b6001600160a01b039283166020918202929092010152600b5483519116908390600290811062000a045762000a0462001930565b60200260200101906001600160a01b031690816001600160a01b031681525050858160008151811062000a3b5762000a3b62001930565b602002602001018181525050858160018151811062000a5e5762000a5e62001930565b602002602001018181525050858160028151811062000a815762000a8162001930565b60200260200101818152505060028460008151811062000aa55762000aa562001930565b602002602001019060ff16908160ff1681525050600b8460018151811062000ad15762000ad162001930565b60ff90921660209283029190910182015260405162000af591849184910162001983565b6040516020818303038152906040528360008151811062000b1a5762000b1a62001930565b602002602001018190525060006040518060600160405280848152602001876001600160a01b031681526020018381525090508060405160200162000b609190620019e7565b6040516020818303038152906040528460018151811062000b855762000b8562001930565b6020908102919091010152600061271062000ba38961270b62001a8b565b62000baf919062001aad565b62000bbb908962001ad0565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc89062000bf0908990899060040162001b1d565b600060405180830381600087803b15801562000c0b57600080fd5b505af115801562000c20573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b8116600483015262000caf945090911691506370a08231906024015b602060405180830381865afa15801562000c75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c9b919062001bd6565b62000ca98360001962001ad0565b6200165a565b600a546040516370a0823160e01b81526001600160a01b03898116600483015262000ce59216906370a082319060240162000c57565b600b546040516370a0823160e01b81526001600160a01b03898116600483015262000d1b9216906370a082319060240162000c57565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000d9e9291909116906370a08231906024015b602060405180830381865afa15801562000d70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d96919062001bd6565b60006200165a565b600a546008546040516370a0823160e01b81526001600160a01b03918216600482015262000dda9291909116906370a082319060240162000d52565b600b546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e169291909116906370a082319060240162000d52565b604080516390c5013b60e01b8152905160008051602062007c18833981519152916390c5013b91600480830192600092919082900301818387803b15801562000e5e57600080fd5b505af115801562000e73573d6000803e3d6000fd5b505050505050505050505050565b600954600c5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262000eba92911690600090600401620018ec565b6020604051808303816000875af115801562000eda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f00919062001905565b50565b604051632631f2b160e11b815260018311600482015260008051602062007c1883398151915290634c63e56290602401600060405180830381600087803b15801562000f4e57600080fd5b505af115801562000f63573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160d81b038510600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b15801562000fb857600080fd5b505af115801562000fcd573d6000803e3d6000fd5b5050604051632631f2b160e11b81526001600160a01b0384161515600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200102457600080fd5b505af115801562001039573d6000803e3d6000fd5b5050604051632631f2b160e11b8152306001600160a01b0385161415600482015260008051602062007c188339815191529250634c63e5629150602401600060405180830381600087803b1580156200109157600080fd5b505af1158015620010a6573d6000803e3d6000fd5b505060095460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb9150620010e090849060001990600401620018ec565b6020604051808303816000875af115801562001100573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001126919062001905565b506040516303223eab60e11b81526001600160a01b038216600482015260008051602062007c18833981519152906306447d5690602401600060405180830381600087803b1580156200117857600080fd5b505af11580156200118d573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620011cc929091169060001990600401620018ec565b6020604051808303816000875af1158015620011ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001212919062001905565b506040805160028082526060820183526000926020830190803683375050604080516002808252606082019092529293506000929150602082015b60608152602001906001900390816200124d57505060408051600180825281830190925291925060009190602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337505060095484519293506001600160a01b031691849150600090620012ce57620012ce62001930565b60200260200101906001600160a01b031690816001600160a01b031681525050858160008151811062001305576200130562001930565b60200260200101818152505060018460008151811062001329576200132962001930565b602002602001019060ff16908160ff1681525050600b8460018151811062001355576200135562001930565b60ff90921660209283029190910182015260095460405162001386926001600160a01b0390921691899101620018ec565b60405160208183030381529060405283600081518110620013ab57620013ab62001930565b602002602001018190525060006040518060600160405280848152602001876001600160a01b0316815260200183815250905080604051602001620013f19190620019e7565b6040516020818303038152906040528460018151811062001416576200141662001930565b60209081029190910101526000612710620014348961270b62001a8b565b62001440919062001aad565b6200144c908962001ad0565b600854604051630ce6eb9960e31b81529192506001600160a01b0316906367375cc89062001481908990899060040162001b1d565b600060405180830381600087803b1580156200149c57600080fd5b505af1158015620014b1573d6000803e3d6000fd5b50506009546040516370a0823160e01b81526001600160a01b038b81166004830152620014ed945090911691506370a082319060240162000c57565b6009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000e169291909116906370a082319060240162000d52565b60008054610100900460ff16156200154a5750600054610100900460ff1690565b600060008051602062007c188339815191523b15620016555760405160009060008051602062007c18833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620015b79083906519985a5b195960d21b90602001620018ec565b60408051601f1981840301815290829052620015d7929160200162001bf0565b60408051601f1981840301815290829052620015f39162001c23565b6000604051808303816000865af19150503d806000811462001632576040519150601f19603f3d011682016040523d82523d6000602084013e62001637565b606091505b509150508080602001905181019062001651919062001905565b9150505b919050565b80821462001785577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016cd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200178562001789565b5050565b60008051602062007c188339815191523b1562001881576040805160008051602062007c18833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200181c929160200162001bf0565b60408051601f1981840301815290829052620018389162001c23565b6000604051808303816000865af19150503d806000811462001877576040519150601f19603f3d011682016040523d82523d6000602084013e6200187c565b606091505b505050505b6000805461ff001916610100179055565b6150a08062001c4283390190565b610f368062006ce283390190565b60008060408385031215620018c257600080fd5b8235915060208301356001600160a01b0381168114620018e157600080fd5b809150509250929050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200191857600080fd5b815180151581146200192957600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101562001978578151875295820195908201906001016200195a565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b82811015620019c75781516001600160a01b031684529284019290840190600101620019a0565b50505083810382850152620019dd818662001946565b9695505050505050565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101562001a375783516001600160a01b0316825292840192600192909201919084019062001a0c565b50928601516001600160a01b0316604086810191909152860151858403601f190160608701529262001a6a818562001946565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562001aa85762001aa862001a75565b500290565b60008262001acb57634e487b7160e01b600052601260045260246000fd5b500490565b60008282101562001ae55762001ae562001a75565b500390565b60005b8381101562001b0757818101518382015260200162001aed565b8381111562001b17576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b8281101562001b5b57815160ff168452928401929084019060010162001b3a565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101562001bc757601f19808785030186528251805180865262001ba8818b88018c850162001aea565b96890196601f0190911693909301870192509086019060010162001b7d565b50909998505050505050505050565b60006020828403121562001be957600080fd5b5051919050565b6001600160e01b031983168152815160009062001c1581600485016020870162001aea565b919091016004019392505050565b6000825162001c3781846020870162001aea565b919091019291505056fe6101606040523480156200001257600080fd5b50604051620050a0380380620050a0833981016040819052620000359162000117565b6001600160a01b03868116608052600080546001600160a01b031916878316179055600185905581811660a0523360c052831660e081905260408051631355724960e31b81529051859285929091639aab9248916004808201926020929091908290030181865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d59190620001b6565b610120526001600160a01b0390811661010052979097166101405250620001d095505050505050565b6001600160a01b03811681146200011457600080fd5b50565b600080600080600080600060e0888a0312156200013357600080fd5b87516200014081620000fe565b60208901519097506200015381620000fe565b60408901519096506200016681620000fe565b606089015160808a015191965094506200018081620000fe565b60a08901519093506200019381620000fe565b60c0890151909250620001a681620000fe565b8091505092959891949750929550565b600060208284031215620001c957600080fd5b5051919050565b60805160a05160c05160e051610100516101205161014051614e056200029b600039600081816101570152610bca0152600061058b015260006104ec01526000818161046001528181610550015281816106fb0152818161080f01528181611823015281816119c70152611d7f01526000818161040c015281816115d4015261274a01526000818161035c01528181611ba6015281816126eb01526127710152600081816103d801528181611e8101528181611fa60152818161203f015261210a0152614e056000f3fe6080604052600436106101395760003560e01c80639aab9248116100ab578063c415b95c1161006f578063c415b95c146103fa578063c45a01551461042e578063c7f5fd101461044e578063d5ef98ea14610482578063e5e31b13146104aa578063fdc09e07146104da57600080fd5b80639aab924814610326578063a9e56f3c1461034a578063ab8236f31461037e578063c21ebd071461039e578063c31c9c07146103c657600080fd5b80635e1e6325116100fd5780635e1e63251461023f5780635e60dab51461027457806367375cc8146102a95780638ed8ea7e1461022a5780639881fcb4146102be57806398a0fb3c146102eb57600080fd5b80633fc8cef3146101455780634c1ee03e14610196578063544caa56146101b657806354fd4d50146101f657806359f571e81461022a57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101796101b136600461386d565b61050e565b3480156101c257600080fd5b506101d66101d13660046138b8565b6105de565b604080516001600160a01b0393841681529290911660208301520161018d565b34801561020257600080fd5b506040805180820182526005815264302e302e3360d81b6020820152905161018d9190613949565b34801561023657600080fd5b50610179600081565b34801561024b57600080fd5b5061025f61025a36600461395c565b6106c3565b6040805192835290151560208301520161018d565b34801561028057600080fd5b5061029461028f36600461386d565b610917565b6040805192835260208301919091520161018d565b6102bc6102b7366004613b7f565b6109cf565b005b3480156102ca57600080fd5b506102de6102d9366004613c40565b6116d6565b60405161018d9190613d24565b3480156102f757600080fd5b5061030b610306366004613d68565b61198f565b6040805193845260208401929092529082015260600161018d565b34801561033257600080fd5b5061033c60015481565b60405190815260200161018d565b34801561035657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561038a57600080fd5b506102bc610399366004613dd3565b611b9b565b3480156103aa57600080fd5b506101797310ed43c718714eb63d5aa57b78b54704e256024e81565b3480156103d257600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561040657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561043a57600080fd5b50600054610179906001600160a01b031681565b34801561045a57600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561048e57600080fd5b50610179739c12939390052919af3155f41bf4160fd3666a6f81565b3480156104b657600080fd5b506104ca6104c5366004613e6f565b611d5d565b604051901515815260200161018d565b3480156104e657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b600080600061051d86866105de565b6040516001600160601b0319606084811b8216602084015283901b16603482015286151560f81b604882015291935091507f000000000000000000000000000000000000000000000000000000000000000090604901604051602081830303815290604052805190602001207f00000000000000000000000000000000000000000000000000000000000000006040516020016105bc93929190613e8c565b60408051601f1981840301815291905280516020909101209695505050505050565b600080826001600160a01b0316846001600160a01b0316036106475760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061066757828461066a565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b604482015260640161063e565b9250929050565b60008060006106d48585600161050e565b60405163e5e31b1360e01b81526001600160a01b03828116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190613ebf565b156107e1576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190613edc565b91505b6107ed8787600061050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529194507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c9190613ebf565b156108f5576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190613edc565b90505b80821161090457806000610908565b8160015b94509450505050935093915050565b600080600061092686866105de565b50905060008061093788888861050e565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109989190613ef5565b5091509150826001600160a01b0316886001600160a01b0316146109bd5780826109c0565b81815b90999098509650505050505050565b60005b82518110156116d15760008382815181106109ef576109ef613f23565b60200260200101519050600160ff168160ff1603610a7857600080848481518110610a1c57610a1c613f23565b6020026020010151806020019051810190610a379190613f39565b9150915060008111610a5c5760405163fe4155c760e01b815260040160405180910390fd5b610a716001600160a01b038316333084611df2565b50506116be565b60011960ff821601610b6a57600080848481518110610a9957610a99613f23565b6020026020010151806020019051810190610ab49190614031565b9150915060005b8251811015610b62576000828281518110610ad857610ad8613f23565b602002602001015111610afe5760405163fe4155c760e01b815260040160405180910390fd5b610b503330848481518110610b1557610b15613f23565b6020026020010151868581518110610b2f57610b2f613f23565b60200260200101516001600160a01b0316611df2909392919063ffffffff16565b80610b5a816140a0565b915050610abb565b5050506116be565b60021960ff821601610c42576000838381518110610b8a57610b8a613f23565b6020026020010151806020019051810190610ba59190613edc565b905060008111610bc85760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b5050505050506116be565b60031960ff821601610d2357600080600080868681518110610c6657610c66613f23565b6020026020010151806020019051810190610c819190614126565b935093509350935060005b8451811015610d1957610d06858281518110610caa57610caa613f23565b6020026020010151858381518110610cc457610cc4613f23565b6020026020010151858481518110610cde57610cde613f23565b6020026020010151858581518110610cf857610cf8613f23565b602002602001015130611e63565b5080610d11816140a0565b915050610c8c565b50505050506116be565b60041960ff821601610e5f576000806000806000806000898981518110610d4c57610d4c613f23565b6020026020010151806020019051810190610d6791906141d2565b965096509650965096509650965060005b8751811015610e5257610e3f888281518110610d9657610d96613f23565b6020026020010151888381518110610db057610db0613f23565b6020026020010151888481518110610dca57610dca613f23565b6020026020010151888581518110610de457610de4613f23565b6020026020010151888681518110610dfe57610dfe613f23565b6020026020010151888781518110610e1857610e18613f23565b6020026020010151888881518110610e3257610e32613f23565b6020026020010151612021565b5080610e4a816140a0565b915050610d78565b50505050505050506116be565b60051960ff821601610f3657600080600080868681518110610e8357610e83613f23565b6020026020010151806020019051810190610e9e919061436b565b935093509350935060005b8451811015610d1957610f23858281518110610ec757610ec7613f23565b6020026020010151858381518110610ee157610ee1613f23565b6020026020010151858481518110610efb57610efb613f23565b602002602001015130868681518110610f1657610f16613f23565b602002602001015161218f565b5080610f2e816140a0565b915050610ea9565b60061960ff8216016110e757600080600080868681518110610f5a57610f5a613f23565b6020026020010151806020019051810190610f759190614473565b935093509350935060005b8451811015610d1957610ff46000868381518110610fa057610fa0613f23565b6020026020010151858481518110610fba57610fba613f23565b6020026020010151600081518110610fd457610fd4613f23565b60200260200101516001600160a01b03166123559092919063ffffffff16565b60006001600160a01b03166338ed173986838151811061101657611016613f23565b602002602001015186848151811061103057611030613f23565b602002602001015186858151811061104a5761104a613f23565b60200260200101513087878151811061106557611065613f23565b60200260200101516040518663ffffffff1660e01b815260040161108d959493929190614513565b6000604051808303816000875af11580156110ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d49190810190614584565b50806110df816140a0565b915050610f80565b60071960ff82160161126a5760008060008086868151811061110b5761110b613f23565b60200260200101518060200190518101906111269190614473565b935093509350935060005b8451811015610d19576111647310ed43c718714eb63d5aa57b78b54704e256024e868381518110610fa057610fa0613f23565b7310ed43c718714eb63d5aa57b78b54704e256024e6001600160a01b03166338ed173986838151811061119957611199613f23565b60200260200101518684815181106111b3576111b3613f23565b60200260200101518685815181106111cd576111cd613f23565b6020026020010151308787815181106111e8576111e8613f23565b60200260200101516040518663ffffffff1660e01b8152600401611210959493929190614513565b6000604051808303816000875af115801561122f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112579190810190614584565b5080611262816140a0565b915050611131565b60081960ff8216016113c75760008060008086868151811061128e5761128e613f23565b60200260200101518060200190518101906112a99190614473565b935093509350935060005b8451811015610d19576112d46000868381518110610fa057610fa0613f23565b60006001600160a01b03166338ed17398683815181106112f6576112f6613f23565b602002602001015186848151811061131057611310613f23565b602002602001015186858151811061132a5761132a613f23565b60200260200101513087878151811061134557611345613f23565b60200260200101516040518663ffffffff1660e01b815260040161136d959493929190614513565b6000604051808303816000875af115801561138c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b49190810190614584565b50806113bf816140a0565b9150506112b4565b60091960ff8216016114cf5760008383815181106113e7576113e7613f23565b602002602001015180602001905181019061140291906145b8565b905060005b8151811015610a715761149a739c12939390052919af3155f41bf4160fd3666a6f83838151811061143a5761143a613f23565b60200260200101516000015184848151811061145857611458613f23565b60200260200101516040015160008151811061147657611476613f23565b6020026020010151600001516001600160a01b03166123559092919063ffffffff16565b6114bc8282815181106114af576114af613f23565b6020026020010151612407565b50806114c7816140a0565b915050611407565b600a1960ff82160161166b5760008383815181106114ef576114ef613f23565b602002602001015180602001905181019061150a919061476d565b905060005b815151811015610a715760008260000151828151811061153157611531613f23565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115aa9190613edc565b905060006115b7826125a5565b90506115c38183614810565b91506115f96001600160a01b0384167f0000000000000000000000000000000000000000000000000000000000000000836125ca565b6020850151611613906001600160a01b03851690846125ca565b604080516001600160a01b0385168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a15050508080611663906140a0565b91505061150f565b600b1960ff8216016116be57600080600085858151811061168e5761168e613f23565b60200260200101518060200190518101906116a99190614951565b9250925092506116ba8383836125fa565b5050505b50806116c9816140a0565b9150506109d2565b505050565b60606001825110156117215760405162461bcd60e51b81526020600482015260146024820152730a4deeae8cae47440929cac82989288bea082a8960631b604482015260640161063e565b815161172e906001614a5e565b6001600160401b0381111561174557611745613993565b60405190808252806020026020018201604052801561176e578160200160208202803683370190505b509050828160008151811061178557611785613f23565b60200260200101818152505060005b82518110156119885760006118018483815181106117b4576117b4613f23565b6020026020010151600001518584815181106117d2576117d2613f23565b6020026020010151602001518685815181106117f0576117f0613f23565b60200260200101516040015161050e565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa15801561186c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118909190613ebf565b1561197557806001600160a01b031663f140a35a8484815181106118b6576118b6613f23565b60200260200101518685815181106118d0576118d0613f23565b6020026020010151600001516040518363ffffffff1660e01b815260040161190b9291909182526001600160a01b0316602082015260400190565b602060405180830381865afa158015611928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194c9190613edc565b83611958846001614a5e565b8151811061196857611968613f23565b6020026020010181815250505b5080611980816140a0565b915050611794565b5092915050565b6040516306801cc360e41b81526001600160a01b038681166004830152858116602483015284151560448301526000918291829182917f00000000000000000000000000000000000000000000000000000000000000001690636801cc3090606401602060405180830381865afa158015611a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a329190614a76565b9050600080806001600160a01b03841615611abc57836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa99190613edc565b9050611ab68c8c8c610917565b90935091505b82158015611ac8575081155b15611af9578896508795506103e8611ae8611ae3888a614a93565b6128f0565b611af29190614810565b9450611b8c565b6000611b068a858561295a565b9050888111611b4e57899750955085611b4784611b23848b614a93565b611b2d9190614ab2565b84611b38858b614a93565b611b429190614ab2565b612a24565b9550611b8a565b6000611b5b8a858761295a565b9850899750889050611b8685611b718584614a93565b611b7b9190614ab2565b85611b38868c614a93565b9650505b505b50505050955095509592505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611be457604051638afe477f60e01b815260040160405180910390fd5b600080600083806020019051810190611bfd9190614ad4565b604051630ce6eb9960e31b8152929550909350915060009030906367375cc890611c2d9086908690600401614bc6565b600060405180830381600087803b158015611c4757600080fd5b505af1925050508015611c58575060015b611ca6573d808015611c86576040519150601f19603f3d011682016040523d82523d6000602084013e611c8b565b606091505b50611ca06001600160a01b03891686896125ca565b60019150505b60004715611d02576040516001600160a01b038616904790600081818185875af1925050503d8060008114611cf7576040519150601f19603f3d011682016040523d82523d6000602084013e611cfc565b606091505b50909150505b6040805188815283151560208201528215158183015290516001600160a01b038a16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a25050505050505050505050565b60405163e5e31b1360e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dec9190613ebf565b92915050565b6040516001600160a01b0380851660248301528316604482015260648101829052611e5d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a3c565b50505050565b6040516370a0823160e01b8152306004820152600090611efc9086907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a08231906024015b602060405180830381865afa158015611ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef79190613edc565b612b0e565b60408051610100810182526001600160a01b0387811682528681166020830190815262ffffff87811684860190815287841660608601908152426080870190815260a087018e8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af1158015611ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120169190613edc565b979650505050505050565b6040516370a0823160e01b81523060048201526000906120789087907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a0823190602401611eb6565b6040805160a0810182526001600160601b0319606089811b821660c08401526001600160e81b031960e888811b821660d48601528a831b841660d786015287901b1660eb84015287811b90911660ee830152825180830360e2018152610102830184528252306020830152428284015281018a905260808101899052905163c04b8d5960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c04b8d599061213f908490600401614bf4565b6020604051808303816000875af115801561215e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121829190613edc565b9998505050505050505050565b6000806121b360008054906101000a90046001600160a01b03168887600154612c0e565b905080600182516121c49190614810565b815181106121d4576121d4613f23565b602002602001015191508582101561222e5760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604482015260640161063e565b82156123405760008054865161234092612286926001600160a01b03169189919061225b5761225b613f23565b60200260200101518860018151811061227657612276613f23565b6020026020010151600154612d9a565b8660008151811061229957612299613f23565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156122e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230d9190613edc565b8760008151811061232057612320613f23565b60200260200101516001600160a01b03166125ca9092919063ffffffff16565b61234b818686612e20565b5095945050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156123a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ca9190613edc565b6123d49190614a5e565b6040516001600160a01b038516602482015260448101829052909150611e5d90859063095ea7b360e01b90606401611e26565b60608160600151428110156124505760405162461bcd60e51b815260206004820152600f60248201526e149bdd5d195c8e8811561412549151608a1b604482015260640161063e565b612462836000015184604001516116d6565b9150826020015182600184516124789190614810565b8151811061248857612488613f23565b602002602001015110156124e95760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b606482015260840161063e565b612590836040015160008151811061250357612503613f23565b60200260200101516000015130612570866040015160008151811061252a5761252a613f23565b602002602001015160000151876040015160008151811061254d5761254d613f23565b60200260200101516020015188604001516000815181106117f0576117f0613f23565b8560008151811061258357612583613f23565b6020026020010151612ff7565b61259f828460400151306130ef565b50919050565b60006127106125b68361270b614a93565b6125c09190614ab2565b611dec9083614810565b6040516001600160a01b0383166024820152604481018290526116d190849063a9059cbb60e01b90606401611e26565b6000341161261b5760405163c9935ff960e01b815260040160405180910390fd5b6000836101000151838360405160200161263793929190614c4c565b604051602081830303815290604052905083608001516000036126c75760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561269e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c29190613edc565b6126cd565b83608001515b608085018190526020850151612710916001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000090612355565b600061271f85608001516125a5565b905080856080018181516127339190614810565b905250602085015161276f906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000836125ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47876000015188604001518960600151308b608001518c60a0015160405180606001604052808f610120015181526020018f60c0015181526020018f60e00151604051602001612801919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528152508e60e0015160405160200161283b919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528c6040518b63ffffffff1660e01b815260040161286f99989796959493929190614c8c565b6000604051808303818588803b15801561288857600080fd5b505af115801561289c573d6000803e3d6000fd5b50505050602086810151604080516001600160a01b0390921682529181018490527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f92500160405180910390a15050505050565b6000600382111561294b575080600061290a600283614ab2565b612915906001614a5e565b90505b8181101561259f579050806002816129308186614ab2565b61293a9190614a5e565b6129449190614ab2565b9050612918565b8115612955575060015b919050565b60008084116129ab5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a20494e53554646494349454e545f414d4f554e540000000000604482015260640161063e565b6000831180156129bb5750600082115b612a075760405162461bcd60e51b815260206004820152601e60248201527f526f757465723a20494e53554646494349454e545f4c49515549444954590000604482015260640161063e565b82612a128386614a93565b612a1c9190614ab2565b949350505050565b6000818310612a335781612a35565b825b9392505050565b6000612a91826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661333e9092919063ffffffff16565b8051909150156116d15780806020019051810190612aaf9190613ebf565b6116d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063e565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691612b6a9190614d2a565b6000604051808303816000865af19150503d8060008114612ba7576040519150601f19603f3d011682016040523d82523d6000602084013e612bac565b606091505b5091509150818015612bd6575080511580612bd6575080806020019051810190612bd69190613ebf565b612c075760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161063e565b5050505050565b6060600283511015612c625760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015260640161063e565b82516001600160401b03811115612c7b57612c7b613993565b604051908082528060200260200182016040528015612ca4578160200160208202803683370190505b5090508381600081518110612cbb57612cbb613f23565b60200260200101818152505060005b60018451612cd89190614810565b811015612d9157600080612d2c88878581518110612cf857612cf8613f23565b602002602001015188866001612d0e9190614a5e565b81518110612d1e57612d1e613f23565b60200260200101518861334d565b91509150612d54848481518110612d4557612d45613f23565b60200260200101518383613419565b84612d60856001614a5e565b81518110612d7057612d70613f23565b60200260200101818152505050508080612d89906140a0565b915050612cca565b50949350505050565b6000806000612da9868661352d565b6040516001600160601b0319606084811b8216602084015283901b166034820152919350915087906048016040516020818303038152906040528051906020012085604051602001612dfd93929190613e8c565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b60018351612e319190614810565b811015611e5d57600080848381518110612e4d57612e4d613f23565b602002602001015185846001612e639190614a5e565b81518110612e7357612e73613f23565b6020026020010151915091506000612e8b838361352d565b509050600087612e9c866001614a5e565b81518110612eac57612eac613f23565b60200260200101519050600080836001600160a01b0316866001600160a01b031614612eda57826000612ede565b6000835b91509150600060028a51612ef29190614810565b8810612efe5788612f2b565b600054612f2b906001600160a01b0316878c612f1b8c6002614a5e565b8151811061227657612276613f23565b9050612f4e60008054906101000a90046001600160a01b03168888600154612d9a565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612f8b576020820181803683370190505b506040518563ffffffff1660e01b8152600401612fab9493929190614d46565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050505050508080612fef906140a0565b915050612e23565b6000846001600160a01b03163b1161300e57600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916130729190614d2a565b6000604051808303816000865af19150503d80600081146130af576040519150601f19603f3d011682016040523d82523d6000602084013e6130b4565b606091505b50915091508180156130de5750805115806130de5750808060200190518101906130de9190613ebf565b6130e757600080fd5b505050505050565b60005b8251811015611e5d57600061314184838151811061311257613112613f23565b60200260200101516000015185848151811061313057613130613f23565b6020026020010151602001516105de565b509050600085613152846001614a5e565b8151811061316257613162613f23565b60200260200101519050600080836001600160a01b031687868151811061318b5761318b613f23565b6020026020010151600001516001600160a01b0316146131ad578260006131b1565b6000835b915091506000600188516131c59190614810565b86106131d15786613244565b613244886131e0886001614a5e565b815181106131f0576131f0613f23565b6020026020010151600001518988600161320a9190614a5e565b8151811061321a5761321a613f23565b6020026020010151602001518a8960016132349190614a5e565b815181106117f0576117f0613f23565b905061329788878151811061325b5761325b613f23565b60200260200101516000015189888151811061327957613279613f23565b6020026020010151602001518a89815181106117f0576117f0613f23565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f1916602001820160405280156132d4576020820181803683370190505b506040518563ffffffff1660e01b81526004016132f49493929190614d46565b600060405180830381600087803b15801561330e57600080fd5b505af1158015613322573d6000803e3d6000fd5b5050505050505050508080613336906140a0565b9150506130f2565b6060612a1c848460008561361d565b600080600061335c868661352d565b50905060008061336e89898989612d9a565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156133ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cf9190614d8a565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614613406578082613409565b81815b909a909950975050505050505050565b600080841161347e5760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b606482015260840161063e565b60008311801561348e5750600082115b6134eb5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b606482015260840161063e565b60006134f9856103e56136ed565b9050600061350782856136ed565b905060006135218361351b886103e86136ed565b90613754565b90506120168183614ab2565b600080826001600160a01b0316846001600160a01b03160361359f5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161063e565b826001600160a01b0316846001600160a01b0316106135bf5782846135c2565b83835b90925090506001600160a01b0382166106bc5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161063e565b60608247101561367e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161063e565b600080866001600160a01b0316858760405161369a9190614d2a565b60006040518083038185875af1925050503d80600081146136d7576040519150601f19603f3d011682016040523d82523d6000602084013e6136dc565b606091505b5091509150612016878383876137a9565b6000811580613711575082826137038183614a93565b925061370f9083614ab2565b145b611dec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015260640161063e565b6000826137618382614a5e565b9150811015611dec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015260640161063e565b60608315613818578251600003613811576001600160a01b0385163b6138115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063e565b5081612a1c565b612a1c838381511561382d5781518083602001fd5b8060405162461bcd60e51b815260040161063e9190613949565b6001600160a01b038116811461385c57600080fd5b50565b801515811461385c57600080fd5b60008060006060848603121561388257600080fd5b833561388d81613847565b9250602084013561389d81613847565b915060408401356138ad8161385f565b809150509250925092565b600080604083850312156138cb57600080fd5b82356138d681613847565b915060208301356138e681613847565b809150509250929050565b60005b8381101561390c5781810151838201526020016138f4565b83811115611e5d5750506000910152565b600081518084526139358160208601602086016138f1565b601f01601f19169290920160200192915050565b602081526000612a35602083018461391d565b60008060006060848603121561397157600080fd5b83359250602084013561398381613847565b915060408401356138ad81613847565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156139cb576139cb613993565b60405290565b604051608081016001600160401b03811182821017156139cb576139cb613993565b60405161016081016001600160401b03811182821017156139cb576139cb613993565b604051601f8201601f191681016001600160401b0381118282101715613a3e57613a3e613993565b604052919050565b60006001600160401b03821115613a5f57613a5f613993565b5060051b60200190565b60ff8116811461385c57600080fd5b60006001600160401b03821115613a9157613a91613993565b50601f01601f191660200190565b600082601f830112613ab057600080fd5b8135613ac3613abe82613a78565b613a16565b818152846020838601011115613ad857600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112613b0657600080fd5b81356020613b16613abe83613a46565b82815260059290921b84018101918181019086841115613b3557600080fd5b8286015b84811015613b745780356001600160401b03811115613b585760008081fd5b613b668986838b0101613a9f565b845250918301918301613b39565b509695505050505050565b60008060408385031215613b9257600080fd5b82356001600160401b0380821115613ba957600080fd5b818501915085601f830112613bbd57600080fd5b81356020613bcd613abe83613a46565b82815260059290921b84018101918181019089841115613bec57600080fd5b948201945b83861015613c13578535613c0481613a69565b82529482019490820190613bf1565b96505086013592505080821115613c2957600080fd5b50613c3685828601613af5565b9150509250929050565b6000806040808486031215613c5457600080fd5b833592506020808501356001600160401b03811115613c7257600080fd5b8501601f81018713613c8357600080fd5b8035613c91613abe82613a46565b8181526060918202830184019184820191908a841115613cb057600080fd5b938501935b83851015613d135780858c031215613ccd5760008081fd5b613cd56139a9565b8535613ce081613847565b815285870135613cef81613847565b8188015285880135613d008161385f565b8189015283529384019391850191613cb5565b508096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015613d5c57835183529284019291840191600101613d40565b50909695505050505050565b600080600080600060a08688031215613d8057600080fd5b8535613d8b81613847565b94506020860135613d9b81613847565b93506040860135613dab8161385f565b94979396509394606081013594506080013592915050565b61ffff8116811461385c57600080fd5b60008060008060008060c08789031215613dec57600080fd5b8635613df781613dc3565b955060208701356001600160401b0380821115613e1357600080fd5b613e1f8a838b01613a9f565b96506040890135955060608901359150613e3882613847565b9093506080880135925060a08801359080821115613e5557600080fd5b50613e6289828a01613a9f565b9150509295509295509295565b600060208284031215613e8157600080fd5b8135612a3581613847565b6001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b600060208284031215613ed157600080fd5b8151612a358161385f565b600060208284031215613eee57600080fd5b5051919050565b600080600060608486031215613f0a57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60008060408385031215613f4c57600080fd5b8251613f5781613847565b6020939093015192949293505050565b805161295581613847565b600082601f830112613f8357600080fd5b81516020613f93613abe83613a46565b82815260059290921b84018101918181019086841115613fb257600080fd5b8286015b84811015613b74578051613fc981613847565b8352918301918301613fb6565b600082601f830112613fe757600080fd5b81516020613ff7613abe83613a46565b82815260059290921b8401810191818101908684111561401657600080fd5b8286015b84811015613b74578051835291830191830161401a565b6000806040838503121561404457600080fd5b82516001600160401b038082111561405b57600080fd5b61406786838701613f72565b9350602085015191508082111561407d57600080fd5b50613c3685828601613fd6565b634e487b7160e01b600052601160045260246000fd5b6000600182016140b2576140b261408a565b5060010190565b600082601f8301126140ca57600080fd5b815160206140da613abe83613a46565b82815260059290921b840181019181810190868411156140f957600080fd5b8286015b84811015613b7457805162ffffff811681146141195760008081fd5b83529183019183016140fd565b6000806000806080858703121561413c57600080fd5b84516001600160401b038082111561415357600080fd5b61415f88838901613fd6565b9550602087015191508082111561417557600080fd5b61418188838901613f72565b9450604087015191508082111561419757600080fd5b6141a388838901613f72565b935060608701519150808211156141b957600080fd5b506141c6878288016140b9565b91505092959194509250565b600080600080600080600060e0888a0312156141ed57600080fd5b87516001600160401b038082111561420457600080fd5b6142108b838c01613fd6565b985060208a015191508082111561422657600080fd5b6142328b838c01613fd6565b975060408a015191508082111561424857600080fd5b6142548b838c01613f72565b965060608a015191508082111561426a57600080fd5b6142768b838c01613f72565b955060808a015191508082111561428c57600080fd5b6142988b838c01613f72565b945060a08a01519150808211156142ae57600080fd5b6142ba8b838c016140b9565b935060c08a01519150808211156142d057600080fd5b506142dd8a828b016140b9565b91505092959891949750929550565b600082601f8301126142fd57600080fd5b8151602061430d613abe83613a46565b82815260059290921b8401810191818101908684111561432c57600080fd5b8286015b84811015613b745780516001600160401b0381111561434f5760008081fd5b61435d8986838b0101613f72565b845250918301918301614330565b6000806000806080858703121561438157600080fd5b84516001600160401b038082111561439857600080fd5b6143a488838901613fd6565b95506020915081870151818111156143bb57600080fd5b6143c789828a01613fd6565b9550506040870151818111156143dc57600080fd5b6143e889828a016142ec565b9450506060870151818111156143fd57600080fd5b87019050601f8101881361441057600080fd5b805161441e613abe82613a46565b81815260059190911b8201830190838101908a83111561443d57600080fd5b928401925b828410156144645783516144558161385f565b82529284019290840190614442565b979a9699509497505050505050565b6000806000806080858703121561448957600080fd5b84516001600160401b03808211156144a057600080fd5b6144ac88838901613fd6565b955060208701519150808211156144c257600080fd5b6144ce88838901613fd6565b945060408701519150808211156144e457600080fd5b6144f0888389016142ec565b9350606087015191508082111561450657600080fd5b506141c687828801613fd6565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156145635784516001600160a01b03168352938301939183019160010161453e565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020828403121561459657600080fd5b81516001600160401b038111156145ac57600080fd5b612a1c84828501613fd6565b6000602082840312156145ca57600080fd5b81516001600160401b038111156145e057600080fd5b83601f82850101126145f157600080fd5b80830151614601613abe82613a46565b8082825260208201915060208360051b858801010192508683111561462557600080fd5b6020848701015b83811015613b745780516001600160401b0381111561464a57600080fd5b878601016080818a03601f1901121561466257600080fd5b61466a6139d1565b602082015181526040820151602082015260608201516001600160401b0381111561469457600080fd5b8a603f82850101126146a557600080fd5b602081840101516146b8613abe82613a46565b80828252602082019150604060608402858801010192508d8311156146dc57600080fd5b928501604001925b8284101561474b576060848f0312156146fc57600080fd5b6147046139a9565b845161470f81613847565b8152602085015161471f81613847565b602082015260408501516147328161385f565b60408201528252606093909301926020909101906146e4565b604085015250505060809190910151606082015283526020928301920161462c565b60006020828403121561477f57600080fd5b81516001600160401b038082111561479657600080fd5b90830190606082860312156147aa57600080fd5b6147b26139a9565b8251828111156147c157600080fd5b6147cd87828601613f72565b82525060208301516147de81613847565b60208201526040830151828111156147f557600080fd5b61480187828601613fd6565b60408301525095945050505050565b6000828210156148225761482261408a565b500390565b805161295581613dc3565b600082601f83011261484357600080fd5b81516020614853613abe83613a46565b82815260059290921b8401810191818101908684111561487257600080fd5b8286015b84811015613b7457805161488981613a69565b8352918301918301614876565b600082601f8301126148a757600080fd5b815160206148b7613abe83613a46565b82815260059290921b840181019181810190868411156148d657600080fd5b8286015b84811015613b745780516001600160401b038111156148f95760008081fd5b8701603f8101891361490b5760008081fd5b84810151604061491d613abe83613a78565b8281528b828486010111156149325760008081fd5b614941838983018487016138f1565b86525050509183019183016148da565b60008060008385036101a081121561496857600080fd5b6101608082121561497857600080fd5b6149806139f3565b915061498b86614827565b825261499960208701613f67565b602083015260408601516040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c08301526149dc60e08701613f67565b60e08301526101006149ef818801613f67565b90830152610120868101519083015261014080870151908301528501519093506001600160401b0380821115614a2457600080fd5b614a3087838801614832565b9350610180860151915080821115614a4757600080fd5b50614a5486828701614896565b9150509250925092565b60008219821115614a7157614a7161408a565b500190565b600060208284031215614a8857600080fd5b8151612a3581613847565b6000816000190483118215151615614aad57614aad61408a565b500290565b600082614acf57634e487b7160e01b600052601260045260246000fd5b500490565b600080600060608486031215614ae957600080fd5b8351614af481613847565b60208501519093506001600160401b0380821115614b1157600080fd5b614b1d87838801614832565b93506040860151915080821115614a4757600080fd5b600081518084526020808501945080840160005b83811015614b6657815160ff1687529582019590820190600101614b47565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015614bb9578284038952614ba784835161391d565b98850198935090840190600101614b8f565b5091979650505050505050565b604081526000614bd96040830185614b33565b8281036020840152614beb8185614b71565b95945050505050565b602081526000825160a06020840152614c1060c084018261391d565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6001600160a01b0384168152606060208201819052600090614c7090830185614b33565b8281036040840152614c828185614b71565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152614cf161018084018261391d565b905082810360e0840152614d05818661391d565b9050828103610100840152614d1a818561391d565b9c9b505050505050505050505050565b60008251614d3c8184602087016138f1565b9190910192915050565b84815283602082015260018060a01b0383166040820152608060608201526000614c82608083018461391d565b80516001600160701b038116811461295557600080fd5b600080600060608486031215614d9f57600080fd5b614da884614d73565b9250614db660208501614d73565b9150604084015163ffffffff811681146138ad57600080fdfea26469706673582212208b7b21673f5863e9d8719d0c17b1a1409e8a2a224dabde6d1d9801127ca20b6c64736f6c634300080f0033608060405260405162000f3638038062000f368339810160408190526200002691620001fc565b838360036200003683826200031d565b5060046200004582826200031d565b5050506200005a82826200006460201b60201c565b5050505062000410565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f25760008385830101525b9695505050505050565b600080600080608085870312156200021357600080fd5b84516001600160401b03808211156200022b57600080fd5b620002398883890162000145565b955060208701519150808211156200025057600080fd5b506200025f8782880162000145565b604087015190945090506001600160a01b03811681146200027f57600080fd5b6060959095015193969295505050565b600181811c90821680620002a457607f821691505b602082108103620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002f45750805b601f850160051c820191505b81811015620003155782815560010162000300565b505050505050565b81516001600160401b038111156200033957620003396200012f565b62000351816200034a84546200028f565b84620002cb565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000315565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200040b57634e487b7160e01b600052601160045260246000fd5b500190565b610b1680620004206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610954565b60405180910390f35b61012b6101263660046109c5565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ef565b6102e4565b005b61012b6101703660046109ef565b6102f4565b6040516012815260200161010f565b61012b6101923660046109c5565b610318565b6101606101a53660046109c5565b61033a565b6101606101b83660046109ef565b610348565b61013f6101cb366004610a2b565b6001600160a01b031660009081526020819052604090205490565b610102610353565b6101606101fc3660046109c5565b610362565b61012b61020f3660046109c5565b61036c565b61012b6102223660046109c5565b6103ec565b61013f610235366004610a4d565b6103fa565b60606003805461024990610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a80565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610425565b5060019392505050565b6102ef838383610549565b505050565b6000336103028582856106ef565b61030d858585610549565b506001949350505050565b6000336102da81858561032b83836103fa565b6103359190610aba565b610425565b6103448282610763565b5050565b6102ef838383610425565b60606004805461024990610a80565b6103448282610822565b6000338161037a82866103fa565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610425565b6000336102da818585610549565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166104e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b038316600090815260208190526040902054818110156106875760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fb84846103fa565b905060001981146106e957818110156107565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6106e98484848403610425565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b80600260008282546107cb9190610aba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d6565b6001600160a01b038216600090815260208190526040902054818110156108f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098157858101830151858201604001528201610965565b81811115610993576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610adb57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d7df43b5c05d97c3761e7c7fd436ed98c90dacd92848206cb28e5835b52607464736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220e6d0627aa90fcf197347580e294b9ab1ed8140f7da388edfa5e91be3734733df64736f6c634300080f0033",
    "sourceMap": "327:4330:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;494:822;;;:::i;:::-;;321:38:7;;-1:-1:-1;;;;;;;;;;;321:38:7;;;;;-1:-1:-1;;;;;189:32:44;;;171:51;;159:2;144:18;321:38:7;;;;;;;;2595:1969:43;;;;;;:::i;:::-;;:::i;4570:85::-;;;:::i;1339:1231::-;;;;;;:::i;:::-;;:::i;1819:584:6:-;;;:::i;:::-;;;757:14:44;;750:22;732:41;;720:2;705:18;1819:584:6;592:187:44;170:28:7;;;;;;;;;;;;1572:26:6;;;;;;;;;494:822:43;577:1;613;630:42;686:66;766:42;830:1;870;536:347;;;;;:::i;:::-;-1:-1:-1;;;;;1209:15:44;;;1191:34;;1261:15;;;1256:2;1241:18;;1234:43;1313:15;;;1308:2;1293:18;;1286:43;1360:2;1345:18;;1338:34;;;;1409:15;;1403:3;1388:19;;1381:44;1462:15;;1171:3;1441:19;;1434:44;1515:15;;;1509:3;1494:19;;1487:44;1140:3;1125:19;536:347:43;;;;;;;;;;;;;;;;;;;;;;;528:5;;:355;;;;;-1:-1:-1;;;;;528:355:43;;;;;-1:-1:-1;;;;;528:355:43;;;;;;979:4;-1:-1:-1;;902:123:43;;;;;:::i;:::-;1901:3:44;1883:22;;;1942:1;1921:19;;;1914:30;-1:-1:-1;;;1975:3:44;1960:19;;1953:38;2029:3;2022:4;2007:20;;2000:33;;;2070:1;2049:19;;;2042:30;-1:-1:-1;;;2103:3:44;2088:19;;2081:34;-1:-1:-1;;;;;2187:32:44;;;2182:2;2167:18;;2160:60;-1:-1:-1;2236:18:44;;2229:34;2147:3;2132:19;902:123:43;;;;;;;;;;;;;;;;;;;;;;;893:6;;:132;;;;;-1:-1:-1;;;;;893:132:43;;;;;-1:-1:-1;;;;;893:132:43;;;;;;1121:4;-1:-1:-1;;1044:123:43;;;;;:::i;:::-;2633:3:44;2615:22;;;2674:1;2653:19;;;2646:30;-1:-1:-1;;;2707:3:44;2692:19;;2685:38;2761:3;2754:4;2739:20;;2732:33;;;2802:1;2781:19;;;2774:30;-1:-1:-1;;;2835:3:44;2820:19;;2813:34;-1:-1:-1;;;;;2919:32:44;;;2914:2;2899:18;;2892:60;-1:-1:-1;2968:18:44;;2961:34;2879:3;2864:19;1044:123:43;;;;;;;;;;;;;;;;;;;;;;;1035:6;;:132;;;;;-1:-1:-1;;;;;1035:132:43;;;;;-1:-1:-1;;;;;1035:132:43;;;;;;1263:4;-1:-1:-1;;1186:123:43;;;;;:::i;:::-;3365:3:44;3347:22;;;3406:1;3385:19;;;3378:30;-1:-1:-1;;;3439:3:44;3424:19;;3417:38;3493:3;3486:4;3471:20;;3464:33;;;3534:1;3513:19;;;3506:30;-1:-1:-1;;;3567:3:44;3552:19;;3545:34;-1:-1:-1;;;;;3651:32:44;;;3646:2;3631:18;;3624:60;-1:-1:-1;3700:18:44;;3693:34;3611:3;3596:19;1186:123:43;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1177:6:43;:132;;-1:-1:-1;;;;;;1177:132:43;-1:-1:-1;;;;;1177:132:43;;;;;;;;;;494:822::o;2595:1969::-;2665:16;;-1:-1:-1;;;2665:16:43;;2679:1;2675:5;;2665:16;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;2665:9:43;;705:18:44;;2665:16:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2691:32:43;;-1:-1:-1;;;2691:32:43;;-1:-1:-1;;;;;2701:21:43;;2691:32;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2691:9:43;;-1:-1:-1;705:18:44;;2691:32:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2733:30:43;;-1:-1:-1;;;2733:30:43;;-1:-1:-1;;;;;2743:19:43;;;;2733:30;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2733:9:43;;-1:-1:-1;705:18:44;;2733:30:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2773:33:43;;-1:-1:-1;;;2773:33:43;;2800:4;-1:-1:-1;;;;;2783:22:43;;;;2773:33;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;2773:9:43;;-1:-1:-1;705:18:44;;2773:33:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2823:6:43;;2816:49;;-1:-1:-1;;;2816:49:43;;-1:-1:-1;;;;;2823:6:43;;;;-1:-1:-1;2816:23:43;;-1:-1:-1;2816:49:43;;2840:5;;-1:-1:-1;;2847:17:43;2816:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2882:6:43;;2875:49;;-1:-1:-1;;;2875:49:43;;-1:-1:-1;;;;;2882:6:43;;;;2875:23;;:49;;2899:5;;-1:-1:-1;;2906:17:43;2875:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2941:6:43;;2934:49;;-1:-1:-1;;;2934:49:43;;-1:-1:-1;;;;;2941:6:43;;;;2934:23;;:49;;2958:5;;-1:-1:-1;;2965:17:43;2934:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2993:20:43;;-1:-1:-1;;;2993:20:43;;-1:-1:-1;;;;;189:32:44;;2993:20:43;;;171:51:44;-1:-1:-1;;;;;;;;;;;250:64:7;2993:13:43;;144:18:44;;2993:20:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3030:6:43;;3054:5;;3023:57;;-1:-1:-1;;;3023:57:43;;-1:-1:-1;;;;;3030:6:43;;;;-1:-1:-1;3023:22:43;;-1:-1:-1;3023:57:43;;3054:5;;;;-1:-1:-1;;3062:17:43;3023:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3097:6:43;;3121:5;;3090:57;;-1:-1:-1;;;3090:57:43;;-1:-1:-1;;;;;3097:6:43;;;;3090:22;;:57;;3121:5;;;-1:-1:-1;;3129:17:43;3090:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3164:6:43;;3188:5;;3157:57;;-1:-1:-1;;;3157:57:43;;-1:-1:-1;;;;;3164:6:43;;;;3157:22;;:57;;3188:5;;;-1:-1:-1;;3196:17:43;3157:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3247:14:43;;;3259:1;3247:14;;;;;;;;3224:20;;3247:14;;;;;;;;-1:-1:-1;;3293:14:43;;;3305:1;3293:14;;;;;;;;;3224:37;;-1:-1:-1;3271:19:43;;3293:14;-1:-1:-1;3293:14:43;;;;;;;;;;;;;;;;;-1:-1:-1;;3343:16:43;;;3357:1;3343:16;;;;;;;;;3271:36;;-1:-1:-1;3317:23:43;;3343:16;;;;;;;;;-1:-1:-1;;3396:16:43;;;3410:1;3396:16;;;;;;;;;3317:42;;-1:-1:-1;3369:24:43;;3396:16;-1:-1:-1;3396:16:43;;;;;;;;-1:-1:-1;;3442:6:43;;3422:9;;3369:43;;-1:-1:-1;;;;;;3442:6:43;;3422:9;;-1:-1:-1;3442:6:43;;3422:9;;;;:::i;:::-;-1:-1:-1;;;;;3422:27:43;;;:9;;;;;;;;;:27;3479:6;;3459:9;;3479:6;;;3459;;3479;;3459:9;;;;;;:::i;:::-;-1:-1:-1;;;;;3459:27:43;;;:9;;;;;;;;;:27;3516:6;;3496:9;;3516:6;;;3496;;3503:1;;3496:9;;;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;3496:27:43;;;-1:-1:-1;;;;;3496:27:43;;;;;3546:1;3533:7;3541:1;3533:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3570:1;3557:7;3565:1;3557:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3594:1;3581:7;3589:1;3581:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;3616:1;3605:5;3611:1;3605:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;3638:2;3627:5;3633:1;3627:8;;;;;;;;:::i;:::-;:13;;;;:8;;;;;;;;;;:13;3660:27;;;;3671:6;;3679:7;;3660:27;;:::i;:::-;;;;;;;;;;;;;3650:4;3655:1;3650:7;;;;;;;;:::i;:::-;;;;;;:37;;;;3697:47;3747:79;;;;;;;;3794:6;3747:79;;;;3810:5;-1:-1:-1;;;;;3747:79:43;;;;;3818:7;3747:79;;;3697:129;;3857:6;3846:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;3836:4;3841:1;3836:7;;;;;;;;:::i;:::-;;;;;;;;;;:28;3874:11;3906:3;3894:8;:1;3898:4;3894:8;:::i;:::-;3893:16;;;;:::i;:::-;3888:22;;:1;:22;:::i;:::-;3956:5;;:24;;-1:-1:-1;;;3956:24:43;;3874:36;;-1:-1:-1;;;;;;3956:5:43;;:11;;:24;;3968:5;;3975:4;;3956:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4020:6:43;;4013:40;;-1:-1:-1;;;4013:40:43;;-1:-1:-1;;;;;189:32:44;;;4013:40:43;;;171:51:44;3991:111:43;;-1:-1:-1;4020:6:43;;;;-1:-1:-1;4013:24:43;;144:18:44;;4013:40:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4068:23;4088:3;-1:-1:-1;;4068:23:43;:::i;:::-;3991:8;:111::i;:::-;4141:6;;4134:40;;-1:-1:-1;;;4134:40:43;;-1:-1:-1;;;;;189:32:44;;;4134:40:43;;;171:51:44;4112:111:43;;4141:6;;4134:24;;144:18:44;;4134:40:43;14:214:44;4112:111:43;4262:6;;4255:40;;-1:-1:-1;;;4255:40:43;;-1:-1:-1;;;;;189:32:44;;;4255:40:43;;;171:51:44;4233:111:43;;4262:6;;4255:24;;144:18:44;;4255:40:43;14:214:44;4233:111:43;4370:6;;4396:5;;4363:40;;-1:-1:-1;;;4363:40:43;;-1:-1:-1;;;;;4396:5:43;;;4363:40;;;171:51:44;4354:53:43;;4370:6;;;;;4363:24;;144:18:44;;4363:40:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4405:1;4354:8;:53::i;:::-;4433:6;;4459:5;;4426:40;;-1:-1:-1;;;4426:40:43;;-1:-1:-1;;;;;4459:5:43;;;4426:40;;;171:51:44;4417:53:43;;4433:6;;;;;4426:24;;144:18:44;;4426:40:43;14:214:44;4417:53:43;4496:6;;4522:5;;4489:40;;-1:-1:-1;;;4489:40:43;;-1:-1:-1;;;;;4522:5:43;;;4489:40;;;171:51:44;4480:53:43;;4496:6;;;;;4489:24;;144:18:44;;4489:40:43;14:214:44;4480:53:43;4543:14;;;-1:-1:-1;;;4543:14:43;;;;-1:-1:-1;;;;;;;;;;;250:64:7;4543:12:43;;:14;;;;;274:37:7;;4543:14:43;;;;;;;274:37:7;250:64;4543:14:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:1909;;;;;;2595:1969;;:::o;4570:85::-;4613:6;;4638:5;;4606:42;;-1:-1:-1;;;4606:42:43;;-1:-1:-1;;;;;4613:6:43;;;;4606:23;;:42;;4638:5;;;4613:6;;4606:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4570:85::o;1339:1231::-;1410:16;;-1:-1:-1;;;1410:16:43;;1424:1;1420:5;;1410:16;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;1410:9:43;;705:18:44;;1410:16:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1436:32:43;;-1:-1:-1;;;1436:32:43;;-1:-1:-1;;;;;1446:21:43;;1436:32;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1436:9:43;;-1:-1:-1;705:18:44;;1436:32:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1478:30:43;;-1:-1:-1;;;1478:30:43;;-1:-1:-1;;;;;1488:19:43;;;;1478:30;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1478:9:43;;-1:-1:-1;705:18:44;;1478:30:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1518:33:43;;-1:-1:-1;;;1518:33:43;;1545:4;-1:-1:-1;;;;;1528:22:43;;;;1518:33;;;732:41:44;-1:-1:-1;;;;;;;;;;;250:64:7;-1:-1:-1;1518:9:43;;-1:-1:-1;705:18:44;;1518:33:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1568:6:43;;1561:49;;-1:-1:-1;;;1561:49:43;;-1:-1:-1;;;;;1568:6:43;;;;-1:-1:-1;1561:23:43;;-1:-1:-1;1561:49:43;;1585:5;;-1:-1:-1;;1592:17:43;1561:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1620:20:43;;-1:-1:-1;;;1620:20:43;;-1:-1:-1;;;;;189:32:44;;1620:20:43;;;171:51:44;-1:-1:-1;;;;;;;;;;;250:64:7;1620:13:43;;144:18:44;;1620:20:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1657:6:43;;1681:5;;1650:57;;-1:-1:-1;;;1650:57:43;;-1:-1:-1;;;;;1657:6:43;;;;-1:-1:-1;1650:22:43;;-1:-1:-1;1650:57:43;;1681:5;;;;-1:-1:-1;;1689:17:43;1650:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1740:14:43;;;1752:1;1740:14;;;;;;;;1717:20;;1740:14;;;;;;;;-1:-1:-1;;1786:14:43;;;1798:1;1786:14;;;;;;;;;1717:37;;-1:-1:-1;1764:19:43;;1786:14;-1:-1:-1;1786:14:43;;;;;;;;;;;;;;;;;-1:-1:-1;;1836:16:43;;;1850:1;1836:16;;;;;;;;;1764:36;;-1:-1:-1;1810:23:43;;1836:16;;;;;;;;;;-1:-1:-1;;1889:16:43;;;1903:1;1889:16;;;;;;;;;1810:42;;-1:-1:-1;1862:24:43;;1889:16;-1:-1:-1;1889:16:43;;;;;;;;;-1:-1:-1;;1935:6:43;;1915:9;;1862:43;;-1:-1:-1;;;;;;1935:6:43;;1915:9;;-1:-1:-1;1935:6:43;;1915:9;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;1915:27:43;;;-1:-1:-1;;;;;1915:27:43;;;;;1965:1;1952:7;1960:1;1952:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;1987:1;1976:5;1982:1;1976:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;2009:2;1998:5;2004:1;1998:8;;;;;;;;:::i;:::-;:13;;;;:8;;;;;;;;;;:13;2050:6;;2031:30;;;;-1:-1:-1;;;;;2050:6:43;;;;2059:1;;2031:30;;:::i;:::-;;;;;;;;;;;;;2021:4;2026:1;2021:7;;;;;;;;:::i;:::-;;;;;;:40;;;;2071:47;2121:79;;;;;;;;2168:6;2121:79;;;;2184:5;-1:-1:-1;;;;;2121:79:43;;;;;2192:7;2121:79;;;2071:129;;2231:6;2220:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;2210:4;2215:1;2210:7;;;;;;;;:::i;:::-;;;;;;;;;;:28;2248:11;2280:3;2268:8;:1;2272:4;2268:8;:::i;:::-;2267:16;;;;:::i;:::-;2262:22;;:1;:22;:::i;:::-;2330:5;;:24;;-1:-1:-1;;;2330:24:43;;2248:36;;-1:-1:-1;;;;;;2330:5:43;;:11;;:24;;2342:5;;2349:4;;2330:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2394:6:43;;2387:40;;-1:-1:-1;;;2387:40:43;;-1:-1:-1;;;;;189:32:44;;;2387:40:43;;;171:51:44;2365:111:43;;-1:-1:-1;2394:6:43;;;;-1:-1:-1;2387:24:43;;144:18:44;;2387:40:43;14:214:44;2365:111:43;2502:6;;2528:5;;2495:40;;-1:-1:-1;;;2495:40:43;;-1:-1:-1;;;;;2528:5:43;;;2495:40;;;171:51:44;2486:53:43;;2502:6;;;;;2495:24;;144:18:44;;2495:40:43;14:214:44;1819:584:6;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:6;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:6;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:6;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:6;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:6;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:6;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:6:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;11157:2:44;11139:21;;;11196:2;11176:18;;;11169:30;11235:34;11230:2;11215:18;;11208:62;-1:-1:-1;;;11301:2:44;11286:18;;11279:32;11343:3;11328:19;;10955:398;5286:41:6;;;;;;;;5346:31;;;11570:21:44;;;11627:2;11607:18;;;11600:30;-1:-1:-1;;;11661:2:44;11646:18;;11639:40;11746:4;11731:20;;11724:36;;;5346:31:6;;;;;;;11711:3:44;5346:31:6;;;5396;;;11983:21:44;;;12040:2;12020:18;;;12013:30;-1:-1:-1;;;12074:2:44;12059:18;;12052:40;12159:4;12144:20;;12137:36;;;5396:31:6;;;;;;;12124:3:44;5396:31:6;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:6;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:6;;;12386:51:44;;;-1:-1:-1;;;12453:18:44;;;12446:34;;;;2705:4:6;12496:18:44;;;12489:34;2482:11:6;;1671:64;2579:43;;12359:18:44;;2645:67:6;;;-1:-1:-1;;2645:67:6;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:6;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:6;2813:7;:14;;-1:-1:-1;;2813:14:6;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;233:354:44:-;301:6;309;362:2;350:9;341:7;337:23;333:32;330:52;;;378:1;375;368:12;330:52;401:23;;;-1:-1:-1;474:2:44;459:18;;446:32;-1:-1:-1;;;;;507:31:44;;497:42;;487:70;;553:1;550;543:12;487:70;576:5;566:15;;;233:354;;;;;:::o;3738:274::-;-1:-1:-1;;;;;3930:32:44;;;;3912:51;;3994:2;3979:18;;3972:34;3900:2;3885:18;;3738:274::o;4017:277::-;4084:6;4137:2;4125:9;4116:7;4112:23;4108:32;4105:52;;;4153:1;4150;4143:12;4105:52;4185:9;4179:16;4238:5;4231:13;4224:21;4217:5;4214:32;4204:60;;4260:1;4257;4250:12;4204:60;4283:5;4017:277;-1:-1:-1;;;4017:277:44:o;4639:127::-;4700:10;4695:3;4691:20;4688:1;4681:31;4731:4;4728:1;4721:15;4755:4;4752:1;4745:15;4771:435;4824:3;4862:5;4856:12;4889:6;4884:3;4877:19;4915:4;4944:2;4939:3;4935:12;4928:19;;4981:2;4974:5;4970:14;5002:1;5012:169;5026:6;5023:1;5020:13;5012:169;;;5087:13;;5075:26;;5121:12;;;;5156:15;;;;5048:1;5041:9;5012:169;;;-1:-1:-1;5197:3:44;;4771:435;-1:-1:-1;;;;;4771:435:44:o;5211:832::-;5479:2;5491:21;;;5561:13;;5464:18;;;5583:22;;;5431:4;;5658;;5636:2;5621:18;;;5685:15;;;5431:4;5728:195;5742:6;5739:1;5736:13;5728:195;;;5807:13;;-1:-1:-1;;;;;5803:39:44;5791:52;;5863:12;;;;5898:15;;;;5839:1;5757:9;5728:195;;;5732:3;;;5968:9;5963:3;5959:19;5954:2;5943:9;5939:18;5932:47;5996:41;6033:3;6025:6;5996:41;:::i;:::-;5988:49;5211:832;-1:-1:-1;;;;;;5211:832:44:o;6048:1033::-;6241:2;6252:21;;;6344:13;;6393:4;6373:18;;;6366:32;6447:19;;6311:3;6296:19;;6475:22;;;6212:4;;6241:2;6555:21;;;6212:4;;6528:3;6513:19;;;6604:195;6618:6;6615:1;6612:13;6604:195;;;6683:13;;-1:-1:-1;;;;;6679:39:44;6667:52;;6774:15;;;;6715:1;6633:9;;;;;6739:12;;;;6604:195;;;-1:-1:-1;6845:15:44;;;6839:22;-1:-1:-1;;;;;6835:48:44;6830:2;6815:18;;;6808:76;;;;6921:15;;6915:22;6979:19;;;-1:-1:-1;;6975:33:44;6968:4;6953:20;;6946:63;6915:22;7026:49;6983:3;6915:22;7026:49;:::i;:::-;7018:57;6048:1033;-1:-1:-1;;;;;;;6048:1033:44:o;7086:127::-;7147:10;7142:3;7138:20;7135:1;7128:31;7178:4;7175:1;7168:15;7202:4;7199:1;7192:15;7218:168;7258:7;7324:1;7320;7316:6;7312:14;7309:1;7306:21;7301:1;7294:9;7287:17;7283:45;7280:71;;;7331:18;;:::i;:::-;-1:-1:-1;7371:9:44;;7218:168::o;7391:217::-;7431:1;7457;7447:132;;7501:10;7496:3;7492:20;7489:1;7482:31;7536:4;7533:1;7526:15;7564:4;7561:1;7554:15;7447:132;-1:-1:-1;7593:9:44;;7391:217::o;7613:125::-;7653:4;7681:1;7678;7675:8;7672:34;;;7686:18;;:::i;:::-;-1:-1:-1;7723:9:44;;7613:125::o;7743:258::-;7815:1;7825:113;7839:6;7836:1;7833:13;7825:113;;;7915:11;;;7909:18;7896:11;;;7889:39;7861:2;7854:10;7825:113;;;7956:6;7953:1;7950:13;7947:48;;;7991:1;7982:6;7977:3;7973:16;7966:27;7947:48;;7743:258;;;:::o;8006:1534::-;8288:2;8300:21;;;8370:13;;8273:18;;;8392:22;;;8240:4;;8467;;8445:2;8430:18;;;8494:15;;;8240:4;8537:180;8551:6;8548:1;8545:13;8537:180;;;8616:13;;8631:4;8612:24;8600:37;;8657:12;;;;8692:15;;;;8573:1;8566:9;8537:180;;;-1:-1:-1;;;8753:19:44;;;8733:18;;;8726:47;8823:13;;8845:21;;;8884:12;;;;8936:1;8932:16;;;8923:26;;8919:35;;8979:15;;;9014:1;9024:487;9040:8;9035:3;9032:17;9024:487;;;9109:2;9105:7;9161:2;9155:3;9147:6;9143:16;9139:25;9132:5;9125:40;9194:8;9188:15;9238:2;9232:9;9269:8;9261:6;9254:24;9291:61;9343:8;9338:2;9330:6;9326:15;9321:2;9317;9313:11;9291:61;:::i;:::-;9487:14;;;;9409:2;9395:17;9391:26;;;9379:39;;;;9375:48;;;-1:-1:-1;9448:17:44;;;;9068:1;9059:11;9024:487;;;-1:-1:-1;9528:6:44;;8006:1534;-1:-1:-1;;;;;;;;;8006:1534:44:o;9545:184::-;9615:6;9668:2;9656:9;9647:7;9643:23;9639:32;9636:52;;;9684:1;9681;9674:12;9636:52;-1:-1:-1;9707:16:44;;9545:184;-1:-1:-1;9545:184:44:o;10300:371::-;-1:-1:-1;;;;;;10485:33:44;;10473:46;;10542:13;;10455:3;;10564:61;10542:13;10614:1;10605:11;;10598:4;10586:17;;10564:61;:::i;:::-;10645:16;;;;10663:1;10641:24;;10300:371;-1:-1:-1;;;10300:371:44:o;10676:274::-;10805:3;10843:6;10837:13;10859:53;10905:6;10900:3;10893:4;10885:6;10881:17;10859:53;:::i;:::-;10928:16;;;;;10676:274;-1:-1:-1;;10676:274:44:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testBatchDeposits(uint256,address)": "64cc11fb",
    "testSTF()": "8855ba81",
    "testSingleDeposits(uint256,address)": "8d05dda8",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"testBatchDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSTF\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"testSingleDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/SwapsUnit.t.sol\":\"SwapsUnitTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-core/=lib/joe-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-core/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb7db7ad6f741b3c211b952d4ebdbd13393ebc72ec94ce372ed29693ae354267a\",\"urls\":[\"bzz-raw://e891360abc2e638d17405aa868ff4e2b53badc30e6b2cf2dd2943c5192ac6659\",\"dweb:/ipfs/QmRWVJbLPhbSqDmC7a5JjBfLPLJriyCu8a55rgh8m2JrfZ\"]},\"lib/contracts/contracts/interfaces/IPair.sol\":{\"keccak256\":\"0x2f8f02ca9ab8a14bba3e86d2eedefa2e470f88a36a3dfa715002750fed6d6838\",\"urls\":[\"bzz-raw://b5f3f6f4bc96782e7886b9fe3a5957d98b3d963f8dbfa210ad9813ca82c5c264\",\"dweb:/ipfs/QmUpH5qQZq6TrZoJsFBHqT688fowyNiUo83cRcAnsspzdR\"]},\"lib/contracts/contracts/interfaces/IPairFactory.sol\":{\"keccak256\":\"0x94f95228d76b621cb7e718ea097acbed1a3498ddd01db7fe7bfcde9f17c66cd6\",\"urls\":[\"bzz-raw://29139e3fa6b74971879aec713c4dcdf26255f0ed543768d50225f12d64376490\",\"dweb:/ipfs/QmampKWtLGaih7UHjnLzWri5gedF67V3EdELByrJsQ65mF\"]},\"lib/contracts/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0xb5e9bb7bd0f34d2b89995f2e5d728e9bcc130b859dce890aa9304d9fbe34cc78\",\"urls\":[\"bzz-raw://6e5758f15b1f2a2024ab8c89c5e1aa0949370d7d41e25d9438a51ee16e3e4a58\",\"dweb:/ipfs/QmYXa7NfWkFN3iEk6itJUdWX3d1z3euBwKECqMbPsguYGK\"]},\"lib/contracts/contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xbd004cdd13c7844cc7dcfc36f5ee478355bbe2f4ea07eaf4ba5cc1d1ae1aff04\",\"urls\":[\"bzz-raw://81a15e5ab3c45bb296e6a5b76b620b397e2d6446505a5601bf5294371c050d25\",\"dweb:/ipfs/QmZ8QDYPN2t4sTaepJa2FZYAN3P4MNYajWjRpcJcG3NbKB\"]},\"lib/contracts/contracts/libraries/Math.sol\":{\"keccak256\":\"0x0bf514ec598ba80066dc956faf4094f8717ef31b6f3534dd4bdfb6a2fdd3e08f\",\"urls\":[\"bzz-raw://41a2d8ca63f4b0aca3ca9c9d77d5d9eba5fe8c328de301504b40eeaaa547e576\",\"dweb:/ipfs/Qmc6JquDif2FRAwyV7HjyeUP7eHQzCS7ipRW6TnK7NhKzL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter01.sol\":{\"keccak256\":\"0xb87242a1098a0a2d64ac3f1eb970fc4fad2f1e43f06879a35733fe57d2bc3783\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27138b1d6ce2a542bc942a7d41d7302ae8dca2a894f37d8c06edc371eeee698\",\"dweb:/ipfs/QmQv4ZNhhXrTyCXL2NDCxg1Xuhmm8Q2CsE1PAhmAWp9rzn\"]},\"lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter02.sol\":{\"keccak256\":\"0xe0bea03fe60c0b819d5070049bac4b93650083aba173ccd1fa3c3ce665bf43ca\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://011999d25466b2198cc24365dd96fccf6a2a2da9e8c6dae11f6b070144fe3915\",\"dweb:/ipfs/QmXHrrp1k6nxuqd1CT6oTbYK21krGbst4E8MbfV2PxgaZL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter01.sol\":{\"keccak256\":\"0x2c01a280b6aaae58c4751176de3b31dd262eea0755723772a8b30fa72af3a85d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df343b0f163bf4dcbdd48700dcd5364a325480d5a4dc4e8e5bae599fb8783009\",\"dweb:/ipfs/QmbhRw49jdkQXCVmqDLSpGvRjBWk677v3ZSuNR3gkLxAiD\"]},\"lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter02.sol\":{\"keccak256\":\"0xd36c365fb434ae460de510632543a9c46393dbb49240a32fce653bc053fcae85\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://70a0df16eaf1069dc4c1e4059aae389486877effd59951d254d58ebb595a00e5\",\"dweb:/ipfs/QmQwTJDidPoHp82DuFSoNd7ZXfgLWq8w91Dhu7xfV9P7SV\"]},\"lib/spookyswap-core/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x7bf9a68b5be399ce542367291361819989039cdca993e8d60f4dd9c723ff4740\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9043b6ee74ee1df7fc0fb82b20b69ca97e6edd1cb05eef62c87b29f0cd71bc97\",\"dweb:/ipfs/Qme9RNhgu9R1ypJ1gUgEd8ZVJSFMciAdpLcWQ2UTAPkMUi\"]},\"lib/spookyswap-core/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x1cb83915099ee065638cb0b2e3820a14b7edc764c1ce6f54f8507cfc367821d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://06c45956935089ebabf4d84bbf8491cbf4cf15fcfca8464b717239de56d9981f\",\"dweb:/ipfs/QmeDJ7QGGcbRvqC2U7ZqCQ3VJkmqnPgwYtPs54F9fy3hiF\"]},\"lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb\",\"dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x03b602163607bfec193095263c5cc6f7a27fac34abdb40a98bb13ca70b1baa75\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://217ed9133a8365e438030ba66182b1f8e44df54976e949cd9e04e8abe674d79f\",\"dweb:/ipfs/QmSLcF9k2J5gm42zqpzpFE8YtES963pACy2mecx9tLPNTB\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440\",\"dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xf40e1697a7adb03822ebbd77995d408f0fc78f6e0082e92799fcf8ebb9e24d28\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5da104a2627ac01bbc6a8e105b5bb46b8a0c849ff092c336a2cd17dbbe72489e\",\"dweb:/ipfs/Qmew1o3G5hTCHXtFLyppwrV2ZawtbkqFM3SVKSZaSxHzwe\"]},\"src/CrossChainSwaps/CrossChainSwaps.sol\":{\"keccak256\":\"0x0c26a66d4ffc68451132dca50d148658999ca44034f7fdf79cafb5f6399d3061\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b73a08f0e269765b1bbc0da4cc58bf355e2a5cacb3bb31b248828939bd1869\",\"dweb:/ipfs/QmcsN1qpHG9CYu9RfV6QxERARHrWRpmLZAM6JdCm1tDYxU\"]},\"src/CrossChainSwaps/adapters/StargateAdapter.sol\":{\"keccak256\":\"0x6abda4f5178b7542c6147bbc1d89ee9a511007fb1b0b2d6cc7bda13a191a5159\",\"urls\":[\"bzz-raw://82f29edad19d64a23193eefbd6698fad3a1c416d63b06e46781bb586f1cb483f\",\"dweb:/ipfs/QmUkLJ7grk9jsmPM4ysH9SBER5X6Q4pqMN21hUAFi9N45t\"]},\"src/CrossChainSwaps/adapters/SushiAdapter.sol\":{\"keccak256\":\"0x898f2f80c35d2a5b7756c78b963b1c2ed46486e8f8441dc8d55d1877b37a7065\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dbbdc9a75e66f1ed65d4165fd63c03f8d3daaba4ab8eacbd3ca876b8f7ad3103\",\"dweb:/ipfs/QmPKeteojFuBYwgf7dSicJTkQuSVx33BTfURBb3CXL8Txm\"]},\"src/CrossChainSwaps/adapters/UniswapAdapter.sol\":{\"keccak256\":\"0x7547ef642205f3cd0f8195f0c6d5e703a9952da5b975778a59ed1922fa9907dd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b819268bc73cd5ba9635784ab2c79c1aad77615e899b9f7b021ce7d8c445457d\",\"dweb:/ipfs/QmQKPutxBkburfeLgN2RHrQtM9EJGxcK7oCDppAbmqjeGA\"]},\"src/CrossChainSwaps/adapters/VelodromeAdapter.sol\":{\"keccak256\":\"0x3e0dfd10bf29eef6f4eba40867344ad4fb076f403896fd9e44bb5372a011163f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb3b0273fd5834acfc47bc991752aa9fe24b6916405b6a21a908b3e019752d2\",\"dweb:/ipfs/QmPsG8TT5SYaC4bhqLfnemkKASQ7J2gFQ6GYocuqvwVqTP\"]},\"src/CrossChainSwaps/interfaces/ICrossChainSwaps.sol\":{\"keccak256\":\"0xbc9afb46100aa08e5c5bb83eda6602d22d89f3f9d85f51a5dddc6d4441acd912\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://172856fad31953796f8d68e08a172557733561c9f9e9e984e1102f8ca8692f45\",\"dweb:/ipfs/QmXxTAy8bjJvoZ3zq1cDEcoMPshYsxdGbXy99PLrdb4maM\"]},\"src/CrossChainSwaps/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b\",\"dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr\"]},\"src/CrossChainSwaps/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0xd2b352dfab63caa98db0b727013c3e57c8764c4f8b5fc585c653991f25f808cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://45cac68bf34bbfa560f1a345ba75c609d1eba86a6e753d1bcc28b638634c1506\",\"dweb:/ipfs/QmbLyjXm6WUNx2qFex9MsYvSNrxaerNcbibtFtwfC92o8g\"]},\"src/CrossChainSwaps/interfaces/IWETH9.sol\":{\"keccak256\":\"0x228f74cbcd96cf96317acbcf91e966ab33b8bce022cfe048788f9eaa5a917693\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://92931f28be69da58910fdc266ceee0711806241120f89223a475645c5bfe21a2\",\"dweb:/ipfs/QmNa9d5PuqCvmYzaaBTXitXL1LcmNmKs4E6Cxsm5USSZtY\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313\",\"dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5\"]},\"test/SwapsUnit.t.sol\":{\"keccak256\":\"0xcc21a2aa9d54c6111075aa2b0b27a6a4fe0ef4c7567e5b6dc73baa72c12732df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3699a108cc57461a0c9964d17c3d916f10ff48ec9a143234ed45fffecfaba590\",\"dweb:/ipfs/Qmc9suGtB3yBnmvxH6ZLky3d5yotzLqJ28cnqTYQX8w1QS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBatchDeposits"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSTF"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSingleDeposits"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-core/=lib/joe-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-core/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/SwapsUnit.t.sol": "SwapsUnitTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xb7db7ad6f741b3c211b952d4ebdbd13393ebc72ec94ce372ed29693ae354267a",
        "urls": [
          "bzz-raw://e891360abc2e638d17405aa868ff4e2b53badc30e6b2cf2dd2943c5192ac6659",
          "dweb:/ipfs/QmRWVJbLPhbSqDmC7a5JjBfLPLJriyCu8a55rgh8m2JrfZ"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IPair.sol": {
        "keccak256": "0x2f8f02ca9ab8a14bba3e86d2eedefa2e470f88a36a3dfa715002750fed6d6838",
        "urls": [
          "bzz-raw://b5f3f6f4bc96782e7886b9fe3a5957d98b3d963f8dbfa210ad9813ca82c5c264",
          "dweb:/ipfs/QmUpH5qQZq6TrZoJsFBHqT688fowyNiUo83cRcAnsspzdR"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IPairFactory.sol": {
        "keccak256": "0x94f95228d76b621cb7e718ea097acbed1a3498ddd01db7fe7bfcde9f17c66cd6",
        "urls": [
          "bzz-raw://29139e3fa6b74971879aec713c4dcdf26255f0ed543768d50225f12d64376490",
          "dweb:/ipfs/QmampKWtLGaih7UHjnLzWri5gedF67V3EdELByrJsQ65mF"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IRouter.sol": {
        "keccak256": "0xb5e9bb7bd0f34d2b89995f2e5d728e9bcc130b859dce890aa9304d9fbe34cc78",
        "urls": [
          "bzz-raw://6e5758f15b1f2a2024ab8c89c5e1aa0949370d7d41e25d9438a51ee16e3e4a58",
          "dweb:/ipfs/QmYXa7NfWkFN3iEk6itJUdWX3d1z3euBwKECqMbPsguYGK"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IWETH.sol": {
        "keccak256": "0xbd004cdd13c7844cc7dcfc36f5ee478355bbe2f4ea07eaf4ba5cc1d1ae1aff04",
        "urls": [
          "bzz-raw://81a15e5ab3c45bb296e6a5b76b620b397e2d6446505a5601bf5294371c050d25",
          "dweb:/ipfs/QmZ8QDYPN2t4sTaepJa2FZYAN3P4MNYajWjRpcJcG3NbKB"
        ],
        "license": null
      },
      "lib/contracts/contracts/libraries/Math.sol": {
        "keccak256": "0x0bf514ec598ba80066dc956faf4094f8717ef31b6f3534dd4bdfb6a2fdd3e08f",
        "urls": [
          "bzz-raw://41a2d8ca63f4b0aca3ca9c9d77d5d9eba5fe8c328de301504b40eeaaa547e576",
          "dweb:/ipfs/Qmc6JquDif2FRAwyV7HjyeUP7eHQzCS7ipRW6TnK7NhKzL"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter01.sol": {
        "keccak256": "0xb87242a1098a0a2d64ac3f1eb970fc4fad2f1e43f06879a35733fe57d2bc3783",
        "urls": [
          "bzz-raw://a27138b1d6ce2a542bc942a7d41d7302ae8dca2a894f37d8c06edc371eeee698",
          "dweb:/ipfs/QmQv4ZNhhXrTyCXL2NDCxg1Xuhmm8Q2CsE1PAhmAWp9rzn"
        ],
        "license": "GPL-3.0"
      },
      "lib/joe-core/contracts/traderjoe/interfaces/IJoeRouter02.sol": {
        "keccak256": "0xe0bea03fe60c0b819d5070049bac4b93650083aba173ccd1fa3c3ce665bf43ca",
        "urls": [
          "bzz-raw://011999d25466b2198cc24365dd96fccf6a2a2da9e8c6dae11f6b070144fe3915",
          "dweb:/ipfs/QmXHrrp1k6nxuqd1CT6oTbYK21krGbst4E8MbfV2PxgaZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter01.sol": {
        "keccak256": "0x2c01a280b6aaae58c4751176de3b31dd262eea0755723772a8b30fa72af3a85d",
        "urls": [
          "bzz-raw://df343b0f163bf4dcbdd48700dcd5364a325480d5a4dc4e8e5bae599fb8783009",
          "dweb:/ipfs/QmbhRw49jdkQXCVmqDLSpGvRjBWk677v3ZSuNR3gkLxAiD"
        ],
        "license": "GPL-3.0"
      },
      "lib/pancake-smart-contracts/projects/exchange-protocol/contracts/interfaces/IPancakeRouter02.sol": {
        "keccak256": "0xd36c365fb434ae460de510632543a9c46393dbb49240a32fce653bc053fcae85",
        "urls": [
          "bzz-raw://70a0df16eaf1069dc4c1e4059aae389486877effd59951d254d58ebb595a00e5",
          "dweb:/ipfs/QmQwTJDidPoHp82DuFSoNd7ZXfgLWq8w91Dhu7xfV9P7SV"
        ],
        "license": "GPL-3.0"
      },
      "lib/spookyswap-core/contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x7bf9a68b5be399ce542367291361819989039cdca993e8d60f4dd9c723ff4740",
        "urls": [
          "bzz-raw://9043b6ee74ee1df7fc0fb82b20b69ca97e6edd1cb05eef62c87b29f0cd71bc97",
          "dweb:/ipfs/Qme9RNhgu9R1ypJ1gUgEd8ZVJSFMciAdpLcWQ2UTAPkMUi"
        ],
        "license": "GPL-3.0"
      },
      "lib/spookyswap-core/contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0x1cb83915099ee065638cb0b2e3820a14b7edc764c1ce6f54f8507cfc367821d3",
        "urls": [
          "bzz-raw://06c45956935089ebabf4d84bbf8491cbf4cf15fcfca8464b717239de56d9981f",
          "dweb:/ipfs/QmeDJ7QGGcbRvqC2U7ZqCQ3VJkmqnPgwYtPs54F9fy3hiF"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385",
        "urls": [
          "bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e",
          "dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411",
        "urls": [
          "bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb",
          "dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol": {
        "keccak256": "0x03b602163607bfec193095263c5cc6f7a27fac34abdb40a98bb13ca70b1baa75",
        "urls": [
          "bzz-raw://217ed9133a8365e438030ba66182b1f8e44df54976e949cd9e04e8abe674d79f",
          "dweb:/ipfs/QmSLcF9k2J5gm42zqpzpFE8YtES963pACy2mecx9tLPNTB"
        ],
        "license": "GPL-3.0"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc",
        "urls": [
          "bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440",
          "dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0xf40e1697a7adb03822ebbd77995d408f0fc78f6e0082e92799fcf8ebb9e24d28",
        "urls": [
          "bzz-raw://5da104a2627ac01bbc6a8e105b5bb46b8a0c849ff092c336a2cd17dbbe72489e",
          "dweb:/ipfs/Qmew1o3G5hTCHXtFLyppwrV2ZawtbkqFM3SVKSZaSxHzwe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/CrossChainSwaps.sol": {
        "keccak256": "0x0c26a66d4ffc68451132dca50d148658999ca44034f7fdf79cafb5f6399d3061",
        "urls": [
          "bzz-raw://01b73a08f0e269765b1bbc0da4cc58bf355e2a5cacb3bb31b248828939bd1869",
          "dweb:/ipfs/QmcsN1qpHG9CYu9RfV6QxERARHrWRpmLZAM6JdCm1tDYxU"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/adapters/StargateAdapter.sol": {
        "keccak256": "0x6abda4f5178b7542c6147bbc1d89ee9a511007fb1b0b2d6cc7bda13a191a5159",
        "urls": [
          "bzz-raw://82f29edad19d64a23193eefbd6698fad3a1c416d63b06e46781bb586f1cb483f",
          "dweb:/ipfs/QmUkLJ7grk9jsmPM4ysH9SBER5X6Q4pqMN21hUAFi9N45t"
        ],
        "license": null
      },
      "src/CrossChainSwaps/adapters/SushiAdapter.sol": {
        "keccak256": "0x898f2f80c35d2a5b7756c78b963b1c2ed46486e8f8441dc8d55d1877b37a7065",
        "urls": [
          "bzz-raw://dbbdc9a75e66f1ed65d4165fd63c03f8d3daaba4ab8eacbd3ca876b8f7ad3103",
          "dweb:/ipfs/QmPKeteojFuBYwgf7dSicJTkQuSVx33BTfURBb3CXL8Txm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/CrossChainSwaps/adapters/UniswapAdapter.sol": {
        "keccak256": "0x7547ef642205f3cd0f8195f0c6d5e703a9952da5b975778a59ed1922fa9907dd",
        "urls": [
          "bzz-raw://b819268bc73cd5ba9635784ab2c79c1aad77615e899b9f7b021ce7d8c445457d",
          "dweb:/ipfs/QmQKPutxBkburfeLgN2RHrQtM9EJGxcK7oCDppAbmqjeGA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/adapters/VelodromeAdapter.sol": {
        "keccak256": "0x3e0dfd10bf29eef6f4eba40867344ad4fb076f403896fd9e44bb5372a011163f",
        "urls": [
          "bzz-raw://7bb3b0273fd5834acfc47bc991752aa9fe24b6916405b6a21a908b3e019752d2",
          "dweb:/ipfs/QmPsG8TT5SYaC4bhqLfnemkKASQ7J2gFQ6GYocuqvwVqTP"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/interfaces/ICrossChainSwaps.sol": {
        "keccak256": "0xbc9afb46100aa08e5c5bb83eda6602d22d89f3f9d85f51a5dddc6d4441acd912",
        "urls": [
          "bzz-raw://172856fad31953796f8d68e08a172557733561c9f9e9e984e1102f8ca8692f45",
          "dweb:/ipfs/QmXxTAy8bjJvoZ3zq1cDEcoMPshYsxdGbXy99PLrdb4maM"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/interfaces/IStargateReceiver.sol": {
        "keccak256": "0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3",
        "urls": [
          "bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b",
          "dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IStargateRouter.sol": {
        "keccak256": "0xd2b352dfab63caa98db0b727013c3e57c8764c4f8b5fc585c653991f25f808cd",
        "urls": [
          "bzz-raw://45cac68bf34bbfa560f1a345ba75c609d1eba86a6e753d1bcc28b638634c1506",
          "dweb:/ipfs/QmbLyjXm6WUNx2qFex9MsYvSNrxaerNcbibtFtwfC92o8g"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IWETH9.sol": {
        "keccak256": "0x228f74cbcd96cf96317acbcf91e966ab33b8bce022cfe048788f9eaa5a917693",
        "urls": [
          "bzz-raw://92931f28be69da58910fdc266ceee0711806241120f89223a475645c5bfe21a2",
          "dweb:/ipfs/QmNa9d5PuqCvmYzaaBTXitXL1LcmNmKs4E6Cxsm5USSZtY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4",
        "urls": [
          "bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313",
          "dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5"
        ],
        "license": "MIT"
      },
      "test/SwapsUnit.t.sol": {
        "keccak256": "0xcc21a2aa9d54c6111075aa2b0b27a6a4fe0ef4c7567e5b6dc73baa72c12732df",
        "urls": [
          "bzz-raw://3699a108cc57461a0c9964d17c3d916f10ff48ec9a143234ed45fffecfaba590",
          "dweb:/ipfs/Qmc9suGtB3yBnmvxH6ZLky3d5yotzLqJ28cnqTYQX8w1QS"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/SwapsUnit.t.sol",
    "id": 31320,
    "exportedSymbols": {
      "Address": [
        25362
      ],
      "Context": [
        25384
      ],
      "CrossChainSwaps": [
        28280
      ],
      "DSTest": [
        2203
      ],
      "ERC20": [
        24612
      ],
      "ICrossChainSwaps": [
        30016
      ],
      "IERC20": [
        24690
      ],
      "IERC20Metadata": [
        24715
      ],
      "IERC20Permit": [
        24751
      ],
      "IJoeRouter02": [
        24025
      ],
      "IPancakeRouter02": [
        25780
      ],
      "IStargateReceiver": [
        30034
      ],
      "IStargateRouter": [
        30154
      ],
      "ISwapRouter": [
        27093
      ],
      "IUniswapV2Pair": [
        26418
      ],
      "IUniswapV2Router02": [
        26176
      ],
      "IWETH9": [
        30171
      ],
      "MockERC20": [
        30256
      ],
      "SafeERC20": [
        25032
      ],
      "SafeMathUniswap": [
        26493
      ],
      "Script": [
        2466
      ],
      "StargateAdapter": [
        28646
      ],
      "StdStorage": [
        5494
      ],
      "SushiLegacyAdapter": [
        28882
      ],
      "SwapsUnitTest": [
        31319
      ],
      "Test": [
        5396
      ],
      "TransferHelper": [
        27264
      ],
      "UniswapAdapter": [
        29038
      ],
      "UniswapV2Library": [
        26979
      ],
      "VelodromeAdapter": [
        30004
      ],
      "Vm": [
        7501
      ],
      "console": [
        15565
      ],
      "console2": [
        23629
      ],
      "stdError": [
        5466
      ],
      "stdJson": [
        2826
      ],
      "stdMath": [
        6735
      ],
      "stdStorage": [
        6596
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4619:43",
    "nodes": [
      {
        "id": 30547,
        "nodeType": "PragmaDirective",
        "src": "39:24:43",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30548,
        "nodeType": "ImportDirective",
        "src": "65:28:43",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31320,
        "sourceUnit": 6736,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30549,
        "nodeType": "ImportDirective",
        "src": "94:52:43",
        "absolutePath": "src/CrossChainSwaps/CrossChainSwaps.sol",
        "file": "../src/CrossChainSwaps/CrossChainSwaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31320,
        "sourceUnit": 28281,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30550,
        "nodeType": "ImportDirective",
        "src": "147:36:43",
        "absolutePath": "src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31320,
        "sourceUnit": 30257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30551,
        "nodeType": "ImportDirective",
        "src": "184:55:43",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31320,
        "sourceUnit": 24691,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30552,
        "nodeType": "ImportDirective",
        "src": "240:61:43",
        "absolutePath": "src/CrossChainSwaps/adapters/StargateAdapter.sol",
        "file": "../src/CrossChainSwaps/adapters/StargateAdapter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31320,
        "sourceUnit": 28647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31319,
        "nodeType": "ContractDefinition",
        "src": "327:4330:43",
        "nodes": [
          {
            "id": 30557,
            "nodeType": "VariableDeclaration",
            "src": "364:21:43",
            "constant": false,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "380:5:43",
            "scope": 31319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
              "typeString": "contract CrossChainSwaps"
            },
            "typeName": {
              "id": 30556,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30555,
                "name": "CrossChainSwaps",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28280,
                "src": "364:15:43"
              },
              "referencedDeclaration": 28280,
              "src": "364:15:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                "typeString": "contract CrossChainSwaps"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30560,
            "nodeType": "VariableDeclaration",
            "src": "391:16:43",
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "401:6:43",
            "scope": 31319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30256",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30558,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30256,
                "src": "391:9:43"
              },
              "referencedDeclaration": 30256,
              "src": "391:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30256",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30563,
            "nodeType": "VariableDeclaration",
            "src": "413:16:43",
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "423:6:43",
            "scope": 31319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30256",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30562,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30561,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30256,
                "src": "413:9:43"
              },
              "referencedDeclaration": 30256,
              "src": "413:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30256",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30566,
            "nodeType": "VariableDeclaration",
            "src": "435:16:43",
            "constant": false,
            "mutability": "mutable",
            "name": "token3",
            "nameLocation": "445:6:43",
            "scope": 31319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$30256",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 30565,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30564,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30256,
                "src": "435:9:43"
              },
              "referencedDeclaration": 30256,
              "src": "435:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$30256",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30572,
            "nodeType": "VariableDeclaration",
            "src": "457:30:43",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "465:5:43",
            "scope": 31319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30567,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "457:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3078313234",
                  "id": 30570,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "481:5:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_292_by_1",
                    "typeString": "int_const 292"
                  },
                  "value": "0x124"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_292_by_1",
                    "typeString": "int_const 292"
                  }
                ],
                "id": 30569,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "473:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 30568,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:43",
                  "typeDescriptions": {}
                }
              },
              "id": 30571,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "473:14:43",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30660,
            "nodeType": "FunctionDefinition",
            "src": "494:822:43",
            "body": {
              "id": 30659,
              "nodeType": "Block",
              "src": "518:798:43",
              "statements": [
                {
                  "expression": {
                    "id": 30603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30575,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30557,
                      "src": "528:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                        "typeString": "contract CrossChainSwaps"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "577:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "569:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30579,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "569:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "569:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "613:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "605:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30584,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "605:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "605:10:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30583,
                            "name": "ISwapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27093,
                            "src": "593:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$27093_$",
                              "typeString": "type(contract ISwapRouter)"
                            }
                          },
                          "id": 30588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "593:23:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$27093",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 30589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "630:42:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 30590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "686:66:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
                        },
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 30591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "766:42:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "830:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "822:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30592,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "822:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "822:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "870:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "862:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30597,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "862:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "862:10:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30596,
                            "name": "IStargateRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30154,
                            "src": "846:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStargateRouter_$30154_$",
                              "typeString": "type(contract IStargateRouter)"
                            }
                          },
                          "id": 30601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:27:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStargateRouter_$30154",
                            "typeString": "contract IStargateRouter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_ISwapRouter_$27093",
                            "typeString": "contract ISwapRouter"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStargateRouter_$30154",
                            "typeString": "contract IStargateRouter"
                          }
                        ],
                        "id": 30578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "536:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_ISwapRouter_$27093_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_contract$_IStargateRouter_$30154_$returns$_t_contract$_CrossChainSwaps_$28280_$",
                          "typeString": "function (address,contract ISwapRouter,address,bytes32,address,address,contract IStargateRouter) returns (contract CrossChainSwaps)"
                        },
                        "typeName": {
                          "id": 30577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30576,
                            "name": "CrossChainSwaps",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28280,
                            "src": "540:15:43"
                          },
                          "referencedDeclaration": 28280,
                          "src": "540:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                            "typeString": "contract CrossChainSwaps"
                          }
                        }
                      },
                      "id": 30602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "536:347:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                        "typeString": "contract CrossChainSwaps"
                      }
                    },
                    "src": "528:355:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                      "typeString": "contract CrossChainSwaps"
                    }
                  },
                  "id": 30604,
                  "nodeType": "ExpressionStatement",
                  "src": "528:355:43"
                },
                {
                  "expression": {
                    "id": 30621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30605,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30560,
                      "src": "893:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2031",
                          "id": 30609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "929:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5eacce6c95f6838cd10e92f48b0d82f4df03d4ad1e947ebc0e9a235c5ef43194",
                            "typeString": "literal_string \"Token 1\""
                          },
                          "value": "Token 1"
                        },
                        {
                          "hexValue": "544b31",
                          "id": 30610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          "value": "TK1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30613,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "979:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "971:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30611,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "971:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "971:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1003:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30616,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1003:7:43",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30615,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "998:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "998:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "998:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5eacce6c95f6838cd10e92f48b0d82f4df03d4ad1e947ebc0e9a235c5ef43194",
                            "typeString": "literal_string \"Token 1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "902:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30256_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30607,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30606,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30256,
                            "src": "906:9:43"
                          },
                          "referencedDeclaration": 30256,
                          "src": "906:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "902:123:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "893:132:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30256",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30622,
                  "nodeType": "ExpressionStatement",
                  "src": "893:132:43"
                },
                {
                  "expression": {
                    "id": 30639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30623,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30563,
                      "src": "1035:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2032",
                          "id": 30627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1071:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c751b5b68c0ab3f6eca892f0f099d5a090c64dfe42ad9cf60707ee1cc8d081d8",
                            "typeString": "literal_string \"Token 2\""
                          },
                          "value": "Token 2"
                        },
                        {
                          "hexValue": "544b32",
                          "id": 30628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1094:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          "value": "TK2"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30631,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1121:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1113:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30629,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1113:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1113:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1145:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30634,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1145:7:43",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30633,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1140:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1140:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1140:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c751b5b68c0ab3f6eca892f0f099d5a090c64dfe42ad9cf60707ee1cc8d081d8",
                            "typeString": "literal_string \"Token 2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1044:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30256_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30625,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30624,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30256,
                            "src": "1048:9:43"
                          },
                          "referencedDeclaration": 30256,
                          "src": "1048:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1044:123:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1035:132:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30256",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30640,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:132:43"
                },
                {
                  "expression": {
                    "id": 30657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30641,
                      "name": "token3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30566,
                      "src": "1177:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2033",
                          "id": 30645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1213:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_57491824fcb3f02d12c71479511f447bd2617e2fb2c579357821dbff760f2b99",
                            "typeString": "literal_string \"Token 3\""
                          },
                          "value": "Token 3"
                        },
                        {
                          "hexValue": "544b33",
                          "id": 30646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1236:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ff513019c6e0a94954db08bafee0c1d15ae9bbc88b847489251a31df275f0089",
                            "typeString": "literal_string \"TK3\""
                          },
                          "value": "TK3"
                        },
                        {
                          "arguments": [
                            {
                              "id": 30649,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1263:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1255:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30647,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1255:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1255:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1287:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 30652,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1287:7:43",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 30651,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1282:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1282:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 30655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1282:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_57491824fcb3f02d12c71479511f447bd2617e2fb2c579357821dbff760f2b99",
                            "typeString": "literal_string \"Token 3\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ff513019c6e0a94954db08bafee0c1d15ae9bbc88b847489251a31df275f0089",
                            "typeString": "literal_string \"TK3\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1186:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$30256_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 30643,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30642,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30256,
                            "src": "1190:9:43"
                          },
                          "referencedDeclaration": 30256,
                          "src": "1190:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 30656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1186:123:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$30256",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1177:132:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$30256",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 30658,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:132:43"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "503:5:43",
            "parameters": {
              "id": 30573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:43"
            },
            "returnParameters": {
              "id": 30574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:43"
            },
            "scope": 31319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30908,
            "nodeType": "FunctionDefinition",
            "src": "1339:1231:43",
            "body": {
              "id": 30907,
              "nodeType": "Block",
              "src": "1400:1170:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30670,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30662,
                          "src": "1420:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1424:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1420:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30667,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1410:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1410:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30674,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:16:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30678,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30662,
                          "src": "1446:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1455:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                },
                                "typeName": {
                                  "id": 30680,
                                  "name": "uint216",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1455:7:43",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                }
                              ],
                              "id": 30679,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1450:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1450:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint216",
                              "typeString": "type(uint216)"
                            }
                          },
                          "id": 30683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1450:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint216",
                            "typeString": "uint216"
                          }
                        },
                        "src": "1446:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30675,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1436:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1436:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:32:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30686,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:32:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30690,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30664,
                          "src": "1488:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1505:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1497:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1497:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1488:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30687,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1478:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1478:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:30:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30697,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30701,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30664,
                          "src": "1528:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30704,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1545:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1537:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30702,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1537:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1537:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1528:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30698,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1518:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "1518:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:33:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30708,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:33:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30713,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30664,
                        "src": "1585:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1597:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30715,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1597:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30714,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1592:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1592:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1592:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30710,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30560,
                            "src": "1568:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30709,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "1561:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1561:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "1561:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30720,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30724,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30664,
                        "src": "1634:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30721,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1620:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6965,
                      "src": "1620:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30726,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:20:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30733,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30557,
                            "src": "1681:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 30732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1673:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30731,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1673:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1673:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1694:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30736,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1694:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30735,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1689:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1689:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30728,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30560,
                            "src": "1657:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30727,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "1650:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1650:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "1650:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:57:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30741,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:57:43"
                },
                {
                  "assignments": [
                    30746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30746,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "1732:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "1717:20:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30744,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1717:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30745,
                        "nodeType": "ArrayTypeName",
                        "src": "1717:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30752,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1752:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1740:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30747,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1744:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 30748,
                        "nodeType": "ArrayTypeName",
                        "src": "1744:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 30751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:37:43"
                },
                {
                  "assignments": [
                    30757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30757,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1779:4:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "1764:19:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30755,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30756,
                        "nodeType": "ArrayTypeName",
                        "src": "1764:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30763,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 30761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 30760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1786:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30758,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1790:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 30759,
                        "nodeType": "ArrayTypeName",
                        "src": "1790:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 30762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1764:36:43"
                },
                {
                  "assignments": [
                    30768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30768,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1827:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "1810:23:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1810:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30767,
                        "nodeType": "ArrayTypeName",
                        "src": "1810:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30774,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 30772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 30771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1836:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1840:7:43",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30770,
                        "nodeType": "ArrayTypeName",
                        "src": "1840:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 30773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1810:42:43"
                },
                {
                  "assignments": [
                    30779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30779,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "1879:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "1862:24:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30777,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1862:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30778,
                        "nodeType": "ArrayTypeName",
                        "src": "1862:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30785,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 30783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1903:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 30782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1889:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 30780,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30781,
                        "nodeType": "ArrayTypeName",
                        "src": "1893:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 30784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1862:43:43"
                },
                {
                  "expression": {
                    "id": 30793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30786,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30768,
                        "src": "1915:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 30788,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1922:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1915:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30791,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30560,
                          "src": "1935:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 30790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1927:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30789,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1927:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1927:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1915:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30794,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:27:43"
                },
                {
                  "expression": {
                    "id": 30799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30795,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30779,
                        "src": "1952:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 30797,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1960:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1952:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30798,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30662,
                      "src": "1965:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1952:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30800,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:14:43"
                },
                {
                  "expression": {
                    "id": 30805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30801,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30746,
                        "src": "1976:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30803,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1982:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1976:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 30804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1987:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1976:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30806,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:12:43"
                },
                {
                  "expression": {
                    "id": 30811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30807,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30746,
                        "src": "1998:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 30809,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1998:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 30810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2009:2:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "1998:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 30812,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:13:43"
                },
                {
                  "expression": {
                    "id": 30824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30813,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30757,
                        "src": "2021:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30815,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 30814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2021:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30820,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30560,
                              "src": "2050:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$30256",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$30256",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 30819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2042:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30818,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2042:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2042:15:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30822,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30662,
                          "src": "2059:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 30816,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2031:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2031:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2031:30:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2021:40:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30825,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:40:43"
                },
                {
                  "assignments": [
                    30830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30830,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2112:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "2071:47:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                        "typeString": "struct CrossChainSwaps.SrcTransferParams"
                      },
                      "typeName": {
                        "id": 30829,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30828,
                          "name": "CrossChainSwaps.SrcTransferParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27309,
                          "src": "2071:33:43"
                        },
                        "referencedDeclaration": 27309,
                        "src": "2071:33:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SrcTransferParams_$27309_storage_ptr",
                          "typeString": "struct CrossChainSwaps.SrcTransferParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30840,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30833,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30768,
                        "src": "2168:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30836,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30664,
                            "src": "2184:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2176:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30834,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2176:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2176:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30838,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30779,
                        "src": "2192:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30831,
                        "name": "CrossChainSwaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28280,
                        "src": "2121:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossChainSwaps_$28280_$",
                          "typeString": "type(contract CrossChainSwaps)"
                        }
                      },
                      "id": 30832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SrcTransferParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27309,
                      "src": "2121:46:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$27309_storage_ptr_$",
                        "typeString": "type(struct CrossChainSwaps.SrcTransferParams storage pointer)"
                      }
                    },
                    "id": 30839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                      "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2071:129:43"
                },
                {
                  "expression": {
                    "id": 30848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30841,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30757,
                        "src": "2210:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 30843,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 30842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2210:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30846,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30830,
                          "src": "2231:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        ],
                        "expression": {
                          "id": 30844,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2220:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 30845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2220:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 30847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2220:18:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2210:28:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 30849,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:28:43"
                },
                {
                  "assignments": [
                    30851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30851,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2256:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30907,
                      "src": "2248:11:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2248:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30861,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30852,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30662,
                      "src": "2262:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 30855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 30853,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30662,
                                  "src": "2268:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "39393935",
                                  "id": 30854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2272:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9995_by_1",
                                    "typeString": "int_const 9995"
                                  },
                                  "value": "9995"
                                },
                                "src": "2268:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 30856,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2267:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316534",
                            "id": 30857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2280:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "1e4"
                          },
                          "src": "2267:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30859,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2266:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2262:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2248:36:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30865,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30746,
                        "src": "2342:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 30866,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30757,
                        "src": "2349:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 30862,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30557,
                        "src": "2330:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                          "typeString": "contract CrossChainSwaps"
                        }
                      },
                      "id": 30864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28265,
                      "src": "2330:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 30867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:24:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30868,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:24:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30876,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30664,
                                "src": "2420:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 30875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2412:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30874,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2412:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2412:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30871,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30560,
                                "src": "2394:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30870,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "2387:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2387:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "2387:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2387:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2447:7:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 30880,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2447:7:43",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 30879,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2442:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 30882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2442:13:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 30883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "2442:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 30884,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30851,
                              "src": "2462:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2442:23:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30886,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2441:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30869,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "2365:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:111:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30888,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:111:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 30896,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30557,
                                "src": "2528:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 30895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2520:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30894,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2520:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2520:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 30891,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30560,
                                "src": "2502:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 30890,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "2495:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 30892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2495:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 30893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "2495:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 30898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2495:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2537:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 30889,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "2486:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30901,
                  "nodeType": "ExpressionStatement",
                  "src": "2486:53:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30902,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2549:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6982,
                      "src": "2549:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30906,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:14:43"
                }
              ]
            },
            "functionSelector": "8d05dda8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSingleDeposits",
            "nameLocation": "1348:18:43",
            "parameters": {
              "id": 30665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30662,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1375:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30908,
                  "src": "1367:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30664,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1386:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30908,
                  "src": "1378:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1366:26:43"
            },
            "returnParameters": {
              "id": 30666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:43"
            },
            "scope": 31319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31303,
            "nodeType": "FunctionDefinition",
            "src": "2595:1969:43",
            "body": {
              "id": 31302,
              "nodeType": "Block",
              "src": "2655:1909:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30918,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30910,
                          "src": "2675:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2679:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2675:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30915,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2665:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2665:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2665:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30922,
                  "nodeType": "ExpressionStatement",
                  "src": "2665:16:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30926,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30910,
                          "src": "2701:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2710:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                },
                                "typeName": {
                                  "id": 30928,
                                  "name": "uint216",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2710:7:43",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint216_$",
                                  "typeString": "type(uint216)"
                                }
                              ],
                              "id": 30927,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2705:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 30930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2705:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint216",
                              "typeString": "type(uint216)"
                            }
                          },
                          "id": 30931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "2705:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint216",
                            "typeString": "uint216"
                          }
                        },
                        "src": "2701:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30923,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2691:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2691:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2691:32:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30934,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:32:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30938,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30912,
                          "src": "2743:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2760:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2752:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2752:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2752:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2743:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30935,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2733:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2733:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2733:30:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30945,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30949,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30912,
                          "src": "2783:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30952,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2800:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapsUnitTest_$31319",
                                "typeString": "contract SwapsUnitTest"
                              }
                            ],
                            "id": 30951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2792:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30950,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2792:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2792:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2783:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30946,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2773:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7112,
                      "src": "2773:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 30955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:33:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30956,
                  "nodeType": "ExpressionStatement",
                  "src": "2773:33:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30961,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30912,
                        "src": "2840:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2852:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30963,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2852:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30962,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2847:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2847:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2847:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30958,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30560,
                            "src": "2823:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30957,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "2816:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2816:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "2816:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2816:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30968,
                  "nodeType": "ExpressionStatement",
                  "src": "2816:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30973,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30912,
                        "src": "2899:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2911:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30975,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2911:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30974,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2906:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2906:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2906:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30970,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30563,
                            "src": "2882:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30969,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "2875:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2875:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "2875:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30980,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30985,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30912,
                        "src": "2958:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2970:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30987,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2970:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 30986,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2965:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 30990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2965:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30982,
                            "name": "token3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30566,
                            "src": "2941:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30981,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "2934:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 30983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "2934:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 30991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30992,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30996,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30912,
                        "src": "3007:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30993,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "2993:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6965,
                      "src": "2993:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2993:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30998,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:20:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31005,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30557,
                            "src": "3054:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 31004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3046:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31003,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3046:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3046:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3067:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 31008,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3067:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 31007,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3062:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3062:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 31011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3062:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31000,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30560,
                            "src": "3030:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 30999,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3023:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 31001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3023:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 31002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3023:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:57:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31013,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:57:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31020,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30557,
                            "src": "3121:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 31019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3113:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3113:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3113:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3134:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 31023,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3134:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 31022,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3129:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3129:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 31026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3129:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31015,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30563,
                            "src": "3097:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 31014,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3090:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 31016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3090:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 31017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3090:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:57:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31028,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:57:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31035,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30557,
                            "src": "3188:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                              "typeString": "contract CrossChainSwaps"
                            }
                          ],
                          "id": 31034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3180:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31033,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3180:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3180:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3201:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 31038,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3201:7:43",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 31037,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3196:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3196:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 31041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3196:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31030,
                            "name": "token3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30566,
                            "src": "3164:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 31029,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "3157:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 31031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3157:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 31032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24677,
                      "src": "3157:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3157:57:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31043,
                  "nodeType": "ExpressionStatement",
                  "src": "3157:57:43"
                },
                {
                  "assignments": [
                    31048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31048,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "3239:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3224:20:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31046,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3224:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 31047,
                        "nodeType": "ArrayTypeName",
                        "src": "3224:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31054,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 31052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3259:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 31051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3247:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31049,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3251:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 31050,
                        "nodeType": "ArrayTypeName",
                        "src": "3251:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 31053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3224:37:43"
                },
                {
                  "assignments": [
                    31059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31059,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3286:4:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3271:19:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31057,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3271:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 31058,
                        "nodeType": "ArrayTypeName",
                        "src": "3271:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31065,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 31063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3305:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 31062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3293:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31060,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3297:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 31061,
                        "nodeType": "ArrayTypeName",
                        "src": "3297:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 31064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3271:36:43"
                },
                {
                  "assignments": [
                    31070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31070,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "3334:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3317:23:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31068,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3317:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31069,
                        "nodeType": "ArrayTypeName",
                        "src": "3317:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31076,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 31074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3357:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 31073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3343:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3347:7:43",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31072,
                        "nodeType": "ArrayTypeName",
                        "src": "3347:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 31075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3317:42:43"
                },
                {
                  "assignments": [
                    31081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31081,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "3386:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3369:24:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3369:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31080,
                        "nodeType": "ArrayTypeName",
                        "src": "3369:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31087,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 31085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3410:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 31084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3396:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3400:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31083,
                        "nodeType": "ArrayTypeName",
                        "src": "3400:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 31086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3369:43:43"
                },
                {
                  "expression": {
                    "id": 31095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31088,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31070,
                        "src": "3422:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 31090,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 31089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3429:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3422:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31093,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30560,
                          "src": "3442:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 31092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3434:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3434:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3434:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3422:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31096,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:27:43"
                },
                {
                  "expression": {
                    "id": 31104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31097,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31070,
                        "src": "3459:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 31099,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 31098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3466:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3459:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31102,
                          "name": "token2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30563,
                          "src": "3479:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 31101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3471:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3471:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3471:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3459:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31105,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:27:43"
                },
                {
                  "expression": {
                    "id": 31113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31106,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31070,
                        "src": "3496:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 31108,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 31107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3503:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3496:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31111,
                          "name": "token3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30566,
                          "src": "3516:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$30256",
                            "typeString": "contract MockERC20"
                          }
                        ],
                        "id": 31110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3508:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3508:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3508:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3496:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31114,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:27:43"
                },
                {
                  "expression": {
                    "id": 31119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31115,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31081,
                        "src": "3533:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 31117,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 31116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3541:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3533:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31118,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30910,
                      "src": "3546:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3533:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31120,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:14:43"
                },
                {
                  "expression": {
                    "id": 31125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31121,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31081,
                        "src": "3557:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 31123,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 31122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3557:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31124,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30910,
                      "src": "3570:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3557:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31126,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:14:43"
                },
                {
                  "expression": {
                    "id": 31131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31127,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31081,
                        "src": "3581:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 31129,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 31128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3589:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3581:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31130,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30910,
                      "src": "3594:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3581:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31132,
                  "nodeType": "ExpressionStatement",
                  "src": "3581:14:43"
                },
                {
                  "expression": {
                    "id": 31137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31133,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31048,
                        "src": "3605:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 31135,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 31134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3611:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3605:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 31136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3616:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3605:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 31138,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:12:43"
                },
                {
                  "expression": {
                    "id": 31143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31139,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31048,
                        "src": "3627:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 31141,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 31140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3633:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3627:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 31142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3638:2:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "3627:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 31144,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:13:43"
                },
                {
                  "expression": {
                    "id": 31153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31145,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31059,
                        "src": "3650:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 31147,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 31146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3655:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3650:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31150,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31070,
                          "src": "3671:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 31151,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31081,
                          "src": "3679:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
                          "id": 31148,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3660:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 31149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "3660:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 31152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3660:27:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3650:37:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 31154,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:37:43"
                },
                {
                  "assignments": [
                    31159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31159,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3738:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3697:47:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                        "typeString": "struct CrossChainSwaps.SrcTransferParams"
                      },
                      "typeName": {
                        "id": 31158,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31157,
                          "name": "CrossChainSwaps.SrcTransferParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27309,
                          "src": "3697:33:43"
                        },
                        "referencedDeclaration": 27309,
                        "src": "3697:33:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SrcTransferParams_$27309_storage_ptr",
                          "typeString": "struct CrossChainSwaps.SrcTransferParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31162,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31070,
                        "src": "3794:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31165,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30912,
                            "src": "3810:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3802:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31163,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3802:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3802:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31167,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31081,
                        "src": "3818:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 31160,
                        "name": "CrossChainSwaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28280,
                        "src": "3747:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossChainSwaps_$28280_$",
                          "typeString": "type(contract CrossChainSwaps)"
                        }
                      },
                      "id": 31161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SrcTransferParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27309,
                      "src": "3747:46:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$27309_storage_ptr_$",
                        "typeString": "type(struct CrossChainSwaps.SrcTransferParams storage pointer)"
                      }
                    },
                    "id": 31168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                      "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3697:129:43"
                },
                {
                  "expression": {
                    "id": 31177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31170,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31059,
                        "src": "3836:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 31172,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 31171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3841:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3836:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31175,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31159,
                          "src": "3857:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$27309_memory_ptr",
                            "typeString": "struct CrossChainSwaps.SrcTransferParams memory"
                          }
                        ],
                        "expression": {
                          "id": 31173,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3846:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 31174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "3846:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 31176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3846:18:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3836:28:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 31178,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:28:43"
                },
                {
                  "assignments": [
                    31180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31180,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "3882:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31302,
                      "src": "3874:11:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3874:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31181,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30910,
                      "src": "3888:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 31184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 31182,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30910,
                                  "src": "3894:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "39393935",
                                  "id": 31183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3898:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9995_by_1",
                                    "typeString": "int_const 9995"
                                  },
                                  "value": "9995"
                                },
                                "src": "3894:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 31185,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3893:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316534",
                            "id": 31186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3906:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "1e4"
                          },
                          "src": "3893:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31188,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3892:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3888:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3874:36:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31194,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31048,
                        "src": "3968:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 31195,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31059,
                        "src": "3975:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 31191,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30557,
                        "src": "3956:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                          "typeString": "contract CrossChainSwaps"
                        }
                      },
                      "id": 31193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28265,
                      "src": "3956:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 31196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:24:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31197,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:24:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31205,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30912,
                                "src": "4046:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 31204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4038:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31203,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4038:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4038:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31200,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30560,
                                "src": "4020:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31199,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4013:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4013:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4013:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4013:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 31214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4073:7:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 31209,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4073:7:43",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 31208,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4068:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 31211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4068:13:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 31212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4068:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 31213,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31180,
                              "src": "4088:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4068:23:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 31215,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4067:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31198,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "3991:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3991:111:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31217,
                  "nodeType": "ExpressionStatement",
                  "src": "3991:111:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31225,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30912,
                                "src": "4167:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 31224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4159:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31223,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4159:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4159:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31220,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30563,
                                "src": "4141:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31219,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4134:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4134:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4134:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4134:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 31234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4194:7:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 31229,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4194:7:43",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 31228,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4189:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 31231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4189:13:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 31232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4189:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 31233,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31180,
                              "src": "4209:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4189:23:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 31235,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4188:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31218,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4112:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4112:111:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31237,
                  "nodeType": "ExpressionStatement",
                  "src": "4112:111:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31245,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30912,
                                "src": "4288:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 31244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4280:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31243,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4280:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4280:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31240,
                                "name": "token3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30566,
                                "src": "4262:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31239,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4255:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4255:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4255:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4255:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 31254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4315:7:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 31249,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4315:7:43",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 31248,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4310:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 31251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4310:13:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 31252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4310:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 31253,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31180,
                              "src": "4330:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4310:23:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 31255,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4309:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31238,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4233:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4233:111:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31257,
                  "nodeType": "ExpressionStatement",
                  "src": "4233:111:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31265,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30557,
                                "src": "4396:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 31264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4388:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31263,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4388:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4388:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31260,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30560,
                                "src": "4370:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31259,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4363:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4363:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4363:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4363:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4405:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 31258,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4354:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31270,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:53:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31278,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30557,
                                "src": "4459:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 31277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4451:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31276,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4451:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4451:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31273,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30563,
                                "src": "4433:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31272,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4426:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4426:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4426:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4426:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4468:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 31271,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4417:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31283,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:53:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31291,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30557,
                                "src": "4522:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossChainSwaps_$28280",
                                  "typeString": "contract CrossChainSwaps"
                                }
                              ],
                              "id": 31290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4514:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4514:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4514:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 31286,
                                "name": "token3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30566,
                                "src": "4496:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$30256",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 31285,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24690,
                              "src": "4489:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 31287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4489:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24690",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 31288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24647,
                          "src": "4489:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 31293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4489:40:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4531:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 31284,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3584,
                        3609,
                        3622,
                        3638,
                        3680,
                        3722,
                        3764,
                        3801,
                        3838,
                        3875,
                        737,
                        762,
                        792,
                        817,
                        876,
                        901,
                        931,
                        956,
                        2056,
                        2091
                      ],
                      "referencedDeclaration": 931,
                      "src": "4480:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4480:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31296,
                  "nodeType": "ExpressionStatement",
                  "src": "4480:53:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "4543:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7501",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6982,
                      "src": "4543:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4543:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31301,
                  "nodeType": "ExpressionStatement",
                  "src": "4543:14:43"
                }
              ]
            },
            "functionSelector": "64cc11fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchDeposits",
            "nameLocation": "2604:17:43",
            "parameters": {
              "id": 30913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30910,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2630:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31303,
                  "src": "2622:9:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30912,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "2641:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31303,
                  "src": "2633:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:26:43"
            },
            "returnParameters": {
              "id": 30914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:0:43"
            },
            "scope": 31319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31318,
            "nodeType": "FunctionDefinition",
            "src": "4570:85:43",
            "body": {
              "id": 31317,
              "nodeType": "Block",
              "src": "4596:59:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31312,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30572,
                            "src": "4638:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4630:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4630:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4630:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4646:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31307,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30560,
                            "src": "4613:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$30256",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 31306,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24690,
                          "src": "4606:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24690_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 31308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4606:14:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 31309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24657,
                      "src": "4606:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4606:42:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31316,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:42:43"
                }
              ]
            },
            "functionSelector": "8855ba81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSTF",
            "nameLocation": "4579:7:43",
            "parameters": {
              "id": 31304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4586:2:43"
            },
            "returnParameters": {
              "id": 31305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4596:0:43"
            },
            "scope": 31319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30553,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5396,
              "src": "353:4:43"
            },
            "id": 30554,
            "nodeType": "InheritanceSpecifier",
            "src": "353:4:43"
          }
        ],
        "canonicalName": "SwapsUnitTest",
        "contractDependencies": [
          28280,
          30256
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31319,
          5396,
          2466,
          2203
        ],
        "name": "SwapsUnitTest",
        "nameLocation": "336:13:43",
        "scope": 31320,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 43
}