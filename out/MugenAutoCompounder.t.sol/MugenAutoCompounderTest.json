{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMACDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMACWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferAndApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546201000162ff00ff19909116179055600980546001600160a01b031990811673d783947ce4924147f35b319bd247ee628e7fb0be17909155600a8054909116731f98431c8ad98523631ae4a59f267346ea31f98417905534801561006b57600080fd5b50613bed8061007b6000396000f3fe60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063ba414fa6116200006e578063ba414fa6146200010c578063d333f2e91462000127578063ef3202bb1462000131578063f8ccbf47146200013b578063fa7626d4146200014f57600080fd5b80630a9254e414620000a457806324050b4014620000b05780633a76846314620000ba578063a2152e3214620000f3575b600080fd5b620000ae6200015d565b005b620000ae62000233565b620000d6737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000fd6200045e565b604051908152602001620000ea565b6200011662000792565b6040519015158152602001620000ea565b620000ae620008c7565b620000ae62000b33565b600054620001169062010000900460ff1681565b600054620001169060ff1681565b600a5460405173fc77b86f3ade71793e1eec1e7944db074922856e916001600160a01b03169061271090620001929062000f13565b6001600160a01b03938416815260a0602082018190526007908201526639ba26bab3b2b760c91b60c082015260e0604082018190526005908201526439ba26a3a760d91b61010082015292909116606083015262ffffff16608082015261012001604051809103906000f08015801562000210573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6009546040516370a0823160e01b81526001600160a01b03909116600482015260009073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b9919062000f21565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200031657600080fd5b505af11580156200032b573d6000803e3d6000fd5b5073fc77b86f3ade71793e1eec1e7944db074922856e925063a9059cbb91503090506200035a60028562000f3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc919062000f5e565b5060085460405163095ea7b360e01b81526001600160a01b039091166004820152600019602482015273fc77b86f3ade71793e1eec1e7944db074922856e9063095ea7b3906044016020604051808303816000875af115801562000434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045a919062000f5e565b5050565b6009546040516370a0823160e01b81526001600160a01b039091166004820152600090819073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa158015620004c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e6919062000f21565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200054357600080fd5b505af115801562000558573d6000803e3d6000fd5b5073fc77b86f3ade71793e1eec1e7944db074922856e925063a9059cbb91503090506200058760028562000f3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620005d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f9919062000f5e565b5060085460405163095ea7b360e01b81526001600160a01b039091166004820152600019602482015273fc77b86f3ade71793e1eec1e7944db074922856e9063095ea7b3906044016020604051808303816000875af115801562000661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000687919062000f5e565b506008546001600160a01b0316636e553f65620006a660038462000f3b565b6040516001600160e01b031960e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015620006eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000711919062000f21565b50600860009054906101000a90046001600160a01b03166001600160a01b031663ed8602a26040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000766573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078c919062000f21565b91505090565b60008054610100900460ff1615620007b35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008c25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000844917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000fc7565b60408051601f1981840301815290829052620008609162000fed565b6000604051808303816000865af19150503d80600081146200089f576040519150601f19603f3d011682016040523d82523d6000602084013e620008a4565b606091505b5091505080806020019051810190620008be919062000f5e565b9150505b919050565b620008d162000b33565b6040516370a0823160e01b815230600482015260009073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200094a919062000f21565b600854604051632d182be560e21b815268056bc75e2d631000006004820152306024820181905260448201529192506001600160a01b03169063b460af94906064016020604051808303816000875af1158015620009ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d2919062000f21565b50600854604080516278744560e21b8152905162000a4d926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000a1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a45919062000f21565b600062000cdb565b600854604080516318160ddd60e01b8152905162000a9a926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000a1f573d6000803e3d6000fd5b6040516370a0823160e01b815230600482015262000b309073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000aef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b15919062000f21565b62000b2a8368056bc75e2d6310000062000ffb565b62000cdb565b50565b62000b3d62000233565b600854604051636e553f6560e01b815268056bc75e2d6310000060048201523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af115801562000b97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bbd919062000f21565b506008546040516370a0823160e01b815230600482015262000c40916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000c0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c30919062000f21565b68056bc75e2d6310000062000cdb565b600854604080516318160ddd60e01b8152905162000c8d926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000c0a573d6000803e3d6000fd5b600854604080516278744560e21b8152905162000cd9926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000c0a573d6000803e3d6000fd5b565b8082146200045a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d4e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200045a737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000e9d929160200162000fc7565b60408051601f198184030181529082905262000eb99162000fed565b6000604051808303816000865af19150503d806000811462000ef8576040519150601f19603f3d011682016040523d82523d6000602084013e62000efd565b606091505b505050505b6000805461ff001916610100179055565b612b95806200102383390190565b60006020828403121562000f3457600080fd5b5051919050565b60008262000f5957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121562000f7157600080fd5b8151801515811462000f8257600080fd5b9392505050565b6000815160005b8181101562000fac576020818501810151868301520162000f90565b8181111562000fbc576000828601525b509290920192915050565b6001600160e01b031983168152600062000fe5600483018462000f89565b949350505050565b600062000f82828462000f89565b600082198211156200101d57634e487b7160e01b600052601160045260246000fd5b50019056fe60e06040523480156200001157600080fd5b5060405162002b9538038062002b9583398101604081905262000034916200039b565b8484846003620000458382620004dd565b506004620000548282620004dd565b5050506000806200006b83620001bc60201b60201c565b915091508162000090576200008a620002a360201b62000b251760201c565b62000092565b805b60ff1660a05250506001600160a01b03908116608052604051630b4c774160e11b815273fc77b86f3ade71793e1eec1e7944db074922856e60048201527382af49447d8a07e3bd95bd0d56f35241523fbab1602482015262ffffff83166044820152600091841690631698ee8290606401602060405180830381865afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001479190620005a9565b90506001600160a01b038116620001a45760405162461bcd60e51b815260206004820152601360248201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604482015260640160405180910390fd5b6001600160a01b031660c05250620006089350505050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b038716916200020591620005d0565b6000604051808303816000865af19150503d806000811462000244576040519150601f19603f3d011682016040523d82523d6000602084013e62000249565b606091505b50915091508180156200025e57506020815110155b1562000296576000818060200190518101906200027c9190620005ee565b905060ff811162000294576001969095509350505050565b505b5060009485945092505050565b601290565b6001600160a01b0381168114620002be57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002f4578181015183820152602001620002da565b8381111562000304576000848401525b50505050565b600082601f8301126200031c57600080fd5b81516001600160401b0380821115620003395762000339620002c1565b604051601f8301601f19908116603f01168101908282118183101715620003645762000364620002c1565b816040528381528660208588010111156200037e57600080fd5b62000391846020830160208901620002d7565b9695505050505050565b600080600080600060a08688031215620003b457600080fd5b8551620003c181620002a8565b60208701519095506001600160401b0380821115620003df57600080fd5b620003ed89838a016200030a565b955060408801519150808211156200040457600080fd5b5062000413888289016200030a565b93505060608601516200042681620002a8565b608087015190925062ffffff811681146200044057600080fd5b809150509295509295909350565b600181811c908216806200046357607f821691505b6020821081036200048457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004d857600081815260208120601f850160051c81016020861015620004b35750805b601f850160051c820191505b81811015620004d457828155600101620004bf565b5050505b505050565b81516001600160401b03811115620004f957620004f9620002c1565b62000511816200050a84546200044e565b846200048a565b602080601f831160018114620005495760008415620005305750858301515b600019600386901b1c1916600185901b178555620004d4565b600085815260208120601f198616915b828110156200057a5788860151825594840194600190910190840162000559565b5085821015620005995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620005bc57600080fd5b8151620005c981620002a8565b9392505050565b60008251620005e4818460208701620002d7565b9190910192915050565b6000602082840312156200060157600080fd5b5051919050565b60805160a05160c05161253a6200065b6000396000818161027e0152610ac1015260006102da0152600081816103060152818161055501528181610ef001528181610fc20152611481015261253a6000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637d4a987e1161011a578063ba087652116100ad578063d905777e1161007c578063d905777e14610492578063dd62ed3e146104a5578063ed72ade6146104b8578063ed8602a2146104c2578063ef8b30f71461046c57600080fd5b8063ba08765214610444578063c63d75b614610457578063c6e6f5921461046c578063ce96cb771461047f57600080fd5b8063a9059cbb116100e9578063a9059cbb146103f0578063ad5c464814610403578063b3d7f6b91461041e578063b460af941461043157600080fd5b80637d4a987e146103a757806394bf804d146103c257806395d89b41146103d5578063a457c2d7146103dd57600080fd5b8063313ce56711610192578063402d267d11610161578063402d267d146103585780634cdad506146102305780636e553f651461036b57806370a082311461037e57600080fd5b8063313ce567146102d357806338d52e0f14610304578063395093511461032a5780633a4b66f11461033d57600080fd5b80630a28a477116101ce5780630a28a4771461026657806316f0115b1461027957806318160ddd146102b857806323b872dd146102c057600080fd5b806301e1d1141461020057806306fdde031461021b57806307a2d13a14610230578063095ea7b314610243575b600080fd5b6102086104ca565b6040519081526020015b60405180910390f35b6102236105d7565b6040516102129190611efd565b61020861023e366004611f30565b610669565b610256610251366004611f61565b61067c565b6040519015158152602001610212565b610208610274366004611f30565b610694565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610212565b600254610208565b6102566102ce366004611f8d565b6106a1565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610212565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b610256610338366004611f61565b6106c7565b6102a07325b9f82d1f1549f97b86bd0873738e30f23d15ea81565b610208610366366004611fce565b6106e9565b610208610379366004611feb565b610707565b61020861038c366004611fce565b6001600160a01b031660009081526020819052604090205490565b6102a073fc77b86f3ade71793e1eec1e7944db074922856e81565b6102086103d0366004611feb565b61077f565b610223610799565b6102566103eb366004611f61565b6107a8565b6102566103fe366004611f61565b61082e565b6102a07382af49447d8a07e3bd95bd0d56f35241523fbab181565b61020861042c366004611f30565b61083c565b61020861043f36600461201b565b610849565b61020861045236600461201b565b6108c5565b610208610465366004611fce565b5060001990565b61020861047a366004611f30565b610939565b61020861048d366004611fce565b610946565b6102086104a0366004611fce565b61096a565b6102086104b336600461205d565b610988565b6104c06109b3565b005b610208610a42565b6040516370a0823160e01b81523060048201526000907325b9f82d1f1549f97b86bd0873738e30f23d15ea906370a0823190602401602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610540919061208b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c8919061208b565b6105d291906120ba565b905090565b6060600380546105e6906120d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906120d2565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050905090565b6000610676826000610b2a565b92915050565b60003361068a818585610b5d565b5060019392505050565b6000610676826001610c81565b6000336106af858285610cb3565b6106ba858585610d2d565b60019150505b9392505050565b60003361068a8185856106da8383610988565b6106e491906120ba565b610b5d565b60006106f3610ed1565b6106fe576000610676565b60001992915050565b6000610712826106e9565b8311156107665760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b600061077184610939565b90506106c033848684610eeb565b60008061078b8461083c565b90506106c033848387610eeb565b6060600480546105e6906120d2565b600033816107b68286610988565b9050838110156108165760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161075d565b6108238286868403610b5d565b506001949350505050565b60003361068a818585610d2d565b6000610676826001610b2a565b600061085482610946565b8411156108a35760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d617800604482015260640161075d565b60006108ae85610694565b90506108bd3385858885610f86565b949350505050565b60006108d08261096a565b84111561091f5760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d6178000000604482015260640161075d565b600061092a85610669565b90506108bd3385858489610f86565b6000610676826000610c81565b6001600160a01b038116600090815260208190526040812054610676906000610b2a565b6001600160a01b038116600090815260208190526040812054610676565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006127106109c0610a42565b6109cc906126ac61210c565b6109d69190612141565b60405163552fbf1360e11b8152600481018290529091507325b9f82d1f1549f97b86bd0873738e30f23d15ea9063aa5f7e26906024015b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b5050505050565b6040516246613160e11b815230600482015260009081907325b9f82d1f1549f97b86bd0873738e30f23d15ea90628cc26290602401602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab8919061208b565b90506000610ae77f000000000000000000000000000000000000000000000000000000000000000060b461104f565b509050610b1e81837382af49447d8a07e3bd95bd0d56f35241523fbab173fc77b86f3ade71793e1eec1e7944db074922856e611299565b9250505090565b601290565b600080610b3660025490565b90508015610b5757610b52610b496104ca565b859083866113a7565b6108bd565b836108bd565b6001600160a01b038316610bbf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161075d565b6001600160a01b038216610c205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161075d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c8d60025490565b9050831580610c9a575080155b610b5757610b5281610caa6104ca565b869190866113a7565b6000610cbf8484610988565b90506000198114610d275781811015610d1a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161075d565b610d278484848403610b5d565b50505050565b6001600160a01b038316610d915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161075d565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161075d565b6001600160a01b03831660009081526020819052604090205481811015610e6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161075d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d27565b600080610edc6104ca565b11806105d25750506002541590565b610f177f0000000000000000000000000000000000000000000000000000000000000000853085611409565b610f2082611474565b610f2a838261155d565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f78929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610faa57610faa838683610cb3565b610fb4838261161c565b610fbd8261174e565b610fe87f00000000000000000000000000000000000000000000000000000000000000008584611786565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051611040929190918252602082015260400190565b60405180910390a45050505050565b6000808263ffffffff1660000361108d5760405162461bcd60e51b8152602060048201526002602482015261042560f41b604482015260640161075d565b60408051600280825260608201835260009260208301908036833701905050905083816000815181106110c2576110c261216b565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106110f1576110f161216b565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b815260040161113a9190612181565b600060405180830381865afa158015611157573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261117f9190810190612294565b915091506000826000815181106111985761119861216b565b6020026020010151836001815181106111b3576111b361216b565b60200260200101516111c59190612360565b90506000826000815181106111dc576111dc61216b565b6020026020010151836001815181106111f7576111f761216b565b602002602001015161120991906123b0565b905061121b63ffffffff8916836123d8565b965060008260060b128015611241575061123b63ffffffff891683612416565b60060b15155b15611254578661125081612438565b9750505b600061126d6001600160a01b0363ffffffff8b1661245b565b905061128a640100000000600160c01b03602084901b168261248a565b96505050505050509250929050565b6000806112a5866117b6565b90506001600160801b036001600160a01b0382161161132b5760006112d36001600160a01b0383168061210c565b9050836001600160a01b0316856001600160a01b03161061130b57611306600160c01b876001600160801b031683611ad9565b611323565b61132381876001600160801b0316600160c01b611ad9565b92505061139e565b600061134a6001600160a01b0383168068010000000000000000611ad9565b9050836001600160a01b0316856001600160a01b0316106113825761137d600160801b876001600160801b031683611ad9565b61139a565b61139a81876001600160801b0316600160801b611ad9565b9250505b50949350505050565b6000806113b5868686611b8b565b905060018360028111156113cb576113cb6124b0565b1480156113e85750600084806113e3576113e361212b565b868809115b156113fb576113f86001826120ba565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d279085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c3a565b6114bc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167325b9f82d1f1549f97b86bd0873738e30f23d15ea83611d0c565b60405163534a7e1d60e11b8152600481018290527325b9f82d1f1549f97b86bd0873738e30f23d15ea9063a694fc3a90602401600060405180830381600087803b15801561150957600080fd5b505af115801561151d573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca278160405161155291815260200190565b60405180910390a150565b6001600160a01b0382166115b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161075d565b80600260008282546115c591906120ba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661167c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161075d565b6001600160a01b038216600090815260208190526040902054818110156116f05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161075d565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b604051632e1a7d4d60e01b8152600481018290527325b9f82d1f1549f97b86bd0873738e30f23d15ea90632e1a7d4d90602401610a0d565b6040516001600160a01b03831660248201526044810182905261140490849063a9059cbb60e01b9060640161143d565b60008060008360020b126117cd578260020b6117d5565b8260020b6000035b9050620d89e88111156117fb576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361181257600160801b611824565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611858576ffff97272373d413259a46990580e213a0260801c5b6004821615611877576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611896576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156118b5576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156118d4576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156118f3576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611912576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611932576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611952576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611972576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611992576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156119b2576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156119d2576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156119f2576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611a12576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611a33576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611a53576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611a72576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611a8f576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611ab0578060001981611aac57611aac61212b565b0490505b640100000000810615611ac4576001611ac7565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600003611b125760008411611b0757600080fd5b5082900490506106c0565b808411611b1e57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000808060001985870985870292508281108382030391505080600003611bc557838281611bbb57611bbb61212b565b04925050506106c0565b808411611bd157600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000611c8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611dbe9092919063ffffffff16565b8051909150156114045780806020019051810190611cad91906124c6565b6114045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161075d565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d81919061208b565b611d8b91906120ba565b6040516001600160a01b038516602482015260448101829052909150610d2790859063095ea7b360e01b9060640161143d565b60606108bd848460008585600080866001600160a01b03168587604051611de591906124e8565b60006040518083038185875af1925050503d8060008114611e22576040519150601f19603f3d011682016040523d82523d6000602084013e611e27565b606091505b509150915061139a8783838760608315611ea2578251600003611e9b576001600160a01b0385163b611e9b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161075d565b50816108bd565b6108bd8383815115611eb75781518083602001fd5b8060405162461bcd60e51b815260040161075d9190611efd565b60005b83811015611eec578181015183820152602001611ed4565b83811115610d275750506000910152565b6020815260008251806020840152611f1c816040850160208701611ed1565b601f01601f19169190910160400192915050565b600060208284031215611f4257600080fd5b5035919050565b6001600160a01b0381168114611f5e57600080fd5b50565b60008060408385031215611f7457600080fd5b8235611f7f81611f49565b946020939093013593505050565b600080600060608486031215611fa257600080fd5b8335611fad81611f49565b92506020840135611fbd81611f49565b929592945050506040919091013590565b600060208284031215611fe057600080fd5b81356106c081611f49565b60008060408385031215611ffe57600080fd5b82359150602083013561201081611f49565b809150509250929050565b60008060006060848603121561203057600080fd5b83359250602084013561204281611f49565b9150604084013561205281611f49565b809150509250925092565b6000806040838503121561207057600080fd5b823561207b81611f49565b9150602083013561201081611f49565b60006020828403121561209d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156120cd576120cd6120a4565b500190565b600181811c908216806120e657607f821691505b60208210810361210657634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612126576121266120a4565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826121505761215061212b565b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156121bf57835163ffffffff168352928401929184019160010161219d565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156121f4576121f4612155565b604052919050565b600067ffffffffffffffff82111561221657612216612155565b5060051b60200190565b600082601f83011261223157600080fd5b81516020612246612241836121fc565b6121cb565b82815260059290921b8401810191818101908684111561226557600080fd5b8286015b8481101561228957805161227c81611f49565b8352918301918301612269565b509695505050505050565b600080604083850312156122a757600080fd5b825167ffffffffffffffff808211156122bf57600080fd5b818501915085601f8301126122d357600080fd5b815160206122e3612241836121fc565b82815260059290921b8401810191818101908984111561230257600080fd5b948201945b838610156123305785518060060b81146123215760008081fd5b82529482019490820190612307565b9188015191965090935050508082111561234957600080fd5b5061235685828601612220565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561238b5761238b6120a4565b81667fffffffffffff0183138116156123a6576123a66120a4565b5090039392505050565b60006001600160a01b03838116908316818110156123d0576123d06120a4565b039392505050565b60008160060b8360060b806123ef576123ef61212b565b667fffffffffffff1982146000198214161561240d5761240d6120a4565b90059392505050565b60008260060b806124295761242961212b565b808360060b0791505092915050565b60008160020b627fffff198103612451576124516120a4565b6000190192915050565b60006001600160c01b0382811684821681151582840482111615612481576124816120a4565b02949350505050565b60006001600160c01b03838116806124a4576124a461212b565b92169190910492915050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156124d857600080fd5b815180151581146106c057600080fd5b600082516124fa818460208701611ed1565b919091019291505056fea264697066735822122071bafcec3b869004adfb273c5551f79723d955f7dad7f8f3bd7a4a65d68b7cc864736f6c634300080f0033a2646970667358221220ad459fb5b23ee17239df05d8c2cfa3326f5481c7cc9f0939746e4f76a472d2cc64736f6c634300080f0033",
    "sourceMap": "229:2280:89:-:0;;;1572:26:7;;;170:28:8;-1:-1:-1;;170:28:8;;;;;;305:72:89;;;-1:-1:-1;;;;;;305:72:89;;;334:42;305:72;;;;383:69;;;;;;409:42;383:69;;;229:2280;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063ba414fa6116200006e578063ba414fa6146200010c578063d333f2e91462000127578063ef3202bb1462000131578063f8ccbf47146200013b578063fa7626d4146200014f57600080fd5b80630a9254e414620000a457806324050b4014620000b05780633a76846314620000ba578063a2152e3214620000f3575b600080fd5b620000ae6200015d565b005b620000ae62000233565b620000d6737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000fd6200045e565b604051908152602001620000ea565b6200011662000792565b6040519015158152602001620000ea565b620000ae620008c7565b620000ae62000b33565b600054620001169062010000900460ff1681565b600054620001169060ff1681565b600a5460405173fc77b86f3ade71793e1eec1e7944db074922856e916001600160a01b03169061271090620001929062000f13565b6001600160a01b03938416815260a0602082018190526007908201526639ba26bab3b2b760c91b60c082015260e0604082018190526005908201526439ba26a3a760d91b61010082015292909116606083015262ffffff16608082015261012001604051809103906000f08015801562000210573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b6009546040516370a0823160e01b81526001600160a01b03909116600482015260009073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b9919062000f21565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200031657600080fd5b505af11580156200032b573d6000803e3d6000fd5b5073fc77b86f3ade71793e1eec1e7944db074922856e925063a9059cbb91503090506200035a60028562000f3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620003a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003cc919062000f5e565b5060085460405163095ea7b360e01b81526001600160a01b039091166004820152600019602482015273fc77b86f3ade71793e1eec1e7944db074922856e9063095ea7b3906044016020604051808303816000875af115801562000434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045a919062000f5e565b5050565b6009546040516370a0823160e01b81526001600160a01b039091166004820152600090819073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa158015620004c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e6919062000f21565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200054357600080fd5b505af115801562000558573d6000803e3d6000fd5b5073fc77b86f3ade71793e1eec1e7944db074922856e925063a9059cbb91503090506200058760028562000f3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015620005d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f9919062000f5e565b5060085460405163095ea7b360e01b81526001600160a01b039091166004820152600019602482015273fc77b86f3ade71793e1eec1e7944db074922856e9063095ea7b3906044016020604051808303816000875af115801562000661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000687919062000f5e565b506008546001600160a01b0316636e553f65620006a660038462000f3b565b6040516001600160e01b031960e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015620006eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000711919062000f21565b50600860009054906101000a90046001600160a01b03166001600160a01b031663ed8602a26040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000766573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078c919062000f21565b91505090565b60008054610100900460ff1615620007b35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008c25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000844917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000fc7565b60408051601f1981840301815290829052620008609162000fed565b6000604051808303816000865af19150503d80600081146200089f576040519150601f19603f3d011682016040523d82523d6000602084013e620008a4565b606091505b5091505080806020019051810190620008be919062000f5e565b9150505b919050565b620008d162000b33565b6040516370a0823160e01b815230600482015260009073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200094a919062000f21565b600854604051632d182be560e21b815268056bc75e2d631000006004820152306024820181905260448201529192506001600160a01b03169063b460af94906064016020604051808303816000875af1158015620009ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d2919062000f21565b50600854604080516278744560e21b8152905162000a4d926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000a1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a45919062000f21565b600062000cdb565b600854604080516318160ddd60e01b8152905162000a9a926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000a1f573d6000803e3d6000fd5b6040516370a0823160e01b815230600482015262000b309073fc77b86f3ade71793e1eec1e7944db074922856e906370a0823190602401602060405180830381865afa15801562000aef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b15919062000f21565b62000b2a8368056bc75e2d6310000062000ffb565b62000cdb565b50565b62000b3d62000233565b600854604051636e553f6560e01b815268056bc75e2d6310000060048201523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af115801562000b97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bbd919062000f21565b506008546040516370a0823160e01b815230600482015262000c40916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000c0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c30919062000f21565b68056bc75e2d6310000062000cdb565b600854604080516318160ddd60e01b8152905162000c8d926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000c0a573d6000803e3d6000fd5b600854604080516278744560e21b8152905162000cd9926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000c0a573d6000803e3d6000fd5b565b8082146200045a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d4e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200045a737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000e9d929160200162000fc7565b60408051601f198184030181529082905262000eb99162000fed565b6000604051808303816000865af19150503d806000811462000ef8576040519150601f19603f3d011682016040523d82523d6000602084013e62000efd565b606091505b505050505b6000805461ff001916610100179055565b612b95806200102383390190565b60006020828403121562000f3457600080fd5b5051919050565b60008262000f5957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121562000f7157600080fd5b8151801515811462000f8257600080fd5b9392505050565b6000815160005b8181101562000fac576020818501810151868301520162000f90565b8181111562000fbc576000828601525b509290920192915050565b6001600160e01b031983168152600062000fe5600483018462000f89565b949350505050565b600062000f82828462000f89565b600082198211156200101d57634e487b7160e01b600052601160045260246000fd5b50019056fe60e06040523480156200001157600080fd5b5060405162002b9538038062002b9583398101604081905262000034916200039b565b8484846003620000458382620004dd565b506004620000548282620004dd565b5050506000806200006b83620001bc60201b60201c565b915091508162000090576200008a620002a360201b62000b251760201c565b62000092565b805b60ff1660a05250506001600160a01b03908116608052604051630b4c774160e11b815273fc77b86f3ade71793e1eec1e7944db074922856e60048201527382af49447d8a07e3bd95bd0d56f35241523fbab1602482015262ffffff83166044820152600091841690631698ee8290606401602060405180830381865afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001479190620005a9565b90506001600160a01b038116620001a45760405162461bcd60e51b815260206004820152601360248201527f506f6f6c20646f6573206e6f7420657869737400000000000000000000000000604482015260640160405180910390fd5b6001600160a01b031660c05250620006089350505050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b038716916200020591620005d0565b6000604051808303816000865af19150503d806000811462000244576040519150601f19603f3d011682016040523d82523d6000602084013e62000249565b606091505b50915091508180156200025e57506020815110155b1562000296576000818060200190518101906200027c9190620005ee565b905060ff811162000294576001969095509350505050565b505b5060009485945092505050565b601290565b6001600160a01b0381168114620002be57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002f4578181015183820152602001620002da565b8381111562000304576000848401525b50505050565b600082601f8301126200031c57600080fd5b81516001600160401b0380821115620003395762000339620002c1565b604051601f8301601f19908116603f01168101908282118183101715620003645762000364620002c1565b816040528381528660208588010111156200037e57600080fd5b62000391846020830160208901620002d7565b9695505050505050565b600080600080600060a08688031215620003b457600080fd5b8551620003c181620002a8565b60208701519095506001600160401b0380821115620003df57600080fd5b620003ed89838a016200030a565b955060408801519150808211156200040457600080fd5b5062000413888289016200030a565b93505060608601516200042681620002a8565b608087015190925062ffffff811681146200044057600080fd5b809150509295509295909350565b600181811c908216806200046357607f821691505b6020821081036200048457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004d857600081815260208120601f850160051c81016020861015620004b35750805b601f850160051c820191505b81811015620004d457828155600101620004bf565b5050505b505050565b81516001600160401b03811115620004f957620004f9620002c1565b62000511816200050a84546200044e565b846200048a565b602080601f831160018114620005495760008415620005305750858301515b600019600386901b1c1916600185901b178555620004d4565b600085815260208120601f198616915b828110156200057a5788860151825594840194600190910190840162000559565b5085821015620005995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620005bc57600080fd5b8151620005c981620002a8565b9392505050565b60008251620005e4818460208701620002d7565b9190910192915050565b6000602082840312156200060157600080fd5b5051919050565b60805160a05160c05161253a6200065b6000396000818161027e0152610ac1015260006102da0152600081816103060152818161055501528181610ef001528181610fc20152611481015261253a6000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637d4a987e1161011a578063ba087652116100ad578063d905777e1161007c578063d905777e14610492578063dd62ed3e146104a5578063ed72ade6146104b8578063ed8602a2146104c2578063ef8b30f71461046c57600080fd5b8063ba08765214610444578063c63d75b614610457578063c6e6f5921461046c578063ce96cb771461047f57600080fd5b8063a9059cbb116100e9578063a9059cbb146103f0578063ad5c464814610403578063b3d7f6b91461041e578063b460af941461043157600080fd5b80637d4a987e146103a757806394bf804d146103c257806395d89b41146103d5578063a457c2d7146103dd57600080fd5b8063313ce56711610192578063402d267d11610161578063402d267d146103585780634cdad506146102305780636e553f651461036b57806370a082311461037e57600080fd5b8063313ce567146102d357806338d52e0f14610304578063395093511461032a5780633a4b66f11461033d57600080fd5b80630a28a477116101ce5780630a28a4771461026657806316f0115b1461027957806318160ddd146102b857806323b872dd146102c057600080fd5b806301e1d1141461020057806306fdde031461021b57806307a2d13a14610230578063095ea7b314610243575b600080fd5b6102086104ca565b6040519081526020015b60405180910390f35b6102236105d7565b6040516102129190611efd565b61020861023e366004611f30565b610669565b610256610251366004611f61565b61067c565b6040519015158152602001610212565b610208610274366004611f30565b610694565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610212565b600254610208565b6102566102ce366004611f8d565b6106a1565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610212565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b610256610338366004611f61565b6106c7565b6102a07325b9f82d1f1549f97b86bd0873738e30f23d15ea81565b610208610366366004611fce565b6106e9565b610208610379366004611feb565b610707565b61020861038c366004611fce565b6001600160a01b031660009081526020819052604090205490565b6102a073fc77b86f3ade71793e1eec1e7944db074922856e81565b6102086103d0366004611feb565b61077f565b610223610799565b6102566103eb366004611f61565b6107a8565b6102566103fe366004611f61565b61082e565b6102a07382af49447d8a07e3bd95bd0d56f35241523fbab181565b61020861042c366004611f30565b61083c565b61020861043f36600461201b565b610849565b61020861045236600461201b565b6108c5565b610208610465366004611fce565b5060001990565b61020861047a366004611f30565b610939565b61020861048d366004611fce565b610946565b6102086104a0366004611fce565b61096a565b6102086104b336600461205d565b610988565b6104c06109b3565b005b610208610a42565b6040516370a0823160e01b81523060048201526000907325b9f82d1f1549f97b86bd0873738e30f23d15ea906370a0823190602401602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610540919061208b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c8919061208b565b6105d291906120ba565b905090565b6060600380546105e6906120d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906120d2565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050905090565b6000610676826000610b2a565b92915050565b60003361068a818585610b5d565b5060019392505050565b6000610676826001610c81565b6000336106af858285610cb3565b6106ba858585610d2d565b60019150505b9392505050565b60003361068a8185856106da8383610988565b6106e491906120ba565b610b5d565b60006106f3610ed1565b6106fe576000610676565b60001992915050565b6000610712826106e9565b8311156107665760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b600061077184610939565b90506106c033848684610eeb565b60008061078b8461083c565b90506106c033848387610eeb565b6060600480546105e6906120d2565b600033816107b68286610988565b9050838110156108165760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161075d565b6108238286868403610b5d565b506001949350505050565b60003361068a818585610d2d565b6000610676826001610b2a565b600061085482610946565b8411156108a35760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d617800604482015260640161075d565b60006108ae85610694565b90506108bd3385858885610f86565b949350505050565b60006108d08261096a565b84111561091f5760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d6178000000604482015260640161075d565b600061092a85610669565b90506108bd3385858489610f86565b6000610676826000610c81565b6001600160a01b038116600090815260208190526040812054610676906000610b2a565b6001600160a01b038116600090815260208190526040812054610676565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006127106109c0610a42565b6109cc906126ac61210c565b6109d69190612141565b60405163552fbf1360e11b8152600481018290529091507325b9f82d1f1549f97b86bd0873738e30f23d15ea9063aa5f7e26906024015b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b5050505050565b6040516246613160e11b815230600482015260009081907325b9f82d1f1549f97b86bd0873738e30f23d15ea90628cc26290602401602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab8919061208b565b90506000610ae77f000000000000000000000000000000000000000000000000000000000000000060b461104f565b509050610b1e81837382af49447d8a07e3bd95bd0d56f35241523fbab173fc77b86f3ade71793e1eec1e7944db074922856e611299565b9250505090565b601290565b600080610b3660025490565b90508015610b5757610b52610b496104ca565b859083866113a7565b6108bd565b836108bd565b6001600160a01b038316610bbf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161075d565b6001600160a01b038216610c205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161075d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c8d60025490565b9050831580610c9a575080155b610b5757610b5281610caa6104ca565b869190866113a7565b6000610cbf8484610988565b90506000198114610d275781811015610d1a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161075d565b610d278484848403610b5d565b50505050565b6001600160a01b038316610d915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161075d565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161075d565b6001600160a01b03831660009081526020819052604090205481811015610e6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161075d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d27565b600080610edc6104ca565b11806105d25750506002541590565b610f177f0000000000000000000000000000000000000000000000000000000000000000853085611409565b610f2082611474565b610f2a838261155d565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f78929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610faa57610faa838683610cb3565b610fb4838261161c565b610fbd8261174e565b610fe87f00000000000000000000000000000000000000000000000000000000000000008584611786565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051611040929190918252602082015260400190565b60405180910390a45050505050565b6000808263ffffffff1660000361108d5760405162461bcd60e51b8152602060048201526002602482015261042560f41b604482015260640161075d565b60408051600280825260608201835260009260208301908036833701905050905083816000815181106110c2576110c261216b565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106110f1576110f161216b565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b815260040161113a9190612181565b600060405180830381865afa158015611157573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261117f9190810190612294565b915091506000826000815181106111985761119861216b565b6020026020010151836001815181106111b3576111b361216b565b60200260200101516111c59190612360565b90506000826000815181106111dc576111dc61216b565b6020026020010151836001815181106111f7576111f761216b565b602002602001015161120991906123b0565b905061121b63ffffffff8916836123d8565b965060008260060b128015611241575061123b63ffffffff891683612416565b60060b15155b15611254578661125081612438565b9750505b600061126d6001600160a01b0363ffffffff8b1661245b565b905061128a640100000000600160c01b03602084901b168261248a565b96505050505050509250929050565b6000806112a5866117b6565b90506001600160801b036001600160a01b0382161161132b5760006112d36001600160a01b0383168061210c565b9050836001600160a01b0316856001600160a01b03161061130b57611306600160c01b876001600160801b031683611ad9565b611323565b61132381876001600160801b0316600160c01b611ad9565b92505061139e565b600061134a6001600160a01b0383168068010000000000000000611ad9565b9050836001600160a01b0316856001600160a01b0316106113825761137d600160801b876001600160801b031683611ad9565b61139a565b61139a81876001600160801b0316600160801b611ad9565b9250505b50949350505050565b6000806113b5868686611b8b565b905060018360028111156113cb576113cb6124b0565b1480156113e85750600084806113e3576113e361212b565b868809115b156113fb576113f86001826120ba565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d279085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c3a565b6114bc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167325b9f82d1f1549f97b86bd0873738e30f23d15ea83611d0c565b60405163534a7e1d60e11b8152600481018290527325b9f82d1f1549f97b86bd0873738e30f23d15ea9063a694fc3a90602401600060405180830381600087803b15801561150957600080fd5b505af115801561151d573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca278160405161155291815260200190565b60405180910390a150565b6001600160a01b0382166115b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161075d565b80600260008282546115c591906120ba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661167c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161075d565b6001600160a01b038216600090815260208190526040902054818110156116f05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161075d565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b604051632e1a7d4d60e01b8152600481018290527325b9f82d1f1549f97b86bd0873738e30f23d15ea90632e1a7d4d90602401610a0d565b6040516001600160a01b03831660248201526044810182905261140490849063a9059cbb60e01b9060640161143d565b60008060008360020b126117cd578260020b6117d5565b8260020b6000035b9050620d89e88111156117fb576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361181257600160801b611824565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611858576ffff97272373d413259a46990580e213a0260801c5b6004821615611877576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611896576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156118b5576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156118d4576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156118f3576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611912576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611932576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611952576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611972576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611992576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156119b2576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156119d2576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156119f2576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611a12576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611a33576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611a53576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611a72576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611a8f576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611ab0578060001981611aac57611aac61212b565b0490505b640100000000810615611ac4576001611ac7565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600003611b125760008411611b0757600080fd5b5082900490506106c0565b808411611b1e57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000808060001985870985870292508281108382030391505080600003611bc557838281611bbb57611bbb61212b565b04925050506106c0565b808411611bd157600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000611c8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611dbe9092919063ffffffff16565b8051909150156114045780806020019051810190611cad91906124c6565b6114045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161075d565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d81919061208b565b611d8b91906120ba565b6040516001600160a01b038516602482015260448101829052909150610d2790859063095ea7b360e01b9060640161143d565b60606108bd848460008585600080866001600160a01b03168587604051611de591906124e8565b60006040518083038185875af1925050503d8060008114611e22576040519150601f19603f3d011682016040523d82523d6000602084013e611e27565b606091505b509150915061139a8783838760608315611ea2578251600003611e9b576001600160a01b0385163b611e9b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161075d565b50816108bd565b6108bd8383815115611eb75781518083602001fd5b8060405162461bcd60e51b815260040161075d9190611efd565b60005b83811015611eec578181015183820152602001611ed4565b83811115610d275750506000910152565b6020815260008251806020840152611f1c816040850160208701611ed1565b601f01601f19169190910160400192915050565b600060208284031215611f4257600080fd5b5035919050565b6001600160a01b0381168114611f5e57600080fd5b50565b60008060408385031215611f7457600080fd5b8235611f7f81611f49565b946020939093013593505050565b600080600060608486031215611fa257600080fd5b8335611fad81611f49565b92506020840135611fbd81611f49565b929592945050506040919091013590565b600060208284031215611fe057600080fd5b81356106c081611f49565b60008060408385031215611ffe57600080fd5b82359150602083013561201081611f49565b809150509250929050565b60008060006060848603121561203057600080fd5b83359250602084013561204281611f49565b9150604084013561205281611f49565b809150509250925092565b6000806040838503121561207057600080fd5b823561207b81611f49565b9150602083013561201081611f49565b60006020828403121561209d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156120cd576120cd6120a4565b500190565b600181811c908216806120e657607f821691505b60208210810361210657634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612126576121266120a4565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826121505761215061212b565b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156121bf57835163ffffffff168352928401929184019160010161219d565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156121f4576121f4612155565b604052919050565b600067ffffffffffffffff82111561221657612216612155565b5060051b60200190565b600082601f83011261223157600080fd5b81516020612246612241836121fc565b6121cb565b82815260059290921b8401810191818101908684111561226557600080fd5b8286015b8481101561228957805161227c81611f49565b8352918301918301612269565b509695505050505050565b600080604083850312156122a757600080fd5b825167ffffffffffffffff808211156122bf57600080fd5b818501915085601f8301126122d357600080fd5b815160206122e3612241836121fc565b82815260059290921b8401810191818101908984111561230257600080fd5b948201945b838610156123305785518060060b81146123215760008081fd5b82529482019490820190612307565b9188015191965090935050508082111561234957600080fd5b5061235685828601612220565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561238b5761238b6120a4565b81667fffffffffffff0183138116156123a6576123a66120a4565b5090039392505050565b60006001600160a01b03838116908316818110156123d0576123d06120a4565b039392505050565b60008160060b8360060b806123ef576123ef61212b565b667fffffffffffff1982146000198214161561240d5761240d6120a4565b90059392505050565b60008260060b806124295761242961212b565b808360060b0791505092915050565b60008160020b627fffff198103612451576124516120a4565b6000190192915050565b60006001600160c01b0382811684821681151582840482111615612481576124816120a4565b02949350505050565b60006001600160c01b03838116806124a4576124a461212b565b92169190910492915050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156124d857600080fd5b815180151581146106c057600080fd5b600082516124fa818460208701611ed1565b919091019291505056fea264697066735822122071bafcec3b869004adfb273c5551f79723d955f7dad7f8f3bd7a4a65d68b7cc864736f6c634300080f0033a2646970667358221220ad459fb5b23ee17239df05d8c2cfa3326f5481c7cc9f0939746e4f76a472d2cc64736f6c634300080f0033",
    "sourceMap": "229:2280:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:228;;;:::i;:::-;;1254:451;;;:::i;321:38:8:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:93;;;171:51;;159:2;144:18;321:38:8;;;;;;;;693:555:89;;;:::i;:::-;;;379:25:93;;;367:2;352:18;693:555:89;233:177:93;1819:584:7;;;:::i;:::-;;;580:14:93;;573:22;555:41;;543:2;528:18;1819:584:7;415:187:93;1993:514:89;;;:::i;1711:276::-;;;:::i;170:28:8:-;;;;;;;;;;;;1572:26:7;;;;;;;;;459:228:89;644:7;;499:181;;543:42;;-1:-1:-1;;;;;644:7:89;;665:5;;499:181;;;:::i;:::-;-1:-1:-1;;;;;1059:15:93;;;1041:34;;1021:3;1106:2;1091:18;;1084:31;;;1152:1;1131:19;;;1124:30;-1:-1:-1;;;1185:3:93;1170:19;;1163:38;1237:3;1232:2;1217:18;;1210:31;;;1278:1;1257:19;;;1250:30;-1:-1:-1;;;1311:3:93;1296:19;;1289:36;1397:15;;;;-1:-1:-1;1377:18:93;;1370:43;1462:8;1450:21;-1:-1:-1;1429:19:93;;1422:50;1357:3;1342:19;499:181:89;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;493:3:89;:187;;-1:-1:-1;;;;;;493:187:89;-1:-1:-1;;;;;493:187:89;;;;;;;;;;459:228::o;1254:451::-;1392:10;;1318:85;;-1:-1:-1;;;1318:85:89;;-1:-1:-1;;;;;1392:10:89;;;1318:85;;;171:51:93;1301:14:89;;1325:42;;1318:73;;144:18:93;;1318:85:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1422:10;;1413:20;;-1:-1:-1;;;1413:20:89;;-1:-1:-1;;;;;1422:10:89;;;1413:20;;;171:51:93;1301:102:89;;-1:-1:-1;250:64:8;;1413:8:89;;144:18:93;;1413:20:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1450:42:89;;-1:-1:-1;1443:59:89;;-1:-1:-1;1524:4:89;;-1:-1:-1;1543:10:89;1552:1;1543:6;:10;:::i;:::-;1443:120;;-1:-1:-1;;;;;;1443:120:89;;;;;;;-1:-1:-1;;;;;2294:32:93;;;1443:120:89;;;2276:51:93;2343:18;;;2336:34;2249:18;;1443:120:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1653:3:89;;1573:125;;-1:-1:-1;;;1573:125:89;;-1:-1:-1;;;;;1653:3:89;;;1573:125;;;2276:51:93;-1:-1:-1;;2343:18:93;;;2336:34;1580:42:89;;1573:58;;2249:18:93;;1573:125:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1291:414;1254:451::o;693:555::-;847:10;;773:85;;-1:-1:-1;;;773:85:89;;-1:-1:-1;;;;;847:10:89;;;773:85;;;171:51:93;731:13:89;;;;780:42;;773:73;;144:18:93;;773:85:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;877:10;;868:20;;-1:-1:-1;;;868:20:89;;-1:-1:-1;;;;;877:10:89;;;868:20;;;171:51:93;756:102:89;;-1:-1:-1;250:64:8;;868:8:89;;144:18:93;;868:20:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;905:42:89;;-1:-1:-1;898:59:89;;-1:-1:-1;979:4:89;;-1:-1:-1;998:10:89;1007:1;998:6;:10;:::i;:::-;898:120;;-1:-1:-1;;;;;;898:120:89;;;;;;;-1:-1:-1;;;;;2294:32:93;;;898:120:89;;;2276:51:93;2343:18;;;2336:34;2249:18;;898:120:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1108:3:89;;1028:125;;-1:-1:-1;;;1028:125:89;;-1:-1:-1;;;;;1108:3:89;;;1028:125;;;2276:51:93;-1:-1:-1;;2343:18:93;;;2336:34;1035:42:89;;1028:58;;2249:18:93;;1028:125:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1163:3:89;;-1:-1:-1;;;;;1163:3:89;:11;1175:10;1184:1;1175:6;:10;:::i;:::-;1163:38;;-1:-1:-1;;;;;;1163:38:89;;;;;;;;;;2837:25:93;;;;1195:4:89;2878:18:93;;;2871:60;2810:18;;1163:38:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1219:3;;;;;;;;;-1:-1:-1;;;;;1219:3:89;-1:-1:-1;;;;;1219:20:89;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:30;;746:502;693:555;:::o;1819:584:7:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:7;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2276:51:93;;;-1:-1:-1;;;2343:18:93;;;2336:34;2196:43:7;;;;;;;;;2249:18:93;;;2196:43:7;;;-1:-1:-1;;1671:64:7;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:7;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:7:o;1993:514:89:-;2037:16;:14;:16::i;:::-;2084:88;;-1:-1:-1;;;2084:88:89;;2166:4;2084:88;;;171:51:93;2063:18:89;;2091:42;;2084:73;;144:18:93;;2084:88:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2182:3;;:54;;-1:-1:-1;;;2182:54:89;;2195:10;2182:54;;;4269:25:93;2215:4:89;4348:18:93;;;4341:43;;;4400:18;;;4393:43;2063:109:89;;-1:-1:-1;;;;;;2182:3:89;;:12;;4242:18:93;;2182:54:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2255:3:89;;:17;;;-1:-1:-1;;;2255:17:89;;;;2246:30;;-1:-1:-1;;;;;2255:3:89;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2274:1;2246:8;:30::i;:::-;2295:3;;:17;;;-1:-1:-1;;;2295:17:89;;;;2286:30;;-1:-1:-1;;;;;2295:3:89;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;2286:30;2348:105;;-1:-1:-1;;;2348:105:89;;2434:4;2348:105;;;171:51:93;2326:174:89;;2355:42;;2348:60;;144:18:93;;2348:105:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2467:23;:10;2480;2467:23;:::i;:::-;2326:8;:174::i;:::-;2027:480;1993:514::o;1711:276::-;1754:20;:18;:20::i;:::-;1784:3;;:38;;-1:-1:-1;;;1784:38:89;;1796:10;1784:38;;;2837:25:93;1816:4:89;2878:18:93;;;2871:60;-1:-1:-1;;;;;1784:3:89;;;;:11;;2810:18:93;;1784:38:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1841:3:89;;:28;;-1:-1:-1;;;1841:28:89;;1863:4;1841:28;;;171:51:93;1832:50:89;;-1:-1:-1;;;;;1841:3:89;;:13;;144:18:93;;1841:28:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1871:10;1832:8;:50::i;:::-;1901:3;;:17;;;-1:-1:-1;;;1901:17:89;;;;1892:39;;-1:-1:-1;;;;;1901:3:89;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;1892:39;1950:3;;:17;;;-1:-1:-1;;;1950:17:89;;;;1941:39;;-1:-1:-1;;;;;1950:3:89;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;1941:39;1711:276::o;5202:262:7:-;5264:1;5259;:6;5255:203;;5286:41;;;;;5186:2:93;5168:21;;;5225:2;5205:18;;;5198:30;5264:34;5259:2;5244:18;;5237:62;-1:-1:-1;;;5330:2:93;5315:18;;5308:32;5372:3;5357:19;;4984:398;5286:41:7;;;;;;;;5346:31;;;5599:21:93;;;5656:2;5636:18;;;5629:30;-1:-1:-1;;;5690:2:93;5675:18;;5668:40;5775:4;5760:20;;5753:36;;;5346:31:7;;;;;;;5740:3:93;5346:31:7;;;5396;;;6012:21:93;;;6069:2;6049:18;;;6042:30;-1:-1:-1;;;6103:2:93;6088:18;;6081:40;6188:4;6173:20;;6166:36;;;5396:31:7;;;;;;;6153:3:93;5396:31:7;;;5441:6;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;6415:51:93;;;-1:-1:-1;;;6482:18:93;;;6475:34;;;;2705:4:7;6525:18:93;;;6518:34;2482:11:7;;1671:64;2579:43;;6388:18:93;;2645:67:7;;;-1:-1:-1;;2645:67:7;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:7;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:7;2813:7;:14;;-1:-1:-1;;2813:14:7;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;1691:184:93:-;1761:6;1814:2;1802:9;1793:7;1789:23;1785:32;1782:52;;;1830:1;1827;1820:12;1782:52;-1:-1:-1;1853:16:93;;1691:184;-1:-1:-1;1691:184:93:o;1880:217::-;1920:1;1946;1936:132;;1990:10;1985:3;1981:20;1978:1;1971:31;2025:4;2022:1;2015:15;2053:4;2050:1;2043:15;1936:132;-1:-1:-1;2082:9:93;;1880:217::o;2381:277::-;2448:6;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2549:9;2543:16;2602:5;2595:13;2588:21;2581:5;2578:32;2568:60;;2624:1;2621;2614:12;2568:60;2647:5;2381:277;-1:-1:-1;;;2381:277:93:o;3221:336::-;3262:3;3300:5;3294:12;3324:1;3334:128;3348:6;3345:1;3342:13;3334:128;;;3445:4;3430:13;;;3426:24;;3420:31;3407:11;;;3400:52;3363:12;3334:128;;;3480:6;3477:1;3474:13;3471:48;;;3515:1;3506:6;3501:3;3497:16;3490:27;3471:48;-1:-1:-1;3535:16:93;;;;;3221:336;-1:-1:-1;;3221:336:93:o;3562:278::-;-1:-1:-1;;;;;;3747:33:93;;3735:46;;3717:3;3797:37;3831:1;3822:11;;3814:6;3797:37;:::i;:::-;3790:44;3562:278;-1:-1:-1;;;;3562:278:93:o;3845:189::-;3974:3;3999:29;4024:3;4016:6;3999:29;:::i;4447:225::-;4487:3;4518:1;4514:6;4511:1;4508:13;4505:136;;;4563:10;4558:3;4554:20;4551:1;4544:31;4598:4;4595:1;4588:15;4626:4;4623:1;4616:15;4505:136;-1:-1:-1;4657:9:93;;4447:225::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testMACDeposit()": "ef3202bb",
    "testMACWithdraw()": "d333f2e9",
    "testOracle()": "a2152e32",
    "transferAndApprove()": "24050b40",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMACDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMACWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferAndApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MugenAutoCompounder.t.sol\":\"MugenAutoCompounderTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-core/=lib/joe-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-core/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b\",\"dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef\",\"dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x796f1fba71e1565d0af60f54ebf355353551cab26d876dc525891661a5361893\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7879399417caa821dd9105f9b3bca61b3b634f8d614ef11173842aa1c2bbda2d\",\"dweb:/ipfs/QmfX1wojKhdNUseJNLd9xPGTaQmi7YPV69tRKLZk5fqpM8\"]},\"src/MugenAutoCompounder.sol\":{\"keccak256\":\"0xcc773f925e2584cf41818c95282b23bba1020bb192e850f0930c3640e7b9e16a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d1da7bdfc0d715b161a33a554bec05bf23749dead64bd75d55255e203a854c\",\"dweb:/ipfs/QmZ2PGVLsDghsFZHMKZ5K9CtERku6JAfF4qw3mkReTfa5W\"]},\"src/interfaces/IStake.sol\":{\"keccak256\":\"0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6\",\"dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313\",\"dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5\"]},\"test/MugenAutoCompounder.t.sol\":{\"keccak256\":\"0xd27099f4823d4e99e8e734ab345b1c504512fca1d49b83dfa87e5e2ac673a5c2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b60942745657cec890f4475a46a26545c6337fb2629839fa3501093c2e0d9de5\",\"dweb:/ipfs/QmSreiPuGewfQ5cR9RX1zG2Z6K5JyXW5uTE53KJEREU1mo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMACDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMACWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOracle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndApprove"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-core/=lib/joe-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-core/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MugenAutoCompounder.t.sol": "MugenAutoCompounderTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a",
        "urls": [
          "bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b",
          "dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31",
        "urls": [
          "bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef",
          "dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x796f1fba71e1565d0af60f54ebf355353551cab26d876dc525891661a5361893",
        "urls": [
          "bzz-raw://7879399417caa821dd9105f9b3bca61b3b634f8d614ef11173842aa1c2bbda2d",
          "dweb:/ipfs/QmfX1wojKhdNUseJNLd9xPGTaQmi7YPV69tRKLZk5fqpM8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/MugenAutoCompounder.sol": {
        "keccak256": "0xcc773f925e2584cf41818c95282b23bba1020bb192e850f0930c3640e7b9e16a",
        "urls": [
          "bzz-raw://28d1da7bdfc0d715b161a33a554bec05bf23749dead64bd75d55255e203a854c",
          "dweb:/ipfs/QmZ2PGVLsDghsFZHMKZ5K9CtERku6JAfF4qw3mkReTfa5W"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStake.sol": {
        "keccak256": "0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290",
        "urls": [
          "bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6",
          "dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV"
        ],
        "license": "MIT"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x92e8a810abc8f9da3f75e8312d471e8d24320fdbfab55accc55112811ec702b4",
        "urls": [
          "bzz-raw://d049d569923bcfd8653582e6e3cec9678e50cf3c9880cb176fb705eb5848d313",
          "dweb:/ipfs/QmTzGyeSoPqZWAzgqwYEiGMhFU1CikWE9eR7ky9zidA7c5"
        ],
        "license": "MIT"
      },
      "test/MugenAutoCompounder.t.sol": {
        "keccak256": "0xd27099f4823d4e99e8e734ab345b1c504512fca1d49b83dfa87e5e2ac673a5c2",
        "urls": [
          "bzz-raw://b60942745657cec890f4475a46a26545c6337fb2629839fa3501093c2e0d9de5",
          "dweb:/ipfs/QmSreiPuGewfQ5cR9RX1zG2Z6K5JyXW5uTE53KJEREU1mo"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MugenAutoCompounder.t.sol",
    "id": 42964,
    "exportedSymbols": {
      "Context": [
        26807
      ],
      "DSTest": [
        2249
      ],
      "ERC20": [
        25353
      ],
      "ERC4626": [
        26113
      ],
      "FullMath": [
        32756
      ],
      "IERC20": [
        25431
      ],
      "IERC20Metadata": [
        26138
      ],
      "IStake": [
        41259
      ],
      "IUniswapV3Factory": [
        32123
      ],
      "IUniswapV3Pool": [
        32145
      ],
      "IUniswapV3PoolActions": [
        32255
      ],
      "IUniswapV3PoolDerivedState": [
        32286
      ],
      "IUniswapV3PoolEvents": [
        32405
      ],
      "IUniswapV3PoolImmutables": [
        32445
      ],
      "IUniswapV3PoolOwnerActions": [
        32471
      ],
      "IUniswapV3PoolState": [
        32579
      ],
      "MockERC20": [
        41344
      ],
      "MugenAutoCompounder": [
        37172
      ],
      "MugenAutoCompounderTest": [
        42963
      ],
      "OracleLibrary": [
        34020
      ],
      "SafeERC20": [
        26455
      ],
      "Script": [
        2512
      ],
      "StdStorage": [
        5540
      ],
      "Test": [
        5442
      ],
      "TickMath": [
        33302
      ],
      "Vm": [
        7547
      ],
      "console": [
        15611
      ],
      "console2": [
        23675
      ],
      "stdError": [
        5512
      ],
      "stdJson": [
        2872
      ],
      "stdMath": [
        6781
      ],
      "stdStorage": [
        6642
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2471:89",
    "nodes": [
      {
        "id": 42693,
        "nodeType": "PragmaDirective",
        "src": "39:24:89",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 42694,
        "nodeType": "ImportDirective",
        "src": "65:28:89",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42964,
        "sourceUnit": 6782,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42695,
        "nodeType": "ImportDirective",
        "src": "94:40:89",
        "absolutePath": "src/MugenAutoCompounder.sol",
        "file": "../src/MugenAutoCompounder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42964,
        "sourceUnit": 37173,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42696,
        "nodeType": "ImportDirective",
        "src": "135:36:89",
        "absolutePath": "src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42964,
        "sourceUnit": 41345,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42697,
        "nodeType": "ImportDirective",
        "src": "172:55:89",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42964,
        "sourceUnit": 25432,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42963,
        "nodeType": "ContractDefinition",
        "src": "229:2280:89",
        "nodes": [
          {
            "id": 42702,
            "nodeType": "VariableDeclaration",
            "src": "276:23:89",
            "constant": false,
            "mutability": "mutable",
            "name": "mac",
            "nameLocation": "296:3:89",
            "scope": 42963,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
              "typeString": "contract MugenAutoCompounder"
            },
            "typeName": {
              "id": 42701,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42700,
                "name": "MugenAutoCompounder",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37172,
                "src": "276:19:89"
              },
              "referencedDeclaration": 37172,
              "src": "276:19:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                "typeString": "contract MugenAutoCompounder"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42708,
            "nodeType": "VariableDeclaration",
            "src": "305:72:89",
            "constant": false,
            "mutability": "mutable",
            "name": "mugenWhale",
            "nameLocation": "313:10:89",
            "scope": 42963,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42703,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307864373833393437636534393234313437663335623331394244323437654536323845376642304245",
                  "id": 42706,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "334:42:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xd783947ce4924147f35b319BD247eE628E7fB0BE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 42705,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "326:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 42704,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:89",
                  "typeDescriptions": {}
                }
              },
              "id": 42707,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "326:51:89",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42714,
            "nodeType": "VariableDeclaration",
            "src": "383:69:89",
            "constant": false,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "391:7:89",
            "scope": 42963,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42709,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "383:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
                  "id": 42712,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "409:42:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 42711,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "401:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 42710,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:7:89",
                  "typeDescriptions": {}
                }
              },
              "id": 42713,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "401:51:89",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42732,
            "nodeType": "FunctionDefinition",
            "src": "459:228:89",
            "body": {
              "id": 42731,
              "nodeType": "Block",
              "src": "483:204:89",
              "statements": [
                {
                  "expression": {
                    "id": 42729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42717,
                      "name": "mac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42702,
                      "src": "493:3:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                        "typeString": "contract MugenAutoCompounder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                              "id": 42722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "543:42:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42721,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25431,
                            "src": "536:6:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 42723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "536:50:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$25431",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "hexValue": "73744d7567656e",
                          "id": 42724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "600:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ba2af6054aec3e2cb5b394a2719cd86e67450a69a1e6a53b8c3690d02cba9c12",
                            "typeString": "literal_string \"stMugen\""
                          },
                          "value": "stMugen"
                        },
                        {
                          "hexValue": "73744d474e",
                          "id": 42725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "623:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e80addcb1b18db3d2d671768732dfd36ba33331e7dd643aad4ab38c71722f99c",
                            "typeString": "literal_string \"stMGN\""
                          },
                          "value": "stMGN"
                        },
                        {
                          "id": 42726,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42714,
                          "src": "644:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "3130303030",
                          "id": 42727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$25431",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ba2af6054aec3e2cb5b394a2719cd86e67450a69a1e6a53b8c3690d02cba9c12",
                            "typeString": "literal_string \"stMugen\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e80addcb1b18db3d2d671768732dfd36ba33331e7dd643aad4ab38c71722f99c",
                            "typeString": "literal_string \"stMGN\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        ],
                        "id": 42720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "499:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$25431_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint24_$returns$_t_contract$_MugenAutoCompounder_$37172_$",
                          "typeString": "function (contract IERC20,string memory,string memory,address,uint24) returns (contract MugenAutoCompounder)"
                        },
                        "typeName": {
                          "id": 42719,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42718,
                            "name": "MugenAutoCompounder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37172,
                            "src": "503:19:89"
                          },
                          "referencedDeclaration": 37172,
                          "src": "503:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                            "typeString": "contract MugenAutoCompounder"
                          }
                        }
                      },
                      "id": 42728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "499:181:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                        "typeString": "contract MugenAutoCompounder"
                      }
                    },
                    "src": "493:187:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                      "typeString": "contract MugenAutoCompounder"
                    }
                  },
                  "id": 42730,
                  "nodeType": "ExpressionStatement",
                  "src": "493:187:89"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "468:5:89",
            "parameters": {
              "id": 42715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:2:89"
            },
            "returnParameters": {
              "id": 42716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:89"
            },
            "scope": 42963,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42799,
            "nodeType": "FunctionDefinition",
            "src": "693:555:89",
            "body": {
              "id": 42798,
              "nodeType": "Block",
              "src": "746:502:89",
              "statements": [
                {
                  "assignments": [
                    42738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42738,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "764:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 42798,
                      "src": "756:14:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "756:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42745,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42743,
                        "name": "mugenWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42708,
                        "src": "847:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "780:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42739,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "773:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "773:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25388,
                      "src": "773:73:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 42744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:85:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "756:102:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42749,
                        "name": "mugenWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42708,
                        "src": "877:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42746,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "868:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7547",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7006,
                      "src": "868:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:20:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42751,
                  "nodeType": "ExpressionStatement",
                  "src": "868:20:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42758,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "979:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "971:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "971:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "971:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42760,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42738,
                          "src": "998:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 42761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1007:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "998:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "905:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42752,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "898:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "898:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25398,
                      "src": "898:59:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:120:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42764,
                  "nodeType": "ExpressionStatement",
                  "src": "898:120:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42771,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "1108:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          ],
                          "id": 42770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1100:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42769,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1100:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1100:12:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1131:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 42774,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1131:7:89",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 42773,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1126:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1126:13:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 42777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1126:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1035:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42765,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "1028:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1028:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25418,
                      "src": "1028:58:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:125:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42779,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:125:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42783,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42738,
                          "src": "1175:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 42784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1184:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "1175:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42788,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1195:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1187:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42786,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1187:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1187:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42780,
                        "name": "mac",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42702,
                        "src": "1163:3:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                          "typeString": "contract MugenAutoCompounder"
                        }
                      },
                      "id": 42782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25795,
                      "src": "1163:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 42790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:38:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42791,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:38:89"
                },
                {
                  "expression": {
                    "id": 42796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42792,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42735,
                      "src": "1211:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 42793,
                          "name": "mac",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42702,
                          "src": "1219:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                            "typeString": "contract MugenAutoCompounder"
                          }
                        },
                        "id": 42794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "estimateAmoutOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37079,
                        "src": "1219:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 42795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1219:22:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1211:30:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42797,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:30:89"
                }
              ]
            },
            "functionSelector": "a2152e32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracle",
            "nameLocation": "702:10:89",
            "parameters": {
              "id": 42733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:2:89"
            },
            "returnParameters": {
              "id": 42736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42735,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "739:5:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 42799,
                  "src": "731:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "730:15:89"
            },
            "scope": 42963,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42846,
            "nodeType": "FunctionDefinition",
            "src": "1254:451:89",
            "body": {
              "id": 42845,
              "nodeType": "Block",
              "src": "1291:414:89",
              "statements": [
                {
                  "assignments": [
                    42803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42803,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1309:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 42845,
                      "src": "1301:14:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42802,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1301:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42810,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42808,
                        "name": "mugenWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42708,
                        "src": "1392:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1325:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42804,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "1318:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1318:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25388,
                      "src": "1318:73:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 42809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:85:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1301:102:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42814,
                        "name": "mugenWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42708,
                        "src": "1422:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42811,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "1413:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7547",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7006,
                      "src": "1413:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:20:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42816,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:20:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42823,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1524:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1516:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1516:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1516:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42825,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42803,
                          "src": "1543:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 42826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1543:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1450:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42817,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "1443:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1443:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25398,
                      "src": "1443:59:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:120:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42829,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:120:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42836,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "1653:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          ],
                          "id": 42835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1645:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42834,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1645:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1645:12:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1676:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 42839,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1676:7:89",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 42838,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1671:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1671:13:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 42842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1671:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1580:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42830,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "1573:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1573:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25418,
                      "src": "1573:58:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:125:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42844,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:125:89"
                }
              ]
            },
            "functionSelector": "24050b40",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndApprove",
            "nameLocation": "1263:18:89",
            "parameters": {
              "id": 42800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:2:89"
            },
            "returnParameters": {
              "id": 42801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:89"
            },
            "scope": 42963,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42896,
            "nodeType": "FunctionDefinition",
            "src": "1711:276:89",
            "body": {
              "id": 42895,
              "nodeType": "Block",
              "src": "1744:243:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42849,
                      "name": "transferAndApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42846,
                      "src": "1754:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:20:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42851,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:20:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 42857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 42855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1796:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 42856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1802:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1796:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42860,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1816:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1808:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42858,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1808:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1808:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42852,
                        "name": "mac",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42702,
                        "src": "1784:3:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                          "typeString": "contract MugenAutoCompounder"
                        }
                      },
                      "id": 42854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25795,
                      "src": "1784:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 42862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:38:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42863,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:38:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42869,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1863:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                                  "typeString": "contract MugenAutoCompounderTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                                  "typeString": "contract MugenAutoCompounderTest"
                                }
                              ],
                              "id": 42868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1855:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1855:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42865,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "1841:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          },
                          "id": 42866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24865,
                          "src": "1841:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1841:28:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 42874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 42872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1871:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 42873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1877:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1871:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 42864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "1832:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:50:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42876,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:50:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42878,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "1901:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          },
                          "id": 42879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24851,
                          "src": "1901:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 42880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1901:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 42883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 42881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1920:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 42882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1926:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1920:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 42877,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "1892:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42885,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:39:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42887,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "1950:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          },
                          "id": 42888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36981,
                          "src": "1950:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 42889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1950:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 42892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 42890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1969:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 42891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1975:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1969:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 42886,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "1941:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42894,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:39:89"
                }
              ]
            },
            "functionSelector": "ef3202bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMACDeposit",
            "nameLocation": "1720:14:89",
            "parameters": {
              "id": 42847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:2:89"
            },
            "returnParameters": {
              "id": 42848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1744:0:89"
            },
            "scope": 42963,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42962,
            "nodeType": "FunctionDefinition",
            "src": "1993:514:89",
            "body": {
              "id": 42961,
              "nodeType": "Block",
              "src": "2027:480:89",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42899,
                      "name": "testMACDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42896,
                      "src": "2037:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:16:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42901,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:16:89"
                },
                {
                  "assignments": [
                    42903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42903,
                      "mutability": "mutable",
                      "name": "preBalance",
                      "nameLocation": "2071:10:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 42961,
                      "src": "2063:18:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2063:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42910,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2166:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2158:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42908,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2158:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2158:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                            "id": 42905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2091:42:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42904,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25431,
                          "src": "2084:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 42906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2084:50:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25431",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 42907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25388,
                      "src": "2084:73:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 42912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:88:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2063:109:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 42919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 42917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2195:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 42918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2201:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2195:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42922,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2215:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2207:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2207:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2207:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42926,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2230:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                              "typeString": "contract MugenAutoCompounderTest"
                            }
                          ],
                          "id": 42925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2222:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2222:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2222:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42914,
                        "name": "mac",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42702,
                        "src": "2182:3:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                          "typeString": "contract MugenAutoCompounder"
                        }
                      },
                      "id": 42916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25872,
                      "src": "2182:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 42928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:54:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42929,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:54:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42931,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "2255:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          },
                          "id": 42932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36981,
                          "src": "2255:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 42933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2255:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2274:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42930,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "2246:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42936,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:30:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 42938,
                            "name": "mac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42702,
                            "src": "2295:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MugenAutoCompounder_$37172",
                              "typeString": "contract MugenAutoCompounder"
                            }
                          },
                          "id": 42939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24851,
                          "src": "2295:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 42940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2314:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42937,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "2286:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42943,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:30:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42951,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2434:4:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                                  "typeString": "contract MugenAutoCompounderTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MugenAutoCompounderTest_$42963",
                                  "typeString": "contract MugenAutoCompounderTest"
                                }
                              ],
                              "id": 42950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2426:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2426:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2426:13:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "307846633737623836463341446537313739334531454563314537393434444230373439323238353665",
                                "id": 42946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2355:42:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0xFc77b86F3ADe71793E1EEc1E7944DB074922856e"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 42945,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25431,
                              "src": "2348:6:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$25431_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 42947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2348:50:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$25431",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 42948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25388,
                          "src": "2348:60:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2348:105:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42954,
                          "name": "preBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42903,
                          "src": "2467:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "id": 42957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030",
                            "id": 42955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2480:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 42956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2486:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "2480:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          }
                        },
                        "src": "2467:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42944,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3630,
                        3655,
                        3668,
                        3684,
                        3726,
                        3768,
                        3810,
                        3847,
                        3884,
                        3921,
                        783,
                        808,
                        838,
                        863,
                        922,
                        947,
                        977,
                        1002,
                        2102,
                        2137
                      ],
                      "referencedDeclaration": 977,
                      "src": "2326:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:174:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42960,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:174:89"
                }
              ]
            },
            "functionSelector": "d333f2e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMACWithdraw",
            "nameLocation": "2002:15:89",
            "parameters": {
              "id": 42897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:2:89"
            },
            "returnParameters": {
              "id": 42898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:0:89"
            },
            "scope": 42963,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42698,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5442,
              "src": "265:4:89"
            },
            "id": 42699,
            "nodeType": "InheritanceSpecifier",
            "src": "265:4:89"
          }
        ],
        "canonicalName": "MugenAutoCompounderTest",
        "contractDependencies": [
          37172
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42963,
          5442,
          2512,
          2249
        ],
        "name": "MugenAutoCompounderTest",
        "nameLocation": "238:23:89",
        "scope": 42964,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 89
}